/*
WARNING: Do NOT edit the input and output ports in this file in a text
editor if you plan to continue editing the block that represents it in
the Block Editor! File corruption is VERY likely to occur.
*/

/*
Copyright (C) 1991-2005 Altera Corporation
Your use of Altera Corporation's design tools, logic functions 
and other software and tools, and its AMPP partner logic       
functions, and any output files any of the foregoing           
(including device programming or simulation files), and any    
associated documentation or information are expressly subject  
to the terms and conditions of the Altera Program License      
Subscription Agreement, Altera MegaCore Function License       
Agreement, or other applicable license agreement, including,   
without limitation, that your use is for the sole purpose of   
programming logic devices manufactured by Altera and sold by   
Altera or its authorized distributors.  Please refer to the    
applicable agreement for further details.
*/

HEADER
{
	VERSION = 1;
	TIME_UNIT = ns;
	SIMULATION_TIME = 80000.0;
	GRID_PHASE = 0.0;
	GRID_PERIOD = 10.0;
	GRID_DUTY_CYCLE = 50;
}

SIGNAL("k_value")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("k_value[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "k_value";
}

SIGNAL("k_value[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "k_value";
}

SIGNAL("k_value[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "k_value";
}

SIGNAL("k_value[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "k_value";
}

SIGNAL("k_value[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "k_value";
}

SIGNAL("k_value[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "k_value";
}

SIGNAL("k_value[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "k_value";
}

SIGNAL("k_value[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "k_value";
}

SIGNAL("sigma_value")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 5;
	LSB_INDEX = 0;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("sigma_value[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "sigma_value";
}

SIGNAL("sigma_value[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "sigma_value";
}

SIGNAL("sigma_value[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "sigma_value";
}

SIGNAL("sigma_value[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "sigma_value";
}

SIGNAL("sigma_value[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "sigma_value";
}

SIGNAL("reset")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("ext_clk")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("errata_loc_coefs_1")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("errata_loc_coefs_1[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "errata_loc_coefs_1";
}

SIGNAL("errata_loc_coefs_1[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "errata_loc_coefs_1";
}

SIGNAL("errata_loc_coefs_1[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "errata_loc_coefs_1";
}

SIGNAL("errata_loc_coefs_1[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "errata_loc_coefs_1";
}

SIGNAL("errata_loc_coefs_1[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "errata_loc_coefs_1";
}

SIGNAL("errata_loc_coefs_1[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "errata_loc_coefs_1";
}

SIGNAL("errata_loc_coefs_0")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("errata_loc_coefs_0[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "errata_loc_coefs_0";
}

SIGNAL("errata_loc_coefs_0[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "errata_loc_coefs_0";
}

SIGNAL("errata_loc_coefs_0[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "errata_loc_coefs_0";
}

SIGNAL("errata_loc_coefs_0[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "errata_loc_coefs_0";
}

SIGNAL("errata_loc_coefs_0[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "errata_loc_coefs_0";
}

SIGNAL("errata_loc_coefs_0[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "errata_loc_coefs_0";
}

SIGNAL("errata_loc_coefs_0[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "errata_loc_coefs_0";
}

SIGNAL("errata_loc_coefs_0[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "errata_loc_coefs_0";
}

SIGNAL("erasure_polyn_2")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("erasure_polyn_2[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "erasure_polyn_2";
}

SIGNAL("erasure_polyn_2[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "erasure_polyn_2";
}

SIGNAL("erasure_polyn_2[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "erasure_polyn_2";
}

SIGNAL("erasure_polyn_2[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "erasure_polyn_2";
}

SIGNAL("erasure_polyn_2[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "erasure_polyn_2";
}

SIGNAL("erasure_polyn_2[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "erasure_polyn_2";
}

SIGNAL("erasure_polyn_2[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "erasure_polyn_2";
}

SIGNAL("erasure_polyn_2[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "erasure_polyn_2";
}

SIGNAL("erasure_polyn_1")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("erasure_polyn_1[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "erasure_polyn_1";
}

SIGNAL("erasure_polyn_1[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "erasure_polyn_1";
}

SIGNAL("errata_magnitude_coefs_1")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("errata_magnitude_coefs_1[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "errata_magnitude_coefs_1";
}

SIGNAL("errata_magnitude_coefs_1[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "errata_magnitude_coefs_1";
}

SIGNAL("errata_magnitude_coefs_1[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "errata_magnitude_coefs_1";
}

SIGNAL("errata_magnitude_coefs_1[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "errata_magnitude_coefs_1";
}

SIGNAL("errata_magnitude_coefs_1[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "errata_magnitude_coefs_1";
}

SIGNAL("errata_magnitude_coefs_1[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "errata_magnitude_coefs_1";
}

SIGNAL("errata_magnitude_coefs_0")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("errata_magnitude_coefs_0[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "errata_magnitude_coefs_0";
}

SIGNAL("errata_magnitude_coefs_0[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "errata_magnitude_coefs_0";
}

SIGNAL("errata_magnitude_coefs_0[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "errata_magnitude_coefs_0";
}

SIGNAL("errata_magnitude_coefs_0[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "errata_magnitude_coefs_0";
}

SIGNAL("errata_magnitude_coefs_0[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "errata_magnitude_coefs_0";
}

SIGNAL("errata_magnitude_coefs_0[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "errata_magnitude_coefs_0";
}

SIGNAL("errata_magnitude_coefs_0[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "errata_magnitude_coefs_0";
}

SIGNAL("errata_magnitude_coefs_0[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "errata_magnitude_coefs_0";
}

SIGNAL("errata_loc_coefs_2")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("errata_loc_coefs_2[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "errata_loc_coefs_2";
}

SIGNAL("errata_loc_coefs_2[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "errata_loc_coefs_2";
}

SIGNAL("errata_loc_coefs_2[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "errata_loc_coefs_2";
}

SIGNAL("errata_loc_coefs_2[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "errata_loc_coefs_2";
}

SIGNAL("errata_loc_coefs_2[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "errata_loc_coefs_2";
}

SIGNAL("errata_loc_coefs_2[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "errata_loc_coefs_2";
}

SIGNAL("errata_loc_coefs_2[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "errata_loc_coefs_2";
}

SIGNAL("errata_loc_coefs_2[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "errata_loc_coefs_2";
}

SIGNAL("errata_loc_coefs_1[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "errata_loc_coefs_1";
}

SIGNAL("errata_loc_coefs_1[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "errata_loc_coefs_1";
}

SIGNAL("erase_position_2")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("erase_position_2[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "erase_position_2";
}

SIGNAL("erase_position_2[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "erase_position_2";
}

SIGNAL("erase_position_2[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "erase_position_2";
}

SIGNAL("erase_position_2[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "erase_position_2";
}

SIGNAL("erase_position_2[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "erase_position_2";
}

SIGNAL("erase_position_1")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("erase_position_1[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "erase_position_1";
}

SIGNAL("erase_position_1[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "erase_position_1";
}

SIGNAL("erase_position_1[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "erase_position_1";
}

SIGNAL("erase_position_1[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "erase_position_1";
}

SIGNAL("erase_position_1[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "erase_position_1";
}

SIGNAL("erase_position_1[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "erase_position_1";
}

SIGNAL("erase_position_1[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "erase_position_1";
}

SIGNAL("erase_position_1[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "erase_position_1";
}

SIGNAL("erase_position_0")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("erase_position_0[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "erase_position_0";
}

SIGNAL("erase_position_0[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "erase_position_0";
}

SIGNAL("erase_position_0[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "erase_position_0";
}

SIGNAL("erase_position_0[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "erase_position_0";
}

SIGNAL("erase_position_0[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "erase_position_0";
}

SIGNAL("erase_position_0[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "erase_position_0";
}

SIGNAL("erase_position_0[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "erase_position_0";
}

SIGNAL("erase_position_0[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "erase_position_0";
}

SIGNAL("derivative_error_location")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("derivative_error_location[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "derivative_error_location";
}

SIGNAL("derivative_error_location[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "derivative_error_location";
}

SIGNAL("derivative_error_location[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "derivative_error_location";
}

SIGNAL("erasure_polyn_1[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "erasure_polyn_1";
}

SIGNAL("erasure_polyn_1[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "erasure_polyn_1";
}

SIGNAL("erasure_polyn_1[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "erasure_polyn_1";
}

SIGNAL("erasure_polyn_1[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "erasure_polyn_1";
}

SIGNAL("erasure_polyn_1[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "erasure_polyn_1";
}

SIGNAL("erasure_polyn_1[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "erasure_polyn_1";
}

SIGNAL("write_addr")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("write_addr[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "write_addr";
}

SIGNAL("write_addr[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "write_addr";
}

SIGNAL("write_addr[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "write_addr";
}

SIGNAL("write_addr[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "write_addr";
}

SIGNAL("write_addr[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "write_addr";
}

SIGNAL("write_addr[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "write_addr";
}

SIGNAL("erasure_polyn_0")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("erasure_polyn_0[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "erasure_polyn_0";
}

SIGNAL("erasure_polyn_0[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "erasure_polyn_0";
}

SIGNAL("erasure_polyn_0[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "erasure_polyn_0";
}

SIGNAL("erasure_polyn_0[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "erasure_polyn_0";
}

SIGNAL("erasure_polyn_0[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "erasure_polyn_0";
}

SIGNAL("erasure_polyn_0[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "erasure_polyn_0";
}

SIGNAL("erasure_polyn_0[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "erasure_polyn_0";
}

SIGNAL("erasure_polyn_0[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "erasure_polyn_0";
}

SIGNAL("erase_position_2[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "erase_position_2";
}

SIGNAL("erase_position_2[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "erase_position_2";
}

SIGNAL("erase_position_2[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "erase_position_2";
}

SIGNAL("locator_degree_1")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 6;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("locator_degree_1[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "locator_degree_1";
}

SIGNAL("locator_degree_1[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "locator_degree_1";
}

SIGNAL("locator_degree_1[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "locator_degree_1";
}

SIGNAL("locator_degree_0")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 6;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("locator_degree_0[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "locator_degree_0";
}

SIGNAL("locator_degree_0[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "locator_degree_0";
}

SIGNAL("locator_degree_0[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "locator_degree_0";
}

SIGNAL("locator_degree_0[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "locator_degree_0";
}

SIGNAL("locator_degree_0[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "locator_degree_0";
}

SIGNAL("locator_degree_0[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "locator_degree_0";
}

SIGNAL("fade_value")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 10;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("fade_value[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "fade_value";
}

SIGNAL("fade_value[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "fade_value";
}

SIGNAL("fade_value[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "fade_value";
}

SIGNAL("fade_value[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "fade_value";
}

SIGNAL("fade_value[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "fade_value";
}

SIGNAL("fade_value[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "fade_value";
}

SIGNAL("fade_value[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "fade_value";
}

SIGNAL("fade_value[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "fade_value";
}

SIGNAL("fade_value[8]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "fade_value";
}

SIGNAL("fade_value[9]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "fade_value";
}

SIGNAL("exact_smallest")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 10;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("exact_smallest[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "exact_smallest";
}

SIGNAL("exact_smallest[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "exact_smallest";
}

SIGNAL("exact_smallest[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "exact_smallest";
}

SIGNAL("exact_smallest[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "exact_smallest";
}

SIGNAL("exact_smallest[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "exact_smallest";
}

SIGNAL("locator_polyn_1")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("locator_polyn_1[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "locator_polyn_1";
}

SIGNAL("locator_polyn_1[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "locator_polyn_1";
}

SIGNAL("locator_polyn_1[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "locator_polyn_1";
}

SIGNAL("locator_polyn_1[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "locator_polyn_1";
}

SIGNAL("locator_polyn_1[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "locator_polyn_1";
}

SIGNAL("locator_polyn_1[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "locator_polyn_1";
}

SIGNAL("locator_polyn_1[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "locator_polyn_1";
}

SIGNAL("locator_polyn_0")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("locator_polyn_0[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "locator_polyn_0";
}

SIGNAL("locator_polyn_0[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "locator_polyn_0";
}

SIGNAL("locator_polyn_0[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "locator_polyn_0";
}

SIGNAL("locator_polyn_0[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "locator_polyn_0";
}

SIGNAL("locator_polyn_0[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "locator_polyn_0";
}

SIGNAL("locator_polyn_0[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "locator_polyn_0";
}

SIGNAL("locator_polyn_0[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "locator_polyn_0";
}

SIGNAL("locator_polyn_0[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "locator_polyn_0";
}

SIGNAL("locator_degree_2")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 6;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("locator_degree_2[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "locator_degree_2";
}

SIGNAL("locator_degree_2[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "locator_degree_2";
}

SIGNAL("locator_degree_2[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "locator_degree_2";
}

SIGNAL("locator_degree_2[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "locator_degree_2";
}

SIGNAL("locator_degree_2[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "locator_degree_2";
}

SIGNAL("locator_degree_2[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "locator_degree_2";
}

SIGNAL("locator_degree_1[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "locator_degree_1";
}

SIGNAL("locator_degree_1[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "locator_degree_1";
}

SIGNAL("locator_degree_1[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "locator_degree_1";
}

SIGNAL("error_location_1")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("error_location_1[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "error_location_1";
}

SIGNAL("error_location_1[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "error_location_1";
}

SIGNAL("error_location_1[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "error_location_1";
}

SIGNAL("error_location_1[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "error_location_1";
}

SIGNAL("error_location_1[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "error_location_1";
}

SIGNAL("error_location_1[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "error_location_1";
}

SIGNAL("error_location_0")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("error_location_0[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "error_location_0";
}

SIGNAL("error_location_0[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "error_location_0";
}

SIGNAL("error_location_0[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "error_location_0";
}

SIGNAL("error_location_0[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "error_location_0";
}

SIGNAL("error_location_0[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "error_location_0";
}

SIGNAL("error_location_0[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "error_location_0";
}

SIGNAL("error_location_0[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "error_location_0";
}

SIGNAL("error_location_0[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "error_location_0";
}

SIGNAL("errata_magnitude_coefs_2")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("errata_magnitude_coefs_2[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "errata_magnitude_coefs_2";
}

SIGNAL("errata_magnitude_coefs_2[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "errata_magnitude_coefs_2";
}

SIGNAL("errata_magnitude_coefs_2[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "errata_magnitude_coefs_2";
}

SIGNAL("errata_magnitude_coefs_2[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "errata_magnitude_coefs_2";
}

SIGNAL("errata_magnitude_coefs_2[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "errata_magnitude_coefs_2";
}

SIGNAL("errata_magnitude_coefs_2[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "errata_magnitude_coefs_2";
}

SIGNAL("errata_magnitude_coefs_2[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "errata_magnitude_coefs_2";
}

SIGNAL("errata_magnitude_coefs_2[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "errata_magnitude_coefs_2";
}

SIGNAL("errata_magnitude_coefs_1[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "errata_magnitude_coefs_1";
}

SIGNAL("errata_magnitude_coefs_1[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "errata_magnitude_coefs_1";
}

SIGNAL("exact_smallest[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "exact_smallest";
}

SIGNAL("exact_smallest[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "exact_smallest";
}

SIGNAL("exact_smallest[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "exact_smallest";
}

SIGNAL("exact_smallest[8]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "exact_smallest";
}

SIGNAL("exact_smallest[9]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "exact_smallest";
}

SIGNAL("error_magnitude")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("error_magnitude[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "error_magnitude";
}

SIGNAL("error_magnitude[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "error_magnitude";
}

SIGNAL("error_magnitude[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "error_magnitude";
}

SIGNAL("error_magnitude[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "error_magnitude";
}

SIGNAL("error_magnitude[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "error_magnitude";
}

SIGNAL("error_magnitude[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "error_magnitude";
}

SIGNAL("error_magnitude[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "error_magnitude";
}

SIGNAL("error_magnitude[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "error_magnitude";
}

SIGNAL("error_location_2")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("error_location_2[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "error_location_2";
}

SIGNAL("error_location_2[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "error_location_2";
}

SIGNAL("error_location_2[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "error_location_2";
}

SIGNAL("error_location_2[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "error_location_2";
}

SIGNAL("error_location_2[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "error_location_2";
}

SIGNAL("error_location_2[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "error_location_2";
}

SIGNAL("error_location_2[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "error_location_2";
}

SIGNAL("error_location_2[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "error_location_2";
}

SIGNAL("error_location_1[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "error_location_1";
}

SIGNAL("error_location_1[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "error_location_1";
}

SIGNAL("channel_char")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 15;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("channel_char[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "channel_char";
}

SIGNAL("channel_char[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "channel_char";
}

SIGNAL("channel_char[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "channel_char";
}

SIGNAL("channel_char[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "channel_char";
}

SIGNAL("channel_char[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "channel_char";
}

SIGNAL("channel_char[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "channel_char";
}

SIGNAL("channel_char[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "channel_char";
}

SIGNAL("channel_char[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "channel_char";
}

SIGNAL("channel_char[8]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "channel_char";
}

SIGNAL("channel_char[9]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "channel_char";
}

SIGNAL("channel_char[10]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "channel_char";
}

SIGNAL("channel_char[11]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "channel_char";
}

SIGNAL("channel_char[12]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "channel_char";
}

SIGNAL("channel_char[13]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "channel_char";
}

SIGNAL("channel_char[14]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "channel_char";
}

SIGNAL("unmodified_syndr_polyn_2")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("unmodified_syndr_polyn_2[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "unmodified_syndr_polyn_2";
}

SIGNAL("R_degree_2")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 6;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("R_degree_2[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "R_degree_2";
}

SIGNAL("R_degree_2[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "R_degree_2";
}

SIGNAL("R_degree_2[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "R_degree_2";
}

SIGNAL("R_degree_2[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "R_degree_2";
}

SIGNAL("R_degree_2[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "R_degree_2";
}

SIGNAL("R_degree_2[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "R_degree_2";
}

SIGNAL("R_degree_1")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 6;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("R_degree_1[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "R_degree_1";
}

SIGNAL("R_degree_1[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "R_degree_1";
}

SIGNAL("cutoff_threshold_0")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 24;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("cutoff_threshold_0[16]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "cutoff_threshold_0";
}

SIGNAL("cutoff_threshold_0[17]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "cutoff_threshold_0";
}

SIGNAL("cutoff_threshold_0[18]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "cutoff_threshold_0";
}

SIGNAL("cutoff_threshold_0[19]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "cutoff_threshold_0";
}

SIGNAL("cutoff_threshold_0[20]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "cutoff_threshold_0";
}

SIGNAL("cutoff_threshold_0[21]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "cutoff_threshold_0";
}

SIGNAL("cutoff_threshold_0[22]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "cutoff_threshold_0";
}

SIGNAL("cutoff_threshold_0[23]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "cutoff_threshold_0";
}

SIGNAL("corrected_error_count")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("corrected_error_count[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "corrected_error_count";
}

SIGNAL("corrected_error_count[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "corrected_error_count";
}

SIGNAL("corrected_error_count[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "corrected_error_count";
}

SIGNAL("corrected_error_count[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "corrected_error_count";
}

SIGNAL("corrected_error_count[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "corrected_error_count";
}

SIGNAL("corrected_error_count[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "corrected_error_count";
}

SIGNAL("corrected_error_count[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "corrected_error_count";
}

SIGNAL("corrected_error_count[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "corrected_error_count";
}

SIGNAL("corrected_cw")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("corrected_cw[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "corrected_cw";
}

SIGNAL("corrected_cw[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "corrected_cw";
}

SIGNAL("corrected_cw[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "corrected_cw";
}

SIGNAL("corrected_cw[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "corrected_cw";
}

SIGNAL("corrected_cw[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "corrected_cw";
}

SIGNAL("corrected_cw[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "corrected_cw";
}

SIGNAL("corrected_cw[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "corrected_cw";
}

SIGNAL("corrected_cw[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "corrected_cw";
}

SIGNAL("Q_degree_0")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 6;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("Q_degree_0[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Q_degree_0";
}

SIGNAL("Q_degree_0[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Q_degree_0";
}

SIGNAL("Q_degree_0[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Q_degree_0";
}

SIGNAL("Q_degree_0[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Q_degree_0";
}

SIGNAL("Q_degree_0[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Q_degree_0";
}

SIGNAL("Q_degree_0[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Q_degree_0";
}

SIGNAL("L_degree_2")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 6;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("L_degree_2[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "L_degree_2";
}

SIGNAL("L_degree_2[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "L_degree_2";
}

SIGNAL("L_degree_2[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "L_degree_2";
}

SIGNAL("L_degree_2[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "L_degree_2";
}

SIGNAL("L_degree_2[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "L_degree_2";
}

SIGNAL("L_degree_2[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "L_degree_2";
}

SIGNAL("L_degree_1")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 6;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("L_degree_1[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "L_degree_1";
}

SIGNAL("L_degree_1[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "L_degree_1";
}

SIGNAL("L_degree_1[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "L_degree_1";
}

SIGNAL("L_degree_1[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "L_degree_1";
}

SIGNAL("L_degree_1[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "L_degree_1";
}

SIGNAL("L_degree_1[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "L_degree_1";
}

SIGNAL("L_degree_0")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 6;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("L_degree_0[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "L_degree_0";
}

SIGNAL("L_degree_0[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "L_degree_0";
}

SIGNAL("L_degree_0[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "L_degree_0";
}

SIGNAL("L_degree_0[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "L_degree_0";
}

SIGNAL("L_degree_0[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "L_degree_0";
}

SIGNAL("L_degree_0[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "L_degree_0";
}

SIGNAL("R_degree_1[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "R_degree_1";
}

SIGNAL("R_degree_1[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "R_degree_1";
}

SIGNAL("R_degree_1[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "R_degree_1";
}

SIGNAL("R_degree_1[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "R_degree_1";
}

SIGNAL("R_degree_0")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 6;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("R_degree_0[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "R_degree_0";
}

SIGNAL("R_degree_0[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "R_degree_0";
}

SIGNAL("R_degree_0[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "R_degree_0";
}

SIGNAL("R_degree_0[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "R_degree_0";
}

SIGNAL("R_degree_0[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "R_degree_0";
}

SIGNAL("R_degree_0[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "R_degree_0";
}

SIGNAL("Q_degree_2")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 6;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("Q_degree_2[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Q_degree_2";
}

SIGNAL("Q_degree_2[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Q_degree_2";
}

SIGNAL("Q_degree_2[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Q_degree_2";
}

SIGNAL("Q_degree_2[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Q_degree_2";
}

SIGNAL("Q_degree_2[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Q_degree_2";
}

SIGNAL("Q_degree_2[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Q_degree_2";
}

SIGNAL("unmodified_syndr_polyn_2[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "unmodified_syndr_polyn_2";
}

SIGNAL("Q_degree_1")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 6;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("Q_degree_1[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Q_degree_1";
}

SIGNAL("Q_degree_1[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Q_degree_1";
}

SIGNAL("Q_degree_1[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Q_degree_1";
}

SIGNAL("Q_degree_1[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Q_degree_1";
}

SIGNAL("Q_degree_1[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Q_degree_1";
}

SIGNAL("Q_degree_1[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Q_degree_1";
}

SIGNAL("cw_data")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("cw_data[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "cw_data";
}

SIGNAL("cw_data[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "cw_data";
}

SIGNAL("cw_data[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "cw_data";
}

SIGNAL("cw_data[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "cw_data";
}

SIGNAL("cw_data[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "cw_data";
}

SIGNAL("cw_data[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "cw_data";
}

SIGNAL("cutoff_threshold_2")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 24;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("cutoff_threshold_2[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "cutoff_threshold_2";
}

SIGNAL("cutoff_threshold_2[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "cutoff_threshold_2";
}

SIGNAL("cutoff_threshold_2[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "cutoff_threshold_2";
}

SIGNAL("cutoff_threshold_2[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "cutoff_threshold_2";
}

SIGNAL("cutoff_threshold_2[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "cutoff_threshold_2";
}

SIGNAL("cutoff_threshold_2[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "cutoff_threshold_2";
}

SIGNAL("cutoff_threshold_2[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "cutoff_threshold_2";
}

SIGNAL("cutoff_threshold_2[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "cutoff_threshold_2";
}

SIGNAL("cutoff_threshold_2[8]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "cutoff_threshold_2";
}

SIGNAL("cutoff_threshold_2[9]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "cutoff_threshold_2";
}

SIGNAL("cutoff_threshold_2[10]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "cutoff_threshold_2";
}

SIGNAL("cutoff_threshold_2[11]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "cutoff_threshold_2";
}

SIGNAL("cutoff_threshold_2[12]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "cutoff_threshold_2";
}

SIGNAL("cutoff_threshold_2[13]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "cutoff_threshold_2";
}

SIGNAL("cutoff_threshold_2[14]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "cutoff_threshold_2";
}

SIGNAL("cutoff_threshold_2[15]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "cutoff_threshold_2";
}

SIGNAL("cutoff_threshold_2[16]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "cutoff_threshold_2";
}

SIGNAL("cutoff_threshold_2[17]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "cutoff_threshold_2";
}

SIGNAL("derivative_error_location[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "derivative_error_location";
}

SIGNAL("derivative_error_location[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "derivative_error_location";
}

SIGNAL("derivative_error_location[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "derivative_error_location";
}

SIGNAL("derivative_error_location[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "derivative_error_location";
}

SIGNAL("derivative_error_location[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "derivative_error_location";
}

SIGNAL("decoder_rd_addr")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("decoder_rd_addr[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "decoder_rd_addr";
}

SIGNAL("decoder_rd_addr[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "decoder_rd_addr";
}

SIGNAL("decoder_rd_addr[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "decoder_rd_addr";
}

SIGNAL("decoder_rd_addr[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "decoder_rd_addr";
}

SIGNAL("decoder_rd_addr[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "decoder_rd_addr";
}

SIGNAL("decoder_rd_addr[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "decoder_rd_addr";
}

SIGNAL("decoder_rd_addr[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "decoder_rd_addr";
}

SIGNAL("decoder_rd_addr[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "decoder_rd_addr";
}

SIGNAL("cycle")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 9;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("cycle[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "cycle";
}

SIGNAL("cycle[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "cycle";
}

SIGNAL("cycle[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "cycle";
}

SIGNAL("cycle[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "cycle";
}

SIGNAL("cycle[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "cycle";
}

SIGNAL("cycle[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "cycle";
}

SIGNAL("cycle[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "cycle";
}

SIGNAL("cycle[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "cycle";
}

SIGNAL("cycle[8]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "cycle";
}

SIGNAL("cw_data[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "cw_data";
}

SIGNAL("cw_data[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "cw_data";
}

SIGNAL("cutoff_threshold_1")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 24;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("cutoff_threshold_1[16]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "cutoff_threshold_1";
}

SIGNAL("cutoff_threshold_1[17]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "cutoff_threshold_1";
}

SIGNAL("cutoff_threshold_1[18]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "cutoff_threshold_1";
}

SIGNAL("cutoff_threshold_1[19]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "cutoff_threshold_1";
}

SIGNAL("cutoff_threshold_1[20]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "cutoff_threshold_1";
}

SIGNAL("cutoff_threshold_1[21]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "cutoff_threshold_1";
}

SIGNAL("cutoff_threshold_1[22]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "cutoff_threshold_1";
}

SIGNAL("cutoff_threshold_1[23]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "cutoff_threshold_1";
}

SIGNAL("cutoff_threshold_0[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "cutoff_threshold_0";
}

SIGNAL("cutoff_threshold_0[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "cutoff_threshold_0";
}

SIGNAL("cutoff_threshold_0[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "cutoff_threshold_0";
}

SIGNAL("cutoff_threshold_0[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "cutoff_threshold_0";
}

SIGNAL("cutoff_threshold_0[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "cutoff_threshold_0";
}

SIGNAL("cutoff_threshold_0[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "cutoff_threshold_0";
}

SIGNAL("cutoff_threshold_0[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "cutoff_threshold_0";
}

SIGNAL("cutoff_threshold_0[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "cutoff_threshold_0";
}

SIGNAL("cutoff_threshold_0[8]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "cutoff_threshold_0";
}

SIGNAL("cutoff_threshold_0[9]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "cutoff_threshold_0";
}

SIGNAL("cutoff_threshold_0[10]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "cutoff_threshold_0";
}

SIGNAL("cutoff_threshold_0[11]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "cutoff_threshold_0";
}

SIGNAL("cutoff_threshold_0[12]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "cutoff_threshold_0";
}

SIGNAL("cutoff_threshold_0[13]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "cutoff_threshold_0";
}

SIGNAL("cutoff_threshold_0[14]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "cutoff_threshold_0";
}

SIGNAL("cutoff_threshold_0[15]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "cutoff_threshold_0";
}

SIGNAL("cutoff_threshold_2[18]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "cutoff_threshold_2";
}

SIGNAL("cutoff_threshold_2[19]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "cutoff_threshold_2";
}

SIGNAL("cutoff_threshold_2[20]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "cutoff_threshold_2";
}

SIGNAL("cutoff_threshold_2[21]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "cutoff_threshold_2";
}

SIGNAL("cutoff_threshold_2[22]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "cutoff_threshold_2";
}

SIGNAL("cutoff_threshold_2[23]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "cutoff_threshold_2";
}

SIGNAL("unmodified_syndr_polyn_2[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "unmodified_syndr_polyn_2";
}

SIGNAL("cutoff_threshold_1[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "cutoff_threshold_1";
}

SIGNAL("cutoff_threshold_1[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "cutoff_threshold_1";
}

SIGNAL("cutoff_threshold_1[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "cutoff_threshold_1";
}

SIGNAL("cutoff_threshold_1[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "cutoff_threshold_1";
}

SIGNAL("cutoff_threshold_1[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "cutoff_threshold_1";
}

SIGNAL("cutoff_threshold_1[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "cutoff_threshold_1";
}

SIGNAL("cutoff_threshold_1[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "cutoff_threshold_1";
}

SIGNAL("cutoff_threshold_1[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "cutoff_threshold_1";
}

SIGNAL("cutoff_threshold_1[8]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "cutoff_threshold_1";
}

SIGNAL("cutoff_threshold_1[9]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "cutoff_threshold_1";
}

SIGNAL("cutoff_threshold_1[10]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "cutoff_threshold_1";
}

SIGNAL("cutoff_threshold_1[11]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "cutoff_threshold_1";
}

SIGNAL("cutoff_threshold_1[12]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "cutoff_threshold_1";
}

SIGNAL("cutoff_threshold_1[13]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "cutoff_threshold_1";
}

SIGNAL("cutoff_threshold_1[14]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "cutoff_threshold_1";
}

SIGNAL("cutoff_threshold_1[15]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "cutoff_threshold_1";
}

SIGNAL("q_in")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 10;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("q_in[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "q_in";
}

SIGNAL("q_in[8]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "q_in";
}

SIGNAL("threshold_0")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 9;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("threshold_0[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "threshold_0";
}

SIGNAL("q_in[9]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "q_in";
}

SIGNAL("q_fade")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 10;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("q_fade[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "q_fade";
}

SIGNAL("q_fade[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "q_fade";
}

SIGNAL("q_fade[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "q_fade";
}

SIGNAL("q_fade[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "q_fade";
}

SIGNAL("q_fade[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "q_fade";
}

SIGNAL("q_fade[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "q_fade";
}

SIGNAL("threshold_1")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 9;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("threshold_1[8]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "threshold_1";
}

SIGNAL("q_fade[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "q_fade";
}

SIGNAL("q_fade[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "q_fade";
}

SIGNAL("q_fade[8]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "q_fade";
}

SIGNAL("q_fade[9]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "q_fade";
}

SIGNAL("threshold_1[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "threshold_1";
}

SIGNAL("q")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("q[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "q";
}

SIGNAL("q[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "q";
}

SIGNAL("q[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "q";
}

SIGNAL("q[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "q";
}

SIGNAL("q[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "q";
}

SIGNAL("quotient")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 15;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("quotient[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "quotient";
}

SIGNAL("quotient[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "quotient";
}

SIGNAL("quotient[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "quotient";
}

SIGNAL("quotient[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "quotient";
}

SIGNAL("threshold_0[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "threshold_0";
}

SIGNAL("quotient[8]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "quotient";
}

SIGNAL("quotient[9]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "quotient";
}

SIGNAL("quotient[10]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "quotient";
}

SIGNAL("quotient[11]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "quotient";
}

SIGNAL("quotient[12]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "quotient";
}

SIGNAL("quotient[13]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "quotient";
}

SIGNAL("quotient[14]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "quotient";
}

SIGNAL("q_in[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "q_in";
}

SIGNAL("threshold_0[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "threshold_0";
}

SIGNAL("threshold_0[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "threshold_0";
}

SIGNAL("q_in[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "q_in";
}

SIGNAL("q_in[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "q_in";
}

SIGNAL("q_in[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "q_in";
}

SIGNAL("q_in[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "q_in";
}

SIGNAL("q_in[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "q_in";
}

SIGNAL("q_in[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "q_in";
}

SIGNAL("threshold_2")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 9;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("threshold_2[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "threshold_2";
}

SIGNAL("number_of_erasures_1")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 6;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("number_of_erasures_1[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "number_of_erasures_1";
}

SIGNAL("number_of_erasures_1[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "number_of_erasures_1";
}

SIGNAL("number_of_erasures_1[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "number_of_erasures_1";
}

SIGNAL("threshold_2[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "threshold_2";
}

SIGNAL("number_of_erasures_0")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 6;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("number_of_erasures_0[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "number_of_erasures_0";
}

SIGNAL("number_of_erasures_0[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "number_of_erasures_0";
}

SIGNAL("number_of_erasures_0[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "number_of_erasures_0";
}

SIGNAL("number_of_erasures_0[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "number_of_erasures_0";
}

SIGNAL("threshold_2[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "threshold_2";
}

SIGNAL("number_of_erasures_0[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "number_of_erasures_0";
}

SIGNAL("number_of_erasures_0[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "number_of_erasures_0";
}

SIGNAL("normalized_signal")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 15;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("normalized_signal[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "normalized_signal";
}

SIGNAL("normalized_signal[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "normalized_signal";
}

SIGNAL("normalized_signal[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "normalized_signal";
}

SIGNAL("threshold_2[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "threshold_2";
}

SIGNAL("normalized_signal[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "normalized_signal";
}

SIGNAL("normalized_signal[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "normalized_signal";
}

SIGNAL("normalized_signal[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "normalized_signal";
}

SIGNAL("normalized_signal[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "normalized_signal";
}

SIGNAL("normalized_signal[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "normalized_signal";
}

SIGNAL("q[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "q";
}

SIGNAL("q[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "q";
}

SIGNAL("q[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "q";
}

SIGNAL("threshold_1[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "threshold_1";
}

SIGNAL("number_of_erasures_2")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 6;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("number_of_erasures_2[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "number_of_erasures_2";
}

SIGNAL("number_of_erasures_2[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "number_of_erasures_2";
}

SIGNAL("threshold_1[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "threshold_1";
}

SIGNAL("number_of_erasures_2[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "number_of_erasures_2";
}

SIGNAL("number_of_erasures_2[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "number_of_erasures_2";
}

SIGNAL("number_of_erasures_2[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "number_of_erasures_2";
}

SIGNAL("number_of_erasures_2[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "number_of_erasures_2";
}

SIGNAL("threshold_1[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "threshold_1";
}

SIGNAL("number_of_erasures_1[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "number_of_erasures_1";
}

SIGNAL("number_of_erasures_1[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "number_of_erasures_1";
}

SIGNAL("number_of_erasures_1[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "number_of_erasures_1";
}

SIGNAL("threshold_1[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "threshold_1";
}

SIGNAL("threshold_1[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "threshold_1";
}

SIGNAL("threshold_1[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "threshold_1";
}

SIGNAL("threshold_1[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "threshold_1";
}

SIGNAL("threshold_2[8]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "threshold_2";
}

SIGNAL("state_case_2")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 3;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("state_case_2[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "state_case_2";
}

SIGNAL("state_case_2[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "state_case_2";
}

SIGNAL("syndrome")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("syndrome[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "syndrome";
}

SIGNAL("syndrome[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "syndrome";
}

SIGNAL("syndrome[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "syndrome";
}

SIGNAL("syndrome[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "syndrome";
}

SIGNAL("recvd_codeword")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("recvd_codeword[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "recvd_codeword";
}

SIGNAL("recvd_codeword[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "recvd_codeword";
}

SIGNAL("recvd_codeword[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "recvd_codeword";
}

SIGNAL("recvd_codeword[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "recvd_codeword";
}

SIGNAL("recvd_codeword[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "recvd_codeword";
}

SIGNAL("recvd_codeword[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "recvd_codeword";
}

SIGNAL("recvd_codeword[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "recvd_codeword";
}

SIGNAL("recvd_codeword[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "recvd_codeword";
}

SIGNAL("syndrome[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "syndrome";
}

SIGNAL("recieved_codeword")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("recieved_codeword[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "recieved_codeword";
}

SIGNAL("recieved_codeword[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "recieved_codeword";
}

SIGNAL("recieved_codeword[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "recieved_codeword";
}

SIGNAL("recieved_codeword[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "recieved_codeword";
}

SIGNAL("recieved_codeword[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "recieved_codeword";
}

SIGNAL("recieved_codeword[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "recieved_codeword";
}

SIGNAL("state_case_0")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 3;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("state_case_0[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "state_case_0";
}

SIGNAL("state_case_0[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "state_case_0";
}

SIGNAL("state_case_0[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "state_case_0";
}

SIGNAL("signal_count")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 4;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("signal_count[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "signal_count";
}

SIGNAL("signal_count[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "signal_count";
}

SIGNAL("signal_count[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "signal_count";
}

SIGNAL("signal_count[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "signal_count";
}

SIGNAL("state_case_1")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 3;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("state_case_1[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "state_case_1";
}

SIGNAL("sigma_square")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 10;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("sigma_square[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "sigma_square";
}

SIGNAL("sigma_square[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "sigma_square";
}

SIGNAL("sigma_square[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "sigma_square";
}

SIGNAL("sigma_square[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "sigma_square";
}

SIGNAL("sigma_square[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "sigma_square";
}

SIGNAL("sigma_square[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "sigma_square";
}

SIGNAL("sigma_square[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "sigma_square";
}

SIGNAL("sigma_square[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "sigma_square";
}

SIGNAL("sigma_square[8]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "sigma_square";
}

SIGNAL("sigma_square[9]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "sigma_square";
}

SIGNAL("state_case_1[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "state_case_1";
}

SIGNAL("state_case_1[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "state_case_1";
}

SIGNAL("state_case_2[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "state_case_2";
}

SIGNAL("rdaddress_fade")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("rdaddress_fade[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "rdaddress_fade";
}

SIGNAL("rdaddress_fade[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "rdaddress_fade";
}

SIGNAL("rdaddress_fade[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "rdaddress_fade";
}

SIGNAL("rdaddress_fade[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "rdaddress_fade";
}

SIGNAL("threshold_0[8]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "threshold_0";
}

SIGNAL("rdaddress")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("rdaddress[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "rdaddress";
}

SIGNAL("rdaddress[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "rdaddress";
}

SIGNAL("rdaddress[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "rdaddress";
}

SIGNAL("rdaddress[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "rdaddress";
}

SIGNAL("rdaddress[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "rdaddress";
}

SIGNAL("rdaddress[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "rdaddress";
}

SIGNAL("rdaddress[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "rdaddress";
}

SIGNAL("rdaddress[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "rdaddress";
}

SIGNAL("threshold_0[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "threshold_0";
}

SIGNAL("threshold_0[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "threshold_0";
}

SIGNAL("threshold_0[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "threshold_0";
}

SIGNAL("threshold_0[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "threshold_0";
}

SIGNAL("quotient[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "quotient";
}

SIGNAL("quotient[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "quotient";
}

SIGNAL("quotient[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "quotient";
}

SIGNAL("quotient[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "quotient";
}

SIGNAL("recieved_codeword[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "recieved_codeword";
}

SIGNAL("recieved_codeword[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "recieved_codeword";
}

SIGNAL("syndrome[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "syndrome";
}

SIGNAL("rdaddress_in")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 11;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("rdaddress_in[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "rdaddress_in";
}

SIGNAL("rdaddress_in[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "rdaddress_in";
}

SIGNAL("rdaddress_in[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "rdaddress_in";
}

SIGNAL("rdaddress_in[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "rdaddress_in";
}

SIGNAL("rdaddress_in[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "rdaddress_in";
}

SIGNAL("rdaddress_in[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "rdaddress_in";
}

SIGNAL("rdaddress_in[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "rdaddress_in";
}

SIGNAL("syndrome[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "syndrome";
}

SIGNAL("syndrome[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "syndrome";
}

SIGNAL("rdaddress_in[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "rdaddress_in";
}

SIGNAL("rdaddress_in[8]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "rdaddress_in";
}

SIGNAL("rdaddress_in[9]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "rdaddress_in";
}

SIGNAL("rdaddress_in[10]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "rdaddress_in";
}

SIGNAL("rdaddress_fade[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "rdaddress_fade";
}

SIGNAL("rdaddress_fade[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "rdaddress_fade";
}

SIGNAL("rdaddress_fade[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "rdaddress_fade";
}

SIGNAL("rdaddress_fade[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "rdaddress_fade";
}

SIGNAL("modified_actual_distance")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 24;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("modified_actual_distance[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "modified_actual_distance";
}

SIGNAL("modified_actual_distance[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "modified_actual_distance";
}

SIGNAL("modified_actual_distance[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "modified_actual_distance";
}

SIGNAL("modified_actual_distance[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "modified_actual_distance";
}

SIGNAL("modified_actual_distance[8]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "modified_actual_distance";
}

SIGNAL("modified_actual_distance[9]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "modified_actual_distance";
}

SIGNAL("unmodified_syndr_polyn_1")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("unmodified_syndr_polyn_1[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "unmodified_syndr_polyn_1";
}

SIGNAL("modified_actual_distance[10]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "modified_actual_distance";
}

SIGNAL("modified_actual_distance[11]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "modified_actual_distance";
}

SIGNAL("modified_actual_distance[12]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "modified_actual_distance";
}

SIGNAL("modified_actual_distance[13]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "modified_actual_distance";
}

SIGNAL("modified_actual_distance[14]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "modified_actual_distance";
}

SIGNAL("modified_actual_distance[15]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "modified_actual_distance";
}

SIGNAL("modified_actual_distance[16]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "modified_actual_distance";
}

SIGNAL("modified_actual_distance[17]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "modified_actual_distance";
}

SIGNAL("modified_actual_distance[18]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "modified_actual_distance";
}

SIGNAL("modified_actual_distance[19]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "modified_actual_distance";
}

SIGNAL("unmodified_syndr_polyn_1[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "unmodified_syndr_polyn_1";
}

SIGNAL("modified_actual_distance[20]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "modified_actual_distance";
}

SIGNAL("modified_actual_distance[21]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "modified_actual_distance";
}

SIGNAL("modified_actual_distance[22]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "modified_actual_distance";
}

SIGNAL("modified_syndr_polyn_1")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("modified_syndr_polyn_1[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "modified_syndr_polyn_1";
}

SIGNAL("unmodified_syndr_polyn_1[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "unmodified_syndr_polyn_1";
}

SIGNAL("modified_syndr_polyn_1[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "modified_syndr_polyn_1";
}

SIGNAL("modified_syndr_polyn_1[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "modified_syndr_polyn_1";
}

SIGNAL("modified_syndr_polyn_1[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "modified_syndr_polyn_1";
}

SIGNAL("modified_syndr_polyn_1[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "modified_syndr_polyn_1";
}

SIGNAL("unmodified_syndr_polyn_1[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "unmodified_syndr_polyn_1";
}

SIGNAL("modified_syndr_polyn_0")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("modified_syndr_polyn_0[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "modified_syndr_polyn_0";
}

SIGNAL("modified_syndr_polyn_0[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "modified_syndr_polyn_0";
}

SIGNAL("modified_syndr_polyn_0[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "modified_syndr_polyn_0";
}

SIGNAL("unmodified_syndr_polyn_1[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "unmodified_syndr_polyn_1";
}

SIGNAL("modified_syndr_polyn_0[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "modified_syndr_polyn_0";
}

SIGNAL("modified_syndr_polyn_0[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "modified_syndr_polyn_0";
}

SIGNAL("modified_syndr_polyn_0[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "modified_syndr_polyn_0";
}

SIGNAL("modified_syndr_polyn_0[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "modified_syndr_polyn_0";
}

SIGNAL("modified_syndr_polyn_0[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "modified_syndr_polyn_0";
}

SIGNAL("modified_actual_distance[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "modified_actual_distance";
}

SIGNAL("modified_actual_distance[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "modified_actual_distance";
}

SIGNAL("unmodified_syndr_polyn_1[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "unmodified_syndr_polyn_1";
}

SIGNAL("modified_actual_distance[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "modified_actual_distance";
}

SIGNAL("modified_actual_distance[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "modified_actual_distance";
}

SIGNAL("unmodified_syndr_polyn_2[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "unmodified_syndr_polyn_2";
}

SIGNAL("magnitue_polyn_0")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("magnitue_polyn_0[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "magnitue_polyn_0";
}

SIGNAL("magnitue_polyn_0[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "magnitue_polyn_0";
}

SIGNAL("magnitue_polyn_0[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "magnitue_polyn_0";
}

SIGNAL("magnitue_polyn_0[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "magnitue_polyn_0";
}

SIGNAL("magnitue_polyn_0[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "magnitue_polyn_0";
}

SIGNAL("unmodified_syndr_polyn_2[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "unmodified_syndr_polyn_2";
}

SIGNAL("magnitue_polyn_0[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "magnitue_polyn_0";
}

SIGNAL("magnitue_polyn_0[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "magnitue_polyn_0";
}

SIGNAL("magnitue_polyn_0[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "magnitue_polyn_0";
}

SIGNAL("write_addr[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "write_addr";
}

SIGNAL("locator_polyn_2")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("locator_polyn_2[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "locator_polyn_2";
}

SIGNAL("locator_polyn_2[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "locator_polyn_2";
}

SIGNAL("locator_polyn_2[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "locator_polyn_2";
}

SIGNAL("locator_polyn_2[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "locator_polyn_2";
}

SIGNAL("write_addr[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "write_addr";
}

SIGNAL("locator_polyn_2[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "locator_polyn_2";
}

SIGNAL("locator_polyn_2[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "locator_polyn_2";
}

SIGNAL("locator_polyn_2[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "locator_polyn_2";
}

SIGNAL("locator_polyn_2[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "locator_polyn_2";
}

SIGNAL("locator_polyn_1[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "locator_polyn_1";
}

SIGNAL("modified_actual_distance[23]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "modified_actual_distance";
}

SIGNAL("unmodified_syndr_polyn_1[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "unmodified_syndr_polyn_1";
}

SIGNAL("magnitue_polyn_2")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("magnitue_polyn_2[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "magnitue_polyn_2";
}

SIGNAL("magnitue_polyn_2[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "magnitue_polyn_2";
}

SIGNAL("magnitue_polyn_2[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "magnitue_polyn_2";
}

SIGNAL("magnitue_polyn_2[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "magnitue_polyn_2";
}

SIGNAL("magnitue_polyn_2[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "magnitue_polyn_2";
}

SIGNAL("unmodified_syndr_polyn_2[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "unmodified_syndr_polyn_2";
}

SIGNAL("magnitue_polyn_2[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "magnitue_polyn_2";
}

SIGNAL("magnitue_polyn_2[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "magnitue_polyn_2";
}

SIGNAL("magnitue_polyn_2[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "magnitue_polyn_2";
}

SIGNAL("magnitue_polyn_1")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("magnitue_polyn_1[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "magnitue_polyn_1";
}

SIGNAL("magnitue_polyn_1[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "magnitue_polyn_1";
}

SIGNAL("unmodified_syndr_polyn_2[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "unmodified_syndr_polyn_2";
}

SIGNAL("magnitue_polyn_1[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "magnitue_polyn_1";
}

SIGNAL("magnitue_polyn_1[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "magnitue_polyn_1";
}

SIGNAL("magnitue_polyn_1[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "magnitue_polyn_1";
}

SIGNAL("magnitue_polyn_1[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "magnitue_polyn_1";
}

SIGNAL("magnitue_polyn_1[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "magnitue_polyn_1";
}

SIGNAL("magnitue_polyn_1[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "magnitue_polyn_1";
}

SIGNAL("unmodified_syndr_polyn_2[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "unmodified_syndr_polyn_2";
}

SIGNAL("norm_sigma_square")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 15;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("norm_sigma_square[8]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "norm_sigma_square";
}

SIGNAL("norm_sigma_square[9]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "norm_sigma_square";
}

SIGNAL("norm_sigma_square[10]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "norm_sigma_square";
}

SIGNAL("norm_sigma_square[11]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "norm_sigma_square";
}

SIGNAL("norm_sigma_square[12]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "norm_sigma_square";
}

SIGNAL("norm_sigma_square[13]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "norm_sigma_square";
}

SIGNAL("norm_sigma_square[14]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "norm_sigma_square";
}

SIGNAL("unmodified_syndr_polyn_0")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("unmodified_syndr_polyn_0[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "unmodified_syndr_polyn_0";
}

SIGNAL("no_of_parity")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 6;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("no_of_parity[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "no_of_parity";
}

SIGNAL("no_of_parity[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "no_of_parity";
}

SIGNAL("no_of_parity[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "no_of_parity";
}

SIGNAL("unmodified_syndr_polyn_0[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "unmodified_syndr_polyn_0";
}

SIGNAL("no_of_parity[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "no_of_parity";
}

SIGNAL("no_of_parity[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "no_of_parity";
}

SIGNAL("no_of_parity[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "no_of_parity";
}

SIGNAL("unmodified_syndr_polyn_0[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "unmodified_syndr_polyn_0";
}

SIGNAL("no_of_erasure_coefs_2")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 6;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("no_of_erasure_coefs_2[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "no_of_erasure_coefs_2";
}

SIGNAL("no_of_erasure_coefs_2[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "no_of_erasure_coefs_2";
}

SIGNAL("no_of_erasure_coefs_2[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "no_of_erasure_coefs_2";
}

SIGNAL("no_of_erasure_coefs_2[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "no_of_erasure_coefs_2";
}

SIGNAL("normalized_signal[8]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "normalized_signal";
}

SIGNAL("normalized_signal[9]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "normalized_signal";
}

SIGNAL("normalized_signal[10]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "normalized_signal";
}

SIGNAL("threshold_2[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "threshold_2";
}

SIGNAL("normalized_signal[11]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "normalized_signal";
}

SIGNAL("normalized_signal[12]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "normalized_signal";
}

SIGNAL("normalized_signal[13]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "normalized_signal";
}

SIGNAL("normalized_signal[14]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "normalized_signal";
}

SIGNAL("threshold_2[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "threshold_2";
}

SIGNAL("norm_sigma_square[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "norm_sigma_square";
}

SIGNAL("norm_sigma_square[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "norm_sigma_square";
}

SIGNAL("norm_sigma_square[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "norm_sigma_square";
}

SIGNAL("threshold_2[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "threshold_2";
}

SIGNAL("threshold_2[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "threshold_2";
}

SIGNAL("unmodified_syndr_polyn_0[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "unmodified_syndr_polyn_0";
}

SIGNAL("norm_sigma_square[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "norm_sigma_square";
}

SIGNAL("norm_sigma_square[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "norm_sigma_square";
}

SIGNAL("norm_sigma_square[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "norm_sigma_square";
}

SIGNAL("norm_sigma_square[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "norm_sigma_square";
}

SIGNAL("norm_sigma_square[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "norm_sigma_square";
}

SIGNAL("unmodified_syndr_polyn_0[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "unmodified_syndr_polyn_0";
}

SIGNAL("modified_syndr_polyn_2")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("modified_syndr_polyn_2[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "modified_syndr_polyn_2";
}

SIGNAL("modified_syndr_polyn_2[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "modified_syndr_polyn_2";
}

SIGNAL("modified_syndr_polyn_2[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "modified_syndr_polyn_2";
}

SIGNAL("modified_syndr_polyn_2[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "modified_syndr_polyn_2";
}

SIGNAL("no_of_erasure_coefs_0")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 6;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("no_of_erasure_coefs_0[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "no_of_erasure_coefs_0";
}

SIGNAL("modified_syndr_polyn_2[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "modified_syndr_polyn_2";
}

SIGNAL("modified_syndr_polyn_2[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "modified_syndr_polyn_2";
}

SIGNAL("no_of_erasure_coefs_0[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "no_of_erasure_coefs_0";
}

SIGNAL("no_of_erasure_coefs_0[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "no_of_erasure_coefs_0";
}

SIGNAL("modified_syndr_polyn_2[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "modified_syndr_polyn_2";
}

SIGNAL("modified_syndr_polyn_2[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "modified_syndr_polyn_2";
}

SIGNAL("no_of_erasure_coefs_0[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "no_of_erasure_coefs_0";
}

SIGNAL("no_of_erasure_coefs_0[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "no_of_erasure_coefs_0";
}

SIGNAL("no_of_erasure_coefs_0[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "no_of_erasure_coefs_0";
}

SIGNAL("unmodified_syndr_polyn_1[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "unmodified_syndr_polyn_1";
}

SIGNAL("modified_syndr_polyn_1[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "modified_syndr_polyn_1";
}

SIGNAL("no_of_erasure_coefs_1")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 6;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("no_of_erasure_coefs_1[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "no_of_erasure_coefs_1";
}

SIGNAL("unmodified_syndr_polyn_0[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "unmodified_syndr_polyn_0";
}

SIGNAL("modified_syndr_polyn_1[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "modified_syndr_polyn_1";
}

SIGNAL("no_of_erasure_coefs_1[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "no_of_erasure_coefs_1";
}

SIGNAL("no_of_erasure_coefs_1[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "no_of_erasure_coefs_1";
}

SIGNAL("no_of_erasure_coefs_1[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "no_of_erasure_coefs_1";
}

SIGNAL("no_of_erasure_coefs_1[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "no_of_erasure_coefs_1";
}

SIGNAL("unmodified_syndr_polyn_0[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "unmodified_syndr_polyn_0";
}

SIGNAL("no_of_erasure_coefs_2[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "no_of_erasure_coefs_2";
}

SIGNAL("no_of_erasure_coefs_2[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "no_of_erasure_coefs_2";
}

SIGNAL("modified_syndr_polyn_1[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "modified_syndr_polyn_1";
}

SIGNAL("no_of_erasure_coefs_1[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "no_of_erasure_coefs_1";
}

SIGNAL("unmodified_syndr_polyn_0[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "unmodified_syndr_polyn_0";
}

SIGNAL("corrected_cword_ready")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("syndr_coef_ready_2")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("syndr_coef_ready_1")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("syndr_coef_ready_0")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("MEA_compute_done_2")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("MEA_compute_done_1")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("MEA_compute_done_0")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("erasures_absent_2")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("erasures_absent_1")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("erasures_absent_0")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("erasure_flag_2")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("erasure_flag_1")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("erasure_flag_0")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("erasure_coef_ready_2")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("load_non_zero_syndrome_done")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("new_channel_char")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("new_data")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("wren")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("recvd_erasure_flag_0")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("recvd_erasure_flag_1")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("recvd_erasure_flag_2")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("send_data")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("send_erasure_polyn_0")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("send_erasure_polyn_1")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("send_erasure_polyn_2")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("send_syndr_polyn_0")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("send_syndr_polyn_1")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("send_syndr_polyn_2")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("send_unmodified_syndr_polyn_0")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("send_unmodified_syndr_polyn_1")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("send_unmodified_syndr_polyn_2")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("start_erasure_polyn_compute")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("start_modified_syndrome_polyn_compute")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("erasure_coef_ready_1")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("erasure_coef_ready_0")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("erasure")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("decode_strobe")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("cutoff_threshold_ready")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("rd_enable")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("wren_decoder_in_buffer")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

TRANSITION_LIST("k_value[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 80000.0;
	}
}

TRANSITION_LIST("k_value[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 80000.0;
	}
}

TRANSITION_LIST("k_value[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 80000.0;
	}
}

TRANSITION_LIST("k_value[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 80000.0;
	}
}

TRANSITION_LIST("k_value[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 80000.0;
	}
}

TRANSITION_LIST("k_value[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 80000.0;
	}
}

TRANSITION_LIST("k_value[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 80000.0;
	}
}

TRANSITION_LIST("k_value[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 80000.0;
	}
}

TRANSITION_LIST("sigma_value[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 80000.0;
	}
}

TRANSITION_LIST("sigma_value[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 80000.0;
	}
}

TRANSITION_LIST("sigma_value[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 80000.0;
	}
}

TRANSITION_LIST("sigma_value[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 80000.0;
	}
}

TRANSITION_LIST("sigma_value[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 80000.0;
	}
}

TRANSITION_LIST("reset")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 79980.0;
	}
}

TRANSITION_LIST("ext_clk")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 4000;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
		}
	}
}

TRANSITION_LIST("errata_loc_coefs_1[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 69458.671;
		LEVEL 1 FOR 60.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 10401.329;
	}
}

TRANSITION_LIST("errata_loc_coefs_1[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 69438.292;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 10401.708;
	}
}

TRANSITION_LIST("errata_loc_coefs_1[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 69418.123;
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 10461.877;
	}
}

TRANSITION_LIST("errata_loc_coefs_1[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 69418.073;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 10441.927;
	}
}

TRANSITION_LIST("errata_loc_coefs_1[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 69418.244;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 10421.756;
	}
}

TRANSITION_LIST("errata_loc_coefs_1[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 69418.087;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 10401.913;
	}
}

TRANSITION_LIST("errata_loc_coefs_0[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 69499.677;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 10260.323;
	}
}

TRANSITION_LIST("errata_loc_coefs_0[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 69499.041;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 10300.959;
	}
}

TRANSITION_LIST("errata_loc_coefs_0[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 69498.677;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 10241.323;
	}
}

TRANSITION_LIST("errata_loc_coefs_0[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 69499.773;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 10260.227;
	}
}

TRANSITION_LIST("errata_loc_coefs_0[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 69579.552;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 10300.448;
	}
}

TRANSITION_LIST("errata_loc_coefs_0[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 69499.541;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 10260.459;
	}
}

TRANSITION_LIST("errata_loc_coefs_0[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 69539.073;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 10240.927;
	}
}

TRANSITION_LIST("errata_loc_coefs_0[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 69499.464;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 10240.536;
	}
}

TRANSITION_LIST("erasure_polyn_2[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 67577.208;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 12262.792;
	}
}

TRANSITION_LIST("erasure_polyn_2[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 67557.541;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 12262.459;
	}
}

TRANSITION_LIST("erasure_polyn_2[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 67597.664;
		LEVEL 1 FOR 60.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 12262.336;
	}
}

TRANSITION_LIST("erasure_polyn_2[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 67577.2;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 12262.8;
	}
}

TRANSITION_LIST("erasure_polyn_2[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 67557.627;
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 12322.373;
	}
}

TRANSITION_LIST("erasure_polyn_2[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 67557.609;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 12302.391;
	}
}

TRANSITION_LIST("erasure_polyn_2[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 67557.577;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 12282.423;
	}
}

TRANSITION_LIST("erasure_polyn_2[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 67557.652;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 12262.348;
	}
}

TRANSITION_LIST("erasure_polyn_1[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 67578.712;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 12261.288;
	}
}

TRANSITION_LIST("erasure_polyn_1[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 67558.641;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 12261.359;
	}
}

TRANSITION_LIST("errata_magnitude_coefs_1[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 69438.502;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 10021.498;
	}
}

TRANSITION_LIST("errata_magnitude_coefs_1[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 69418.842;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 9981.158;
	}
}

TRANSITION_LIST("errata_magnitude_coefs_1[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 69438.665;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 300.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 10021.335;
	}
}

TRANSITION_LIST("errata_magnitude_coefs_1[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 69417.68;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 10042.32;
	}
}

TRANSITION_LIST("errata_magnitude_coefs_1[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 69420.354;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 10039.646;
	}
}

TRANSITION_LIST("errata_magnitude_coefs_1[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 69499.971;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 140.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 120.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 9980.029;
	}
}

TRANSITION_LIST("errata_magnitude_coefs_0[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 69479.805;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 80.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 9900.195;
	}
}

TRANSITION_LIST("errata_magnitude_coefs_0[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 69519.057;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 9900.943;
	}
}

TRANSITION_LIST("errata_magnitude_coefs_0[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 69497.523;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 10082.477;
	}
}

TRANSITION_LIST("errata_magnitude_coefs_0[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 69599.936;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 9900.064;
	}
}

TRANSITION_LIST("errata_magnitude_coefs_0[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 69499.704;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 100.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 10020.296;
	}
}

TRANSITION_LIST("errata_magnitude_coefs_0[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 69500.383;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 9959.617;
	}
}

TRANSITION_LIST("errata_magnitude_coefs_0[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 69519.298;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 20.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 9900.702;
	}
}

TRANSITION_LIST("errata_magnitude_coefs_0[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 69538.758;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 9901.242;
	}
}

TRANSITION_LIST("errata_loc_coefs_2[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 69439.243;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 10400.757;
	}
}

TRANSITION_LIST("errata_loc_coefs_2[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 69419.413;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 10400.587;
	}
}

TRANSITION_LIST("errata_loc_coefs_2[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 69459.069;
		LEVEL 1 FOR 60.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 10400.931;
	}
}

TRANSITION_LIST("errata_loc_coefs_2[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 69439.362;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 10400.638;
	}
}

TRANSITION_LIST("errata_loc_coefs_2[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 69419.412;
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 10460.588;
	}
}

TRANSITION_LIST("errata_loc_coefs_2[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 69417.856;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 10442.144;
	}
}

TRANSITION_LIST("errata_loc_coefs_2[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 69418.484;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 10421.516;
	}
}

TRANSITION_LIST("errata_loc_coefs_2[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 69419.279;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 10400.721;
	}
}

TRANSITION_LIST("errata_loc_coefs_1[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 69437.608;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 10402.392;
	}
}

TRANSITION_LIST("errata_loc_coefs_1[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 69417.936;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 10402.064;
	}
}

TRANSITION_LIST("erase_position_2[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 67359.567;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 12500.433;
	}
}

TRANSITION_LIST("erase_position_2[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 67339.157;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 12520.843;
	}
}

TRANSITION_LIST("erase_position_2[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 67338.989;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 12481.011;
	}
}

TRANSITION_LIST("erase_position_2[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 67378.183;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 12561.817;
	}
}

TRANSITION_LIST("erase_position_2[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 67338.315;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 12521.685;
	}
}

TRANSITION_LIST("erase_position_1[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 67358.691;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 12501.309;
	}
}

TRANSITION_LIST("erase_position_1[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 67339.359;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 12520.641;
	}
}

TRANSITION_LIST("erase_position_1[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 67358.188;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 12501.812;
	}
}

TRANSITION_LIST("erase_position_1[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 67358.783;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 12501.217;
	}
}

TRANSITION_LIST("erase_position_1[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 67339.479;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 12520.521;
	}
}

TRANSITION_LIST("erase_position_1[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 67339.736;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 12480.264;
	}
}

TRANSITION_LIST("erase_position_1[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 67380.186;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 12559.814;
	}
}

TRANSITION_LIST("erase_position_1[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 67339.202;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 12520.798;
	}
}

TRANSITION_LIST("erase_position_0[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 67378.226;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 12421.774;
	}
}

TRANSITION_LIST("erase_position_0[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 67358.227;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 12441.773;
	}
}

TRANSITION_LIST("erase_position_0[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 67398.969;
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 12421.031;
	}
}

TRANSITION_LIST("erase_position_0[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 67378.123;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 12421.877;
	}
}

TRANSITION_LIST("erase_position_0[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 67338.376;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 12441.624;
	}
}

TRANSITION_LIST("erase_position_0[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 67339.252;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 40.0;
		}
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 12400.748;
	}
}

TRANSITION_LIST("erase_position_0[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 67378.392;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 12481.608;
	}
}

TRANSITION_LIST("erase_position_0[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 67339.131;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 12440.869;
	}
}

TRANSITION_LIST("derivative_error_location[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 80000.0;
	}
}

TRANSITION_LIST("derivative_error_location[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 80000.0;
	}
}

TRANSITION_LIST("derivative_error_location[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 80000.0;
	}
}

TRANSITION_LIST("erasure_polyn_1[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 67599.465;
		LEVEL 1 FOR 60.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 12260.535;
	}
}

TRANSITION_LIST("erasure_polyn_1[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 67578.731;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 12261.269;
	}
}

TRANSITION_LIST("erasure_polyn_1[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 67558.853;
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 12321.147;
	}
}

TRANSITION_LIST("erasure_polyn_1[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 67558.783;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 12301.217;
	}
}

TRANSITION_LIST("erasure_polyn_1[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 67558.74;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 12281.26;
	}
}

TRANSITION_LIST("erasure_polyn_1[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 67558.318;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 12261.682;
	}
}

TRANSITION_LIST("write_addr[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1237.403;
		NODE
		{
			REPEAT = 31;
			LEVEL 1 FOR 960.0;
			LEVEL 0 FOR 960.0;
		}
		LEVEL 1 FOR 19242.597;
	}
}

TRANSITION_LIST("write_addr[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2197.397;
		NODE
		{
			REPEAT = 15;
			LEVEL 1 FOR 1920.0;
			LEVEL 0 FOR 1920.0;
		}
		LEVEL 1 FOR 20202.603;
	}
}

TRANSITION_LIST("write_addr[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 4117.369;
		NODE
		{
			REPEAT = 7;
			LEVEL 1 FOR 3840.0;
			LEVEL 0 FOR 3840.0;
		}
		LEVEL 1 FOR 22122.631;
	}
}

TRANSITION_LIST("write_addr[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 7957.373;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 7680.0;
			LEVEL 0 FOR 7680.0;
		}
		LEVEL 1 FOR 25962.627;
	}
}

TRANSITION_LIST("write_addr[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 15637.381;
		LEVEL 1 FOR 15360.0;
		LEVEL 0 FOR 15360.0;
		LEVEL 1 FOR 33642.619;
	}
}

TRANSITION_LIST("write_addr[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 30997.376;
		LEVEL 1 FOR 49002.624;
	}
}

TRANSITION_LIST("erasure_polyn_0[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 67638.172;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 12121.828;
	}
}

TRANSITION_LIST("erasure_polyn_0[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 67638.016;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 12161.984;
	}
}

TRANSITION_LIST("erasure_polyn_0[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 67637.932;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 12102.068;
	}
}

TRANSITION_LIST("erasure_polyn_0[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 67637.399;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 12122.601;
	}
}

TRANSITION_LIST("erasure_polyn_0[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 67717.463;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 12162.537;
	}
}

TRANSITION_LIST("erasure_polyn_0[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 67638.28;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 12121.72;
	}
}

TRANSITION_LIST("erasure_polyn_0[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 67677.688;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 12102.312;
	}
}

TRANSITION_LIST("erasure_polyn_0[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 67637.156;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 12102.844;
	}
}

TRANSITION_LIST("erase_position_2[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 67358.674;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 12501.326;
	}
}

TRANSITION_LIST("erase_position_2[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 67339.354;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 12520.646;
	}
}

TRANSITION_LIST("erase_position_2[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 67358.639;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 12501.361;
	}
}

TRANSITION_LIST("locator_degree_1[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 69318.349;
		LEVEL 1 FOR 10681.651;
	}
}

TRANSITION_LIST("locator_degree_1[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 69317.912;
		LEVEL 1 FOR 10682.088;
	}
}

TRANSITION_LIST("locator_degree_1[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 80000.0;
	}
}

TRANSITION_LIST("locator_degree_0[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 80000.0;
	}
}

TRANSITION_LIST("locator_degree_0[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 69399.876;
		LEVEL 1 FOR 10600.124;
	}
}

TRANSITION_LIST("locator_degree_0[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 69400.203;
		LEVEL 1 FOR 10599.797;
	}
}

TRANSITION_LIST("locator_degree_0[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 69399.638;
		LEVEL 1 FOR 10600.362;
	}
}

TRANSITION_LIST("locator_degree_0[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 69399.634;
		LEVEL 1 FOR 10600.366;
	}
}

TRANSITION_LIST("locator_degree_0[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 80000.0;
	}
}

TRANSITION_LIST("fade_value[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 80000.0;
	}
}

TRANSITION_LIST("fade_value[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 80000.0;
	}
}

TRANSITION_LIST("fade_value[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 80000.0;
	}
}

TRANSITION_LIST("fade_value[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 80000.0;
	}
}

TRANSITION_LIST("fade_value[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 80000.0;
	}
}

TRANSITION_LIST("fade_value[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 80000.0;
	}
}

TRANSITION_LIST("fade_value[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 80000.0;
	}
}

TRANSITION_LIST("fade_value[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 80000.0;
	}
}

TRANSITION_LIST("fade_value[8]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 80000.0;
	}
}

TRANSITION_LIST("fade_value[9]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 80000.0;
	}
}

TRANSITION_LIST("exact_smallest[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 276.979;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 480.0;
			LEVEL 0 FOR 480.0;
		}
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 480.0;
		NODE
		{
			REPEAT = 5;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 480.0;
			LEVEL 1 FOR 480.0;
		}
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 960.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 480.0;
		}
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 720.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1440.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 720.0;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 480.0;
		}
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 480.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 720.0;
		}
		NODE
		{
			REPEAT = 4;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1680.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 19003.021;
	}
}

TRANSITION_LIST("exact_smallest[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 997.364;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 480.0;
			LEVEL 1 FOR 720.0;
		}
		LEVEL 0 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 480.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 960.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1200.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 960.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 720.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 480.0;
		}
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 18762.636;
	}
}

TRANSITION_LIST("exact_smallest[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 276.98;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1920.0;
		LEVEL 1 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1680.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1680.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 1440.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1680.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 960.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 480.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1680.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 480.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 720.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 720.0;
		}
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 19003.02;
	}
}

TRANSITION_LIST("exact_smallest[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 516.984;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 960.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 1440.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 2400.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 1680.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 2160.0;
		LEVEL 1 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 480.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1440.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 960.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 480.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 720.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 480.0;
		}
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 480.0;
		}
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 1440.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 19003.016;
	}
}

TRANSITION_LIST("exact_smallest[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 277.329;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 2640.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1680.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 720.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 1440.0;
		LEVEL 1 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 480.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1920.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 720.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 960.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 480.0;
		}
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 480.0;
		}
		LEVEL 0 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 19002.671;
	}
}

TRANSITION_LIST("locator_polyn_1[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 68537.81;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 11282.19;
	}
}

TRANSITION_LIST("locator_polyn_1[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 68577.864;
		LEVEL 1 FOR 60.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 11282.136;
	}
}

TRANSITION_LIST("locator_polyn_1[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 68557.778;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 11282.222;
	}
}

TRANSITION_LIST("locator_polyn_1[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 68537.469;
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 11342.531;
	}
}

TRANSITION_LIST("locator_polyn_1[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 68537.433;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 11322.567;
	}
}

TRANSITION_LIST("locator_polyn_1[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 68537.701;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 11302.299;
	}
}

TRANSITION_LIST("locator_polyn_1[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 68537.835;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 11282.165;
	}
}

TRANSITION_LIST("locator_polyn_0[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 68617.765;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 11142.235;
	}
}

TRANSITION_LIST("locator_polyn_0[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 68618.588;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 11181.412;
	}
}

TRANSITION_LIST("locator_polyn_0[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 68617.448;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 11122.552;
	}
}

TRANSITION_LIST("locator_polyn_0[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 68617.754;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 11142.246;
	}
}

TRANSITION_LIST("locator_polyn_0[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 68697.775;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 11182.225;
	}
}

TRANSITION_LIST("locator_polyn_0[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 68617.554;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 11142.446;
	}
}

TRANSITION_LIST("locator_polyn_0[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 68658.58;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 11121.42;
	}
}

TRANSITION_LIST("locator_polyn_0[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 68617.836;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 11122.164;
	}
}

TRANSITION_LIST("locator_degree_2[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 80000.0;
	}
}

TRANSITION_LIST("locator_degree_2[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 69318.05;
		LEVEL 1 FOR 10681.95;
	}
}

TRANSITION_LIST("locator_degree_2[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 69318.183;
		LEVEL 1 FOR 10681.817;
	}
}

TRANSITION_LIST("locator_degree_2[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 69318.037;
		LEVEL 1 FOR 10681.963;
	}
}

TRANSITION_LIST("locator_degree_2[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 69317.858;
		LEVEL 1 FOR 10682.142;
	}
}

TRANSITION_LIST("locator_degree_2[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 80000.0;
	}
}

TRANSITION_LIST("locator_degree_1[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 80000.0;
	}
}

TRANSITION_LIST("locator_degree_1[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 69318.103;
		LEVEL 1 FOR 10681.897;
	}
}

TRANSITION_LIST("locator_degree_1[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 69317.855;
		LEVEL 1 FOR 10682.145;
	}
}

TRANSITION_LIST("error_location_1[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 70117.722;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 80.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 60.0;
		}
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 180.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 60.0;
			LEVEL 0 FOR 20.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 40.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 4902.278;
	}
}

TRANSITION_LIST("error_location_1[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 70117.737;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 60.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 60.0;
			LEVEL 1 FOR 20.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 60.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 100.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 100.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 100.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 60.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 60.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 4782.263;
	}
}

TRANSITION_LIST("error_location_1[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 70137.147;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 40.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 180.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 40.0;
		}
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 40.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 60.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 40.0;
		}
		LEVEL 1 FOR 20.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 60.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 80.0;
		NODE
		{
			REPEAT = 4;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 60.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 4842.853;
	}
}

TRANSITION_LIST("error_location_1[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 70117.977;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 100.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 60.0;
		}
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 40.0;
		}
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 4782.023;
	}
}

TRANSITION_LIST("error_location_1[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 70137.406;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 60.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 60.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 180.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 40.0;
		}
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 60.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		NODE
		{
			REPEAT = 5;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 4782.594;
	}
}

TRANSITION_LIST("error_location_1[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 70158.943;
		LEVEL 1 FOR 60.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 80.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 120.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 80.0;
			LEVEL 0 FOR 60.0;
		}
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 60.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 4801.057;
	}
}

TRANSITION_LIST("error_location_0[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 70117.578;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 60.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 80.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 40.0;
		}
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 60.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 60.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 4822.422;
	}
}

TRANSITION_LIST("error_location_0[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 70157.577;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 60.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 60.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 60.0;
		}
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 40.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 60.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 80.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 100.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 100.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 80.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 4782.423;
	}
}

TRANSITION_LIST("error_location_0[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 70117.372;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		NODE
		{
			REPEAT = 5;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 60.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 100.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 4802.628;
	}
}

TRANSITION_LIST("error_location_0[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 70117.129;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 40.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 80.0;
		NODE
		{
			REPEAT = 4;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 40.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 4802.871;
	}
}

TRANSITION_LIST("error_location_0[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 70117.145;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 100.0;
		}
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 80.0;
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 4782.855;
	}
}

TRANSITION_LIST("error_location_0[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 70117.364;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 4;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 60.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 80.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 60.0;
		}
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 80.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 40.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 100.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 4882.636;
	}
}

TRANSITION_LIST("error_location_0[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 70137.163;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 20.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 40.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 80.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 40.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 4782.837;
	}
}

TRANSITION_LIST("error_location_0[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 70137.417;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 40.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 180.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 80.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 40.0;
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 4802.583;
	}
}

TRANSITION_LIST("errata_magnitude_coefs_2[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 69398.887;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 10021.113;
	}
}

TRANSITION_LIST("errata_magnitude_coefs_2[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 69439.842;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 180.0;
		LEVEL 1 FOR 80.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 10020.158;
	}
}

TRANSITION_LIST("errata_magnitude_coefs_2[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 69438.438;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 10021.562;
	}
}

TRANSITION_LIST("errata_magnitude_coefs_2[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 69418.43;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 9981.57;
	}
}

TRANSITION_LIST("errata_magnitude_coefs_2[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 69439.621;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 300.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 10020.379;
	}
}

TRANSITION_LIST("errata_magnitude_coefs_2[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 69418.155;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 10041.845;
	}
}

TRANSITION_LIST("errata_magnitude_coefs_2[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 69419.421;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 10040.579;
	}
}

TRANSITION_LIST("errata_magnitude_coefs_2[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 69498.498;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 140.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 120.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 9981.502;
	}
}

TRANSITION_LIST("errata_magnitude_coefs_1[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 69399.06;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 10020.94;
	}
}

TRANSITION_LIST("errata_magnitude_coefs_1[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 69438.297;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 180.0;
		LEVEL 1 FOR 80.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 10021.703;
	}
}

TRANSITION_LIST("exact_smallest[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 757.363;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1440.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1680.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 960.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 960.0;
			LEVEL 1 FOR 480.0;
		}
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 960.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 480.0;
		}
		LEVEL 0 FOR 1680.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 2160.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 720.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 1200.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 1440.0;
		LEVEL 1 FOR 1920.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1680.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 2400.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 18522.637;
	}
}

TRANSITION_LIST("exact_smallest[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 516.988;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 480.0;
		}
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 2400.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 2400.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1440.0;
		LEVEL 1 FOR 1440.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 720.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1920.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 2400.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 240.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 480.0;
		}
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1440.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 480.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 19003.012;
	}
}

TRANSITION_LIST("exact_smallest[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 277.441;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1440.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 1920.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 1440.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 2160.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 480.0;
			LEVEL 0 FOR 480.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 480.0;
		}
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 1680.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 2400.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 480.0;
			LEVEL 0 FOR 480.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 480.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 3360.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 18762.559;
	}
}

TRANSITION_LIST("exact_smallest[8]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 8676.96;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 2160.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 22080.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 6000.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 1680.0;
		}
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 36283.04;
	}
}

TRANSITION_LIST("exact_smallest[9]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 80000.0;
	}
}

TRANSITION_LIST("error_magnitude[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 80000.0;
	}
}

TRANSITION_LIST("error_magnitude[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 80000.0;
	}
}

TRANSITION_LIST("error_magnitude[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 80000.0;
	}
}

TRANSITION_LIST("error_magnitude[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 80000.0;
	}
}

TRANSITION_LIST("error_magnitude[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 80000.0;
	}
}

TRANSITION_LIST("error_magnitude[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 80000.0;
	}
}

TRANSITION_LIST("error_magnitude[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 80000.0;
	}
}

TRANSITION_LIST("error_magnitude[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 80000.0;
	}
}

TRANSITION_LIST("error_location_2[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 70118.317;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 60.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 60.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 80.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 100.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 80.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 60.0;
		}
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 4821.683;
	}
}

TRANSITION_LIST("error_location_2[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 70117.354;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 60.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 60.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 60.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 4802.646;
	}
}

TRANSITION_LIST("error_location_2[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 70117.675;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 80.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 60.0;
		}
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 180.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 60.0;
			LEVEL 0 FOR 20.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 40.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 4902.325;
	}
}

TRANSITION_LIST("error_location_2[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 70118.074;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 60.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 60.0;
			LEVEL 1 FOR 20.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 60.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 100.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 100.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 100.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 60.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 60.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 4781.926;
	}
}

TRANSITION_LIST("error_location_2[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 70138.747;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 40.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 180.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 40.0;
		}
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 40.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 60.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 40.0;
		}
		LEVEL 1 FOR 20.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 60.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 80.0;
		NODE
		{
			REPEAT = 4;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 60.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 4841.253;
	}
}

TRANSITION_LIST("error_location_2[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 70118.072;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 100.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 60.0;
		}
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 40.0;
		}
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 4781.928;
	}
}

TRANSITION_LIST("error_location_2[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 70138.671;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 60.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 60.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 180.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 40.0;
		}
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 60.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		NODE
		{
			REPEAT = 5;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 4781.329;
	}
}

TRANSITION_LIST("error_location_2[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 70158.343;
		LEVEL 1 FOR 60.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 80.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 120.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 80.0;
			LEVEL 0 FOR 60.0;
		}
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 60.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 4801.657;
	}
}

TRANSITION_LIST("error_location_1[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 70118.43;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 60.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 60.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 80.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 100.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 80.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 60.0;
		}
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 4821.57;
	}
}

TRANSITION_LIST("error_location_1[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 70117.156;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 60.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 60.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 60.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 4802.844;
	}
}

TRANSITION_LIST("channel_char[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 520.579;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 1440.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 240.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 480.0;
		}
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 480.0;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 2400.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 2640.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 1440.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 480.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1440.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 960.0;
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 1200.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 480.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 18519.421;
	}
}

TRANSITION_LIST("channel_char[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 519.798;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 480.0;
		}
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 1200.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 480.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1440.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1440.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 480.0;
		}
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 960.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 480.0;
		}
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1440.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 960.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 480.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 480.0;
			LEVEL 0 FOR 240.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 3360.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 1200.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 480.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 720.0;
		}
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 18760.202;
	}
}

TRANSITION_LIST("channel_char[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 277.616;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 480.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 960.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 480.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 480.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 720.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 480.0;
			LEVEL 0 FOR 240.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 480.0;
		}
		LEVEL 1 FOR 1200.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 18762.384;
	}
}

TRANSITION_LIST("channel_char[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 277.639;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 1680.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 480.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 1440.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1440.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 2160.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 720.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 1440.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 720.0;
		}
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 480.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 1200.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 480.0;
		}
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1680.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 1440.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 720.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 1440.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 18762.361;
	}
}

TRANSITION_LIST("channel_char[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 277.604;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 1920.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 1920.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1680.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1920.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1440.0;
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 18522.396;
	}
}

TRANSITION_LIST("channel_char[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 277.763;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1440.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 720.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 480.0;
			LEVEL 0 FOR 480.0;
		}
		LEVEL 1 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 480.0;
			LEVEL 1 FOR 480.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 1680.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 480.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 720.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 480.0;
			LEVEL 1 FOR 480.0;
		}
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 18522.237;
	}
}

TRANSITION_LIST("channel_char[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 517.402;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 240.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 480.0;
		}
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 720.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 480.0;
		}
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1920.0;
		LEVEL 0 FOR 2400.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 480.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1680.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 480.0;
		}
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 720.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 480.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 18522.598;
	}
}

TRANSITION_LIST("channel_char[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1717.915;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1680.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 4080.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1440.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 6000.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1680.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 4560.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 480.0;
		}
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 240.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 480.0;
			LEVEL 1 FOR 480.0;
		}
		LEVEL 0 FOR 5040.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1920.0;
		LEVEL 1 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 1440.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 2880.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 2160.0;
		LEVEL 1 FOR 18762.085;
	}
}

TRANSITION_LIST("channel_char[8]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 3157.898;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1680.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 3360.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 8160.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 4800.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1920.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 2400.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 2640.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 3360.0;
		}
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 6000.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1440.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 8400.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 18522.102;
	}
}

TRANSITION_LIST("channel_char[9]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 10597.613;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 3120.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 4800.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 24960.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 3120.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 12240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 18522.387;
	}
}

TRANSITION_LIST("channel_char[10]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 56917.779;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 4320.0;
		LEVEL 1 FOR 18522.221;
	}
}

TRANSITION_LIST("channel_char[11]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 61477.604;
		LEVEL 1 FOR 18522.396;
	}
}

TRANSITION_LIST("channel_char[12]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 61477.885;
		LEVEL 1 FOR 18522.115;
	}
}

TRANSITION_LIST("channel_char[13]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 61478.048;
		LEVEL 1 FOR 18521.952;
	}
}

TRANSITION_LIST("channel_char[14]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 61478.858;
		LEVEL 1 FOR 18521.142;
	}
}

TRANSITION_LIST("unmodified_syndr_polyn_2[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 80000.0;
	}
}

TRANSITION_LIST("R_degree_2[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 69277.628;
		LEVEL 1 FOR 10722.372;
	}
}

TRANSITION_LIST("R_degree_2[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 68237.197;
		LEVEL 1 FOR 1040.0;
		LEVEL 0 FOR 10722.803;
	}
}

TRANSITION_LIST("R_degree_2[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 68237.654;
		LEVEL 1 FOR 11762.346;
	}
}

TRANSITION_LIST("R_degree_2[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 68237.665;
		LEVEL 1 FOR 11762.335;
	}
}

TRANSITION_LIST("R_degree_2[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 68237.63;
		LEVEL 1 FOR 11762.37;
	}
}

TRANSITION_LIST("R_degree_2[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 80000.0;
	}
}

TRANSITION_LIST("R_degree_1[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 69277.168;
		LEVEL 1 FOR 10722.832;
	}
}

TRANSITION_LIST("R_degree_1[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 68237.595;
		LEVEL 1 FOR 1040.0;
		LEVEL 0 FOR 10722.405;
	}
}

TRANSITION_LIST("cutoff_threshold_0[16]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 319.671;
		LEVEL 1 FOR 2880.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1680.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 4800.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 8160.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 4800.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 3120.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 2400.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 6240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 3360.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 6000.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1440.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 9840.0;
		LEVEL 0 FOR 18480.329;
	}
}

TRANSITION_LIST("cutoff_threshold_0[17]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 319.217;
		LEVEL 1 FOR 10320.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 3120.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 4800.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 24960.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 3120.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 12240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 18480.783;
	}
}

TRANSITION_LIST("cutoff_threshold_0[18]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 319.286;
		LEVEL 1 FOR 56640.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 4320.0;
		LEVEL 0 FOR 18480.714;
	}
}

TRANSITION_LIST("cutoff_threshold_0[19]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 319.246;
		LEVEL 1 FOR 61200.0;
		LEVEL 0 FOR 18480.754;
	}
}

TRANSITION_LIST("cutoff_threshold_0[20]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 319.441;
		LEVEL 1 FOR 61200.0;
		LEVEL 0 FOR 18480.559;
	}
}

TRANSITION_LIST("cutoff_threshold_0[21]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 319.225;
		LEVEL 1 FOR 61200.0;
		LEVEL 0 FOR 18480.775;
	}
}

TRANSITION_LIST("cutoff_threshold_0[22]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 318.376;
		LEVEL 1 FOR 61200.0;
		LEVEL 0 FOR 18481.624;
	}
}

TRANSITION_LIST("cutoff_threshold_0[23]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 319.149;
		LEVEL 1 FOR 61200.0;
		LEVEL 0 FOR 18480.851;
	}
}

TRANSITION_LIST("corrected_error_count[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 80000.0;
	}
}

TRANSITION_LIST("corrected_error_count[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 80000.0;
	}
}

TRANSITION_LIST("corrected_error_count[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 80000.0;
	}
}

TRANSITION_LIST("corrected_error_count[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 80000.0;
	}
}

TRANSITION_LIST("corrected_error_count[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 80000.0;
	}
}

TRANSITION_LIST("corrected_error_count[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 80000.0;
	}
}

TRANSITION_LIST("corrected_error_count[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 80000.0;
	}
}

TRANSITION_LIST("corrected_error_count[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 80000.0;
	}
}

TRANSITION_LIST("corrected_cw[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 75317.82;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 80.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 60.0;
		}
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 140.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 80.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 2.18;
	}
}

TRANSITION_LIST("corrected_cw[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 75317.888;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 60.0;
		}
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 20.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 40.0;
		}
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 40.0;
		}
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 40.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 62.112;
	}
}

TRANSITION_LIST("corrected_cw[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 75317.903;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 80.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 180.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 180.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 2.097;
	}
}

TRANSITION_LIST("corrected_cw[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 75297.5;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 80.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 4;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 62.5;
	}
}

TRANSITION_LIST("corrected_cw[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 75297.905;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 60.0;
			LEVEL 1 FOR 20.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 20.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 80.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 60.0;
			LEVEL 1 FOR 60.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 40.0;
		}
		LEVEL 1 FOR 180.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 42.095;
	}
}

TRANSITION_LIST("corrected_cw[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 75317.848;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 80.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 60.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 180.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 60.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 20.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 2.152;
	}
}

TRANSITION_LIST("corrected_cw[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 75297.878;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 60.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 100.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 2.122;
	}
}

TRANSITION_LIST("corrected_cw[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 75297.808;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 140.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 80.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 80.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 80.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 40.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 60.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 100.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 60.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 2.192;
	}
}

TRANSITION_LIST("Q_degree_0[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 68318.952;
		LEVEL 1 FOR 900.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 10701.048;
	}
}

TRANSITION_LIST("Q_degree_0[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 69218.186;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 10701.814;
	}
}

TRANSITION_LIST("Q_degree_0[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 68319.318;
		LEVEL 1 FOR 11680.682;
	}
}

TRANSITION_LIST("Q_degree_0[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 68317.807;
		LEVEL 1 FOR 11682.193;
	}
}

TRANSITION_LIST("Q_degree_0[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 68318.582;
		LEVEL 1 FOR 11681.418;
	}
}

TRANSITION_LIST("Q_degree_0[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 80000.0;
	}
}

TRANSITION_LIST("L_degree_2[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 80000.0;
	}
}

TRANSITION_LIST("L_degree_2[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 69137.367;
		LEVEL 1 FOR 10862.633;
	}
}

TRANSITION_LIST("L_degree_2[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 69137.385;
		LEVEL 1 FOR 10862.615;
	}
}

TRANSITION_LIST("L_degree_2[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 69138.034;
		LEVEL 1 FOR 10861.966;
	}
}

TRANSITION_LIST("L_degree_2[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 69136.992;
		LEVEL 1 FOR 10863.008;
	}
}

TRANSITION_LIST("L_degree_2[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 80000.0;
	}
}

TRANSITION_LIST("L_degree_1[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 80000.0;
	}
}

TRANSITION_LIST("L_degree_1[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 69137.486;
		LEVEL 1 FOR 10862.514;
	}
}

TRANSITION_LIST("L_degree_1[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 69137.829;
		LEVEL 1 FOR 10862.171;
	}
}

TRANSITION_LIST("L_degree_1[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 69137.668;
		LEVEL 1 FOR 10862.332;
	}
}

TRANSITION_LIST("L_degree_1[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 69137.861;
		LEVEL 1 FOR 10862.139;
	}
}

TRANSITION_LIST("L_degree_1[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 80000.0;
	}
}

TRANSITION_LIST("L_degree_0[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 80000.0;
	}
}

TRANSITION_LIST("L_degree_0[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 69218.62;
		LEVEL 1 FOR 10781.38;
	}
}

TRANSITION_LIST("L_degree_0[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 69218.677;
		LEVEL 1 FOR 10781.323;
	}
}

TRANSITION_LIST("L_degree_0[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 69218.737;
		LEVEL 1 FOR 10781.263;
	}
}

TRANSITION_LIST("L_degree_0[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 69217.512;
		LEVEL 1 FOR 10782.488;
	}
}

TRANSITION_LIST("L_degree_0[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 80000.0;
	}
}

TRANSITION_LIST("R_degree_1[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 68237.929;
		LEVEL 1 FOR 11762.071;
	}
}

TRANSITION_LIST("R_degree_1[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 68237.18;
		LEVEL 1 FOR 11762.82;
	}
}

TRANSITION_LIST("R_degree_1[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 68237.605;
		LEVEL 1 FOR 11762.395;
	}
}

TRANSITION_LIST("R_degree_1[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 80000.0;
	}
}

TRANSITION_LIST("R_degree_0[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 69358.34;
		LEVEL 1 FOR 10641.66;
	}
}

TRANSITION_LIST("R_degree_0[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 68317.647;
		LEVEL 1 FOR 1040.0;
		LEVEL 0 FOR 10642.353;
	}
}

TRANSITION_LIST("R_degree_0[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 68317.865;
		LEVEL 1 FOR 11682.135;
	}
}

TRANSITION_LIST("R_degree_0[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 68318.231;
		LEVEL 1 FOR 11681.769;
	}
}

TRANSITION_LIST("R_degree_0[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 68317.53;
		LEVEL 1 FOR 11682.47;
	}
}

TRANSITION_LIST("R_degree_0[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 80000.0;
	}
}

TRANSITION_LIST("Q_degree_2[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 68237.575;
		LEVEL 1 FOR 900.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 10782.425;
	}
}

TRANSITION_LIST("Q_degree_2[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 69137.759;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 10782.241;
	}
}

TRANSITION_LIST("Q_degree_2[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 68237.568;
		LEVEL 1 FOR 11762.432;
	}
}

TRANSITION_LIST("Q_degree_2[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 68237.587;
		LEVEL 1 FOR 11762.413;
	}
}

TRANSITION_LIST("Q_degree_2[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 68237.804;
		LEVEL 1 FOR 11762.196;
	}
}

TRANSITION_LIST("Q_degree_2[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 80000.0;
	}
}

TRANSITION_LIST("unmodified_syndr_polyn_2[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 80000.0;
	}
}

TRANSITION_LIST("Q_degree_1[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 68237.576;
		LEVEL 1 FOR 900.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 10782.424;
	}
}

TRANSITION_LIST("Q_degree_1[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 69137.144;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 10782.856;
	}
}

TRANSITION_LIST("Q_degree_1[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 68237.553;
		LEVEL 1 FOR 11762.447;
	}
}

TRANSITION_LIST("Q_degree_1[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 68237.591;
		LEVEL 1 FOR 11762.409;
	}
}

TRANSITION_LIST("Q_degree_1[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 68237.836;
		LEVEL 1 FOR 11762.164;
	}
}

TRANSITION_LIST("Q_degree_1[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 80000.0;
	}
}

TRANSITION_LIST("cw_data[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 517.794;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1680.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1440.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 960.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 480.0;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 2160.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 1440.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1440.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 2160.0;
		LEVEL 1 FOR 1440.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 18522.206;
	}
}

TRANSITION_LIST("cw_data[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 278.325;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 960.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 480.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 480.0;
		NODE
		{
			REPEAT = 4;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 1440.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 1920.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 480.0;
		}
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 720.0;
		}
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 18761.675;
	}
}

TRANSITION_LIST("cw_data[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 277.13;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 1440.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 720.0;
			LEVEL 1 FOR 240.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 480.0;
			LEVEL 1 FOR 240.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1440.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1440.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1920.0;
		LEVEL 1 FOR 960.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 720.0;
			LEVEL 1 FOR 720.0;
			LEVEL 0 FOR 480.0;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 240.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 480.0;
		}
		LEVEL 1 FOR 2160.0;
		LEVEL 0 FOR 1680.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1680.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 18762.87;
	}
}

TRANSITION_LIST("cw_data[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 517.12;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 960.0;
		}
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1440.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 720.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1920.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 2160.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 720.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 480.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1440.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 480.0;
			LEVEL 1 FOR 240.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 480.0;
		}
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1440.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		NODE
		{
			REPEAT = 5;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 480.0;
		}
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 19482.88;
	}
}

TRANSITION_LIST("cw_data[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 277.344;
		LEVEL 1 FOR 1440.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 1440.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1680.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 1440.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 720.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 1200.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 480.0;
		}
		LEVEL 0 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 480.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 720.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 480.0;
		}
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 18522.656;
	}
}

TRANSITION_LIST("cw_data[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 277.112;
		LEVEL 1 FOR 1440.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 1920.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 1680.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 960.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 960.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 960.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 480.0;
		}
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 720.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 480.0;
		}
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1440.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 480.0;
			LEVEL 1 FOR 480.0;
		}
		LEVEL 0 FOR 1200.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 720.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 480.0;
		}
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 1440.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1680.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 720.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 720.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1680.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 480.0;
		}
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 18522.888;
	}
}

TRANSITION_LIST("cutoff_threshold_2[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 559.718;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 1440.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 240.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 480.0;
		}
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 480.0;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 2400.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 2640.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 1440.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 480.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1440.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 960.0;
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 1200.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 480.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 18480.282;
	}
}

TRANSITION_LIST("cutoff_threshold_2[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1039.631;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 720.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 720.0;
			LEVEL 1 FOR 1440.0;
		}
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 480.0;
			LEVEL 0 FOR 240.0;
		}
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 720.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 720.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 480.0;
		}
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 720.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 480.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1680.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 960.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 1440.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 1440.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 1680.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 18480.369;
	}
}

TRANSITION_LIST("cutoff_threshold_2[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 319.344;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 2160.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 1680.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 720.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 720.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 480.0;
			LEVEL 0 FOR 240.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 480.0;
		}
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		NODE
		{
			REPEAT = 4;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 480.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 18480.656;
	}
}

TRANSITION_LIST("cutoff_threshold_2[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 559.59;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 720.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1920.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 1920.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 1440.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 480.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 1200.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 720.0;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 480.0;
		}
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 1440.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 2400.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 480.0;
		}
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1440.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 1440.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 1440.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 18480.41;
	}
}

TRANSITION_LIST("cutoff_threshold_2[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 319.926;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 1680.0;
		LEVEL 0 FOR 960.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 1200.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 720.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 480.0;
		}
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1440.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 480.0;
			LEVEL 0 FOR 720.0;
		}
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 1440.0;
		LEVEL 0 FOR 2640.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 1440.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 1920.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1440.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1680.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1920.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 18720.074;
	}
}

TRANSITION_LIST("cutoff_threshold_2[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 799.856;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 480.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 480.0;
		}
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 480.0;
			LEVEL 1 FOR 240.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 480.0;
			LEVEL 1 FOR 960.0;
		}
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1920.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 480.0;
		}
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1440.0;
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 480.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1440.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 18720.144;
	}
}

TRANSITION_LIST("cutoff_threshold_2[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 559.272;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 1680.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 720.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 480.0;
		}
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 1680.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 1440.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 2160.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 480.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 960.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 1440.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1440.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 1200.0;
			LEVEL 0 FOR 480.0;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 480.0;
		}
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 18960.728;
	}
}

TRANSITION_LIST("cutoff_threshold_2[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 559.255;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 480.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 2400.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 720.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 1440.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 960.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 480.0;
		}
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1440.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1440.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1920.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 720.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 18480.745;
	}
}

TRANSITION_LIST("cutoff_threshold_2[8]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 559.079;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 2400.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1680.0;
		LEVEL 1 FOR 1200.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 2160.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 1200.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 480.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1440.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 480.0;
			LEVEL 0 FOR 480.0;
		}
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 2160.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 720.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 480.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1440.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 1680.0;
		LEVEL 0 FOR 20160.921;
	}
}

TRANSITION_LIST("cutoff_threshold_2[9]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1278.99;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1440.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 480.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 480.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 480.0;
		}
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		NODE
		{
			REPEAT = 5;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 480.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 2160.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 1440.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 2400.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1680.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 480.0;
		}
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 18721.01;
	}
}

TRANSITION_LIST("cutoff_threshold_2[10]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 319.297;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1920.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 1440.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 1680.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 480.0;
		}
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 1680.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 720.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 1680.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 1440.0;
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 2160.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 19200.703;
	}
}

TRANSITION_LIST("cutoff_threshold_2[11]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 318.971;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 2160.0;
		LEVEL 1 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 240.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 720.0;
			LEVEL 0 FOR 480.0;
		}
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1440.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 2160.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 480.0;
			LEVEL 1 FOR 480.0;
		}
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		NODE
		{
			REPEAT = 4;
			LEVEL 0 FOR 480.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 480.0;
			LEVEL 1 FOR 480.0;
		}
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 960.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 480.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 18721.029;
	}
}

TRANSITION_LIST("cutoff_threshold_2[12]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2238.985;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 1920.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 1440.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 1200.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 720.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 1200.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1680.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 1440.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 18481.015;
	}
}

TRANSITION_LIST("cutoff_threshold_2[13]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 319.816;
		LEVEL 1 FOR 1440.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 5280.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 3120.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 1680.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 960.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 720.0;
		}
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1440.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 480.0;
			LEVEL 1 FOR 480.0;
		}
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1440.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 4080.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1680.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 960.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 1440.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 2160.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 18720.184;
	}
}

TRANSITION_LIST("cutoff_threshold_2[14]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 319.584;
		LEVEL 1 FOR 2640.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1920.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 2160.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 5520.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 3120.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1920.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 2400.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 2640.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1680.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1920.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1440.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 4320.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1440.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 5280.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 2880.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 18480.416;
	}
}

TRANSITION_LIST("cutoff_threshold_2[15]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 318.963;
		LEVEL 1 FOR 2880.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 7200.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 3120.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 4800.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 24240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 3120.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 12240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 18481.037;
	}
}

TRANSITION_LIST("cutoff_threshold_2[16]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 318.957;
		LEVEL 1 FOR 56640.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 4320.0;
		LEVEL 0 FOR 18481.043;
	}
}

TRANSITION_LIST("cutoff_threshold_2[17]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 318.947;
		LEVEL 1 FOR 61200.0;
		LEVEL 0 FOR 18481.053;
	}
}

TRANSITION_LIST("derivative_error_location[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 80000.0;
	}
}

TRANSITION_LIST("derivative_error_location[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 80000.0;
	}
}

TRANSITION_LIST("derivative_error_location[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 80000.0;
	}
}

TRANSITION_LIST("derivative_error_location[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 80000.0;
	}
}

TRANSITION_LIST("derivative_error_location[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 80000.0;
	}
}

TRANSITION_LIST("decoder_rd_addr[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 61517.45;
		NODE
		{
			REPEAT = 127;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 13402.55;
	}
}

TRANSITION_LIST("decoder_rd_addr[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 61537.749;
		NODE
		{
			REPEAT = 63;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 40.0;
		}
		LEVEL 1 FOR 13422.251;
	}
}

TRANSITION_LIST("decoder_rd_addr[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 61577.216;
		NODE
		{
			REPEAT = 31;
			LEVEL 1 FOR 80.0;
			LEVEL 0 FOR 80.0;
		}
		LEVEL 1 FOR 13462.784;
	}
}

TRANSITION_LIST("decoder_rd_addr[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 61657.212;
		NODE
		{
			REPEAT = 15;
			LEVEL 1 FOR 160.0;
			LEVEL 0 FOR 160.0;
		}
		LEVEL 1 FOR 13542.788;
	}
}

TRANSITION_LIST("decoder_rd_addr[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 61817.426;
		NODE
		{
			REPEAT = 7;
			LEVEL 1 FOR 320.0;
			LEVEL 0 FOR 320.0;
		}
		LEVEL 1 FOR 13702.574;
	}
}

TRANSITION_LIST("decoder_rd_addr[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 62137.133;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 640.0;
			LEVEL 0 FOR 640.0;
		}
		LEVEL 1 FOR 14022.867;
	}
}

TRANSITION_LIST("decoder_rd_addr[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 62777.349;
		LEVEL 1 FOR 1280.0;
		LEVEL 0 FOR 1280.0;
		LEVEL 1 FOR 14662.651;
	}
}

TRANSITION_LIST("decoder_rd_addr[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 64057.433;
		LEVEL 1 FOR 15942.567;
	}
}

TRANSITION_LIST("cycle[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 80000.0;
	}
}

TRANSITION_LIST("cycle[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 80000.0;
	}
}

TRANSITION_LIST("cycle[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 80000.0;
	}
}

TRANSITION_LIST("cycle[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 80000.0;
	}
}

TRANSITION_LIST("cycle[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 80000.0;
	}
}

TRANSITION_LIST("cycle[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 80000.0;
	}
}

TRANSITION_LIST("cycle[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 80000.0;
	}
}

TRANSITION_LIST("cycle[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 80000.0;
	}
}

TRANSITION_LIST("cycle[8]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 80000.0;
	}
}

TRANSITION_LIST("cw_data[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 517.765;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 960.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 480.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1440.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 720.0;
		}
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1680.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 960.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1440.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 480.0;
		}
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 480.0;
		}
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 1440.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 18522.235;
	}
}

TRANSITION_LIST("cw_data[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 518.708;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 480.0;
			LEVEL 0 FOR 720.0;
		}
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 1440.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 240.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 480.0;
		}
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 720.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 480.0;
		}
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 480.0;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 480.0;
		}
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 1440.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 19001.292;
	}
}

TRANSITION_LIST("cutoff_threshold_1[16]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 319.027;
		LEVEL 1 FOR 10320.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 3120.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 4800.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 24960.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 3120.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 12240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 18480.973;
	}
}

TRANSITION_LIST("cutoff_threshold_1[17]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 318.752;
		LEVEL 1 FOR 56640.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 4320.0;
		LEVEL 0 FOR 18481.248;
	}
}

TRANSITION_LIST("cutoff_threshold_1[18]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 318.42;
		LEVEL 1 FOR 61200.0;
		LEVEL 0 FOR 18481.58;
	}
}

TRANSITION_LIST("cutoff_threshold_1[19]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 320.197;
		LEVEL 1 FOR 61200.0;
		LEVEL 0 FOR 18479.803;
	}
}

TRANSITION_LIST("cutoff_threshold_1[20]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 318.417;
		LEVEL 1 FOR 61200.0;
		LEVEL 0 FOR 18481.583;
	}
}

TRANSITION_LIST("cutoff_threshold_1[21]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 318.381;
		LEVEL 1 FOR 61200.0;
		LEVEL 0 FOR 18481.619;
	}
}

TRANSITION_LIST("cutoff_threshold_1[22]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 318.388;
		LEVEL 1 FOR 61200.0;
		LEVEL 0 FOR 18481.612;
	}
}

TRANSITION_LIST("cutoff_threshold_1[23]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 318.728;
		LEVEL 1 FOR 61200.0;
		LEVEL 0 FOR 18481.272;
	}
}

TRANSITION_LIST("cutoff_threshold_0[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 80000.0;
	}
}

TRANSITION_LIST("cutoff_threshold_0[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 80000.0;
	}
}

TRANSITION_LIST("cutoff_threshold_0[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 559.61;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 1440.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 240.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 480.0;
		}
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 480.0;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 2400.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 2640.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 1440.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 480.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1440.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 960.0;
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 1200.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 480.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 18480.39;
	}
}

TRANSITION_LIST("cutoff_threshold_0[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1039.28;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 720.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 720.0;
			LEVEL 1 FOR 1440.0;
		}
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 480.0;
			LEVEL 0 FOR 240.0;
		}
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 720.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 720.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 480.0;
		}
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 720.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 480.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1680.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 960.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 1440.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 1440.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 1680.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 18480.72;
	}
}

TRANSITION_LIST("cutoff_threshold_0[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 318.843;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 2160.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 1680.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 720.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 720.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 480.0;
			LEVEL 0 FOR 240.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 480.0;
		}
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		NODE
		{
			REPEAT = 4;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 480.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 18481.157;
	}
}

TRANSITION_LIST("cutoff_threshold_0[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 798.83;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1440.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 720.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 480.0;
			LEVEL 0 FOR 480.0;
		}
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 1440.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 480.0;
			LEVEL 0 FOR 480.0;
		}
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 480.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 1440.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 2880.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 480.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 1440.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 18721.17;
	}
}

TRANSITION_LIST("cutoff_threshold_0[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 319.422;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1440.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 480.0;
			LEVEL 1 FOR 720.0;
		}
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 480.0;
		}
		NODE
		{
			REPEAT = 5;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 480.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 1440.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1200.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 1680.0;
		LEVEL 1 FOR 1440.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 18480.578;
	}
}

TRANSITION_LIST("cutoff_threshold_0[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 319.405;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 3600.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 720.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 480.0;
		}
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 2160.0;
		LEVEL 0 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 480.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 1680.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 480.0;
			LEVEL 1 FOR 480.0;
		}
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 1680.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1680.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 1440.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 18720.595;
	}
}

TRANSITION_LIST("cutoff_threshold_0[8]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 559.683;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1680.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 720.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 480.0;
		}
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 1680.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 1440.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1440.0;
		LEVEL 1 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 720.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1440.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 1440.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 720.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 960.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 1680.0;
		LEVEL 1 FOR 240.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 480.0;
			LEVEL 1 FOR 480.0;
		}
		LEVEL 0 FOR 19200.317;
	}
}

TRANSITION_LIST("cutoff_threshold_0[9]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 319.316;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 480.0;
		}
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 480.0;
		}
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 1680.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 480.0;
			LEVEL 1 FOR 960.0;
		}
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 720.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 480.0;
		}
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 1440.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 480.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 1920.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 1920.0;
		NODE
		{
			REPEAT = 4;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 18720.684;
	}
}

TRANSITION_LIST("cutoff_threshold_0[10]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 319.222;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 480.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 960.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 480.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 1200.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 720.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 480.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1440.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 1680.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 480.0;
		}
		LEVEL 0 FOR 19200.778;
	}
}

TRANSITION_LIST("cutoff_threshold_0[11]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 559.22;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 480.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1680.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 480.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 1440.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1440.0;
		LEVEL 0 FOR 1440.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 480.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 480.0;
			LEVEL 1 FOR 480.0;
		}
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1680.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 18480.78;
	}
}

TRANSITION_LIST("cutoff_threshold_0[12]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 799.607;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1440.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 480.0;
		}
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 480.0;
		}
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 480.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 1440.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 720.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 1440.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 480.0;
			LEVEL 1 FOR 480.0;
		}
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 960.0;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 480.0;
		}
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 1440.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 720.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 480.0;
			LEVEL 0 FOR 240.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 18480.393;
	}
}

TRANSITION_LIST("cutoff_threshold_0[13]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 559.649;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 480.0;
			LEVEL 0 FOR 720.0;
		}
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 720.0;
		NODE
		{
			REPEAT = 6;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 960.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 720.0;
		}
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 720.0;
		}
		LEVEL 0 FOR 2640.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 960.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 720.0;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 480.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 1440.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 1680.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 18480.351;
	}
}

TRANSITION_LIST("cutoff_threshold_0[14]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 319.198;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 480.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 960.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 720.0;
		}
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 720.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 480.0;
			LEVEL 1 FOR 240.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1440.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 960.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 480.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 18480.802;
	}
}

TRANSITION_LIST("cutoff_threshold_0[15]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 319.261;
		LEVEL 1 FOR 1440.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1680.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 2160.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1680.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1440.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 3840.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 2160.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1680.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1680.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 3120.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 480.0;
		}
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 240.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 480.0;
			LEVEL 0 FOR 480.0;
		}
		LEVEL 1 FOR 5040.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1920.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 5280.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 960.0;
		}
		LEVEL 0 FOR 18720.739;
	}
}

TRANSITION_LIST("cutoff_threshold_2[18]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 318.966;
		LEVEL 1 FOR 61200.0;
		LEVEL 0 FOR 18481.034;
	}
}

TRANSITION_LIST("cutoff_threshold_2[19]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 318.37;
		LEVEL 1 FOR 61200.0;
		LEVEL 0 FOR 18481.63;
	}
}

TRANSITION_LIST("cutoff_threshold_2[20]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 318.849;
		LEVEL 1 FOR 61200.0;
		LEVEL 0 FOR 18481.151;
	}
}

TRANSITION_LIST("cutoff_threshold_2[21]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 318.761;
		LEVEL 1 FOR 61200.0;
		LEVEL 0 FOR 18481.239;
	}
}

TRANSITION_LIST("cutoff_threshold_2[22]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 318.785;
		LEVEL 1 FOR 61200.0;
		LEVEL 0 FOR 18481.215;
	}
}

TRANSITION_LIST("cutoff_threshold_2[23]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 318.973;
		LEVEL 1 FOR 61200.0;
		LEVEL 0 FOR 18481.027;
	}
}

TRANSITION_LIST("unmodified_syndr_polyn_2[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 80000.0;
	}
}

TRANSITION_LIST("cutoff_threshold_1[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 559.704;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 1440.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 240.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 480.0;
		}
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 480.0;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 2400.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 2640.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 1440.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 480.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1440.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 960.0;
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 1200.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 480.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 18480.296;
	}
}

TRANSITION_LIST("cutoff_threshold_1[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 559.682;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 480.0;
		}
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 1200.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 480.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1440.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1440.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 480.0;
		}
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 960.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 480.0;
		}
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1440.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 960.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 480.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 480.0;
			LEVEL 0 FOR 240.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 3360.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 1200.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 480.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 720.0;
		}
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 18720.318;
	}
}

TRANSITION_LIST("cutoff_threshold_1[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 319.435;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 480.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 960.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 480.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 480.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 720.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 480.0;
			LEVEL 0 FOR 240.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 480.0;
		}
		LEVEL 1 FOR 1200.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 18720.565;
	}
}

TRANSITION_LIST("cutoff_threshold_1[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 319.331;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 1680.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 480.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 1440.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1440.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 2160.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 720.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 1440.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 720.0;
		}
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 480.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 1200.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 480.0;
		}
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1680.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 1440.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 720.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 1440.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 18720.669;
	}
}

TRANSITION_LIST("cutoff_threshold_1[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 319.661;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 1920.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 1920.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1680.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1920.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1440.0;
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 18480.339;
	}
}

TRANSITION_LIST("cutoff_threshold_1[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 318.987;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1440.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 720.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 480.0;
			LEVEL 0 FOR 480.0;
		}
		LEVEL 1 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 480.0;
			LEVEL 1 FOR 480.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 1680.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 480.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 720.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 480.0;
			LEVEL 1 FOR 480.0;
		}
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 18481.013;
	}
}

TRANSITION_LIST("cutoff_threshold_1[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 559.293;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 240.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 480.0;
		}
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 720.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 480.0;
		}
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1920.0;
		LEVEL 0 FOR 2400.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 480.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1680.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 480.0;
		}
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 720.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 480.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 18480.707;
	}
}

TRANSITION_LIST("cutoff_threshold_1[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 559.766;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 480.0;
		}
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 720.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 1440.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 480.0;
		}
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 2400.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1440.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 1680.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1440.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 18480.234;
	}
}

TRANSITION_LIST("cutoff_threshold_1[8]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1039.653;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1920.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 480.0;
			LEVEL 0 FOR 720.0;
		}
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1440.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 1200.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 480.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 1680.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 720.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 480.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 1440.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 1440.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 1920.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 18480.347;
	}
}

TRANSITION_LIST("cutoff_threshold_1[9]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 319.262;
		LEVEL 1 FOR 1920.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1440.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1440.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 720.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 480.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 720.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 480.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 480.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 960.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 480.0;
		}
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1440.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 480.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 1440.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 480.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 18720.738;
	}
}

TRANSITION_LIST("cutoff_threshold_1[10]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 799.403;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 480.0;
		}
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 1440.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 1440.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 1440.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 1440.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 1440.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1440.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 1440.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 480.0;
		}
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 18720.597;
	}
}

TRANSITION_LIST("cutoff_threshold_1[11]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 799.671;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 2160.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 1200.0;
			LEVEL 1 FOR 480.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 480.0;
			LEVEL 1 FOR 240.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 960.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 480.0;
			LEVEL 1 FOR 720.0;
		}
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1440.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 1440.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 480.0;
		}
		LEVEL 0 FOR 720.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 720.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 480.0;
		}
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1440.0;
		LEVEL 0 FOR 1200.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 18480.329;
	}
}

TRANSITION_LIST("cutoff_threshold_1[12]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 559.91;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 720.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 480.0;
			LEVEL 1 FOR 480.0;
		}
		LEVEL 0 FOR 480.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 1440.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 2400.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 18480.09;
	}
}

TRANSITION_LIST("cutoff_threshold_1[13]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 319.887;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 720.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 480.0;
		}
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 2400.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 480.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 480.0;
		}
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 480.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 18480.113;
	}
}

TRANSITION_LIST("cutoff_threshold_1[14]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 319.271;
		LEVEL 1 FOR 1440.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1680.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 2160.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1680.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1440.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 6000.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1680.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 4560.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 480.0;
		}
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 240.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 480.0;
			LEVEL 0 FOR 480.0;
		}
		LEVEL 1 FOR 5040.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1920.0;
		LEVEL 0 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 1440.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 3600.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 960.0;
		}
		LEVEL 0 FOR 18720.729;
	}
}

TRANSITION_LIST("cutoff_threshold_1[15]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 319.261;
		LEVEL 1 FOR 2880.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1680.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 4800.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 8160.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 4800.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1920.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 2400.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 2640.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 3360.0;
		}
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 6000.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1440.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 9840.0;
		LEVEL 0 FOR 18480.739;
	}
}

TRANSITION_LIST("q_in[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 60.898;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 140.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 180.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 220.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 60.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 180.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 180.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 100.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 360.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 180.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 180.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 160.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 220.0;
		LEVEL 0 FOR 180.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 180.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 180.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 60.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 120.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 120.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 220.0;
		LEVEL 0 FOR 180.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 140.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 40.0;
		}
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 220.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 180.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 120.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 180.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 180.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 60.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 180.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 120.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 180.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 120.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 40.0;
		}
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 220.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 180.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 220.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 360.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 260.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 180.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 180.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 60.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 180.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 180.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 20.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 40.0;
		}
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 180.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 120.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 240.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 180.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 80.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 140.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 180.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 120.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 180.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 220.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 220.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 18499.102;
	}
}

TRANSITION_LIST("q_in[8]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 120.68;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 180.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 180.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 180.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 120.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 180.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 220.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 180.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 180.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 100.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 180.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 180.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 60.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 140.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 220.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 180.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 260.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 180.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 180.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 120.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 220.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 120.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 180.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 180.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 260.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 180.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 220.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 120.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 180.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 180.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 180.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 60.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 200.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 40.0;
		}
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 80.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 60.0;
			LEVEL 1 FOR 100.0;
			NODE
			{
				REPEAT = 2;
				LEVEL 0 FOR 20.0;
				LEVEL 1 FOR 20.0;
			}
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 180.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 120.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 40.0;
		}
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 180.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 180.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 300.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 180.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 180.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 180.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 100.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 180.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 160.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 220.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 140.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 180.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 20.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 180.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 240.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 180.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 180.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 180.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 120.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 180.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 180.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 180.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 220.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 180.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 18739.32;
	}
}

TRANSITION_LIST("threshold_0[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 80000.0;
	}
}

TRANSITION_LIST("q_in[9]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 121.112;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 180.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 180.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 180.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 120.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 180.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 220.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 180.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 180.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 180.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 180.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 60.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 140.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 220.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 180.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 260.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 180.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 180.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 180.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 120.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 220.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 120.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 180.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 260.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 180.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 120.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 180.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 180.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 180.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 60.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 200.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 40.0;
		}
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 120.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 180.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 120.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 40.0;
		}
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 180.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 180.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 180.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 180.0;
			LEVEL 0 FOR 40.0;
		}
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 180.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 180.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 180.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 160.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 220.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 140.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 180.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 20.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 180.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 240.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 180.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 180.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 180.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 120.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 180.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 180.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 180.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 220.0;
		LEVEL 0 FOR 220.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 18738.888;
	}
}

TRANSITION_LIST("q_fade[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 340.998;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1680.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1920.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 240.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 480.0;
		}
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 480.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 720.0;
		}
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 4320.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 480.0;
		}
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 480.0;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 1680.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 480.0;
		}
		LEVEL 0 FOR 18699.002;
	}
}

TRANSITION_LIST("q_fade[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 60.628;
		LEVEL 1 FOR 280.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 480.0;
			LEVEL 0 FOR 720.0;
		}
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 720.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 480.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 1440.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 2400.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 960.0;
			LEVEL 1 FOR 480.0;
		}
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 1920.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 960.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 480.0;
			LEVEL 1 FOR 480.0;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 2400.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 1680.0;
		LEVEL 0 FOR 720.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 720.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 1440.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 19179.372;
	}
}

TRANSITION_LIST("q_fade[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 341.235;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 1440.0;
		LEVEL 1 FOR 1680.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1440.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 480.0;
			LEVEL 1 FOR 480.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 1200.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 1680.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 18938.765;
	}
}

TRANSITION_LIST("q_fade[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 60.974;
		LEVEL 1 FOR 280.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 480.0;
		}
		LEVEL 0 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 480.0;
		}
		LEVEL 1 FOR 1200.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 1440.0;
		LEVEL 1 FOR 1680.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 720.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 480.0;
		}
		LEVEL 0 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 720.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 1680.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 720.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1440.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 2160.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 720.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 480.0;
		}
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 18939.026;
	}
}

TRANSITION_LIST("q_fade[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 60.577;
		LEVEL 1 FOR 280.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 720.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1440.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 2160.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 720.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 2160.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 1440.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 1200.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 19419.423;
	}
}

TRANSITION_LIST("q_fade[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 340.814;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 960.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 960.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 1920.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 1440.0;
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 2880.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 19179.186;
	}
}

TRANSITION_LIST("threshold_1[8]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 80000.0;
	}
}

TRANSITION_LIST("q_fade[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 340.598;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 480.0;
		}
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 480.0;
			LEVEL 1 FOR 240.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 3600.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1440.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 480.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1440.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 960.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 480.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 2400.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 480.0;
			LEVEL 0 FOR 480.0;
		}
		LEVEL 1 FOR 480.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1440.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 18699.402;
	}
}

TRANSITION_LIST("q_fade[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 60.651;
		LEVEL 1 FOR 280.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 1440.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 720.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 1920.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1440.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 480.0;
			LEVEL 0 FOR 480.0;
		}
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 960.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 480.0;
			LEVEL 0 FOR 480.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 480.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 240.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 480.0;
		}
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 2400.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 18939.349;
	}
}

TRANSITION_LIST("q_fade[8]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 8501.519;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 2160.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 16320.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 5520.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 6000.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 1680.0;
		}
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 36458.481;
	}
}

TRANSITION_LIST("q_fade[9]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 80000.0;
	}
}

TRANSITION_LIST("threshold_1[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 80000.0;
	}
}

TRANSITION_LIST("q[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 75302.031;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 80.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 60.0;
		}
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 140.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 80.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 17.969;
	}
}

TRANSITION_LIST("q[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 75302.794;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 60.0;
		}
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 20.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 40.0;
		}
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 40.0;
		}
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 40.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 77.206;
	}
}

TRANSITION_LIST("q[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 75303.293;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 80.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 180.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 180.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 16.707;
	}
}

TRANSITION_LIST("q[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 75282.797;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 80.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 4;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 77.203;
	}
}

TRANSITION_LIST("q[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 75282.055;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 60.0;
			LEVEL 1 FOR 20.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 20.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 80.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 60.0;
			LEVEL 1 FOR 60.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 40.0;
		}
		LEVEL 1 FOR 180.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 57.945;
	}
}

TRANSITION_LIST("quotient[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 80000.0;
	}
}

TRANSITION_LIST("quotient[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 80000.0;
	}
}

TRANSITION_LIST("quotient[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 80000.0;
	}
}

TRANSITION_LIST("quotient[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 80000.0;
	}
}

TRANSITION_LIST("threshold_0[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 80000.0;
	}
}

TRANSITION_LIST("quotient[8]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 80000.0;
	}
}

TRANSITION_LIST("quotient[9]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 80000.0;
	}
}

TRANSITION_LIST("quotient[10]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 80000.0;
	}
}

TRANSITION_LIST("quotient[11]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 80000.0;
	}
}

TRANSITION_LIST("quotient[12]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 80000.0;
	}
}

TRANSITION_LIST("quotient[13]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 80000.0;
	}
}

TRANSITION_LIST("quotient[14]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 80000.0;
	}
}

TRANSITION_LIST("q_in[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 81.101;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 120.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 100.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 40.0;
		}
		LEVEL 1 FOR 140.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 220.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 220.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 180.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 100.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 100.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 100.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 460.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 180.0;
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 60.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 100.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 180.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 220.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 140.0;
		}
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 220.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 60.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 120.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 120.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 180.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 180.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 60.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 180.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 160.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 60.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 60.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 220.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 200.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 180.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 160.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 220.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 140.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 180.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 100.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 180.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 180.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 180.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 260.0;
		LEVEL 1 FOR 18478.899;
	}
}

TRANSITION_LIST("threshold_0[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 80000.0;
	}
}

TRANSITION_LIST("threshold_0[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 80000.0;
	}
}

TRANSITION_LIST("q_in[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100.527;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 120.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 100.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 140.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 200.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 220.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 100.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 360.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 180.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 100.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 100.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 160.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 120.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 120.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 220.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 180.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 220.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 180.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 180.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 180.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 220.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 200.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 220.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 180.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 220.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 100.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 40.0;
		}
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 180.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 300.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 260.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 60.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 160.0;
		}
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 320.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 180.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 60.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 100.0;
		}
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 220.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 220.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 20.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 120.0;
			LEVEL 0 FOR 60.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 120.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 180.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 160.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 140.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 220.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 120.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 40.0;
		}
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 280.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 180.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 180.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 220.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 160.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 180.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 120.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 120.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 180.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 100.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 18739.473;
	}
}

TRANSITION_LIST("q_in[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 60.73;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 20.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 40.0;
		}
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 380.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 220.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 180.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 140.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 220.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 180.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 180.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 220.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 160.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 220.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 260.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 20.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 60.0;
			LEVEL 0 FOR 120.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 220.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 180.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 180.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 120.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 180.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 220.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 120.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 180.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 180.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 260.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 340.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 180.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 100.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 40.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 100.0;
		}
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 180.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 180.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 140.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 180.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 100.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 100.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 260.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 180.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 180.0;
		LEVEL 0 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 340.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 40.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 180.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 120.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 60.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 120.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 180.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 140.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 100.0;
		}
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 220.0;
		LEVEL 0 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 200.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 160.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 180.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 180.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 120.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 40.0;
		}
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 220.0;
		LEVEL 0 FOR 180.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 100.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 100.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 220.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 160.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 140.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 220.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 360.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 18479.27;
	}
}

TRANSITION_LIST("q_in[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 60.496;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 180.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 220.0;
		LEVEL 0 FOR 260.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 220.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 180.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 340.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 180.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 140.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 100.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 120.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 40.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 340.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 180.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 180.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 180.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 160.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 120.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 180.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 180.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 100.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 180.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 100.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 140.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 140.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 180.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 180.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 220.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 20.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 180.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 120.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 180.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 320.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 120.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 140.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 440.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 60.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 180.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 220.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 140.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 220.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 180.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 180.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 140.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 20.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 40.0;
		}
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 180.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 140.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 40.0;
		}
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 340.0;
		LEVEL 1 FOR 18499.504;
	}
}

TRANSITION_LIST("q_in[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 61.183;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 100.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 140.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 180.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 180.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 140.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 180.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 140.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 100.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 180.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 280.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 180.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 100.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 180.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 180.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 100.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 140.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 40.0;
		}
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 260.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 100.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 180.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 260.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 220.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 220.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 20.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 140.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 60.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 200.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 100.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 120.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 320.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 180.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 300.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 220.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 100.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 180.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 180.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 180.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 160.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 40.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 180.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 260.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 180.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 140.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 220.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 140.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 120.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 280.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 180.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 180.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 120.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 180.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 180.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 120.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 18498.817;
	}
}

TRANSITION_LIST("q_in[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 101.036;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 140.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 180.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 220.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 220.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 140.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 100.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 160.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 180.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 140.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 180.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 160.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 220.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 220.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 180.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 220.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 180.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 160.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 140.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 180.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 180.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 180.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 180.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 180.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 220.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 100.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 120.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 240.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 180.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 180.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 180.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 180.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 120.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 220.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 180.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 160.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 100.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 220.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 180.0;
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 120.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 80.0;
		}
		LEVEL 0 FOR 220.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 180.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 140.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 220.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 180.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 18738.964;
	}
}

TRANSITION_LIST("q_in[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 121.192;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 180.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 120.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 60.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 140.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 160.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 180.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 180.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 60.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 200.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 140.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 180.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 220.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 140.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 140.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 180.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 180.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 100.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 160.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 120.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 180.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 60.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 180.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 60.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 140.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 220.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 180.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 180.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 220.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 180.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 360.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 260.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 180.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 180.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 60.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 100.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 220.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 180.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 120.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 180.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 220.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 180.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 180.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 180.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 120.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 180.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 180.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 18838.808;
	}
}

TRANSITION_LIST("threshold_2[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 80000.0;
	}
}

TRANSITION_LIST("number_of_erasures_1[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 66259.864;
		LEVEL 1 FOR 13740.136;
	}
}

TRANSITION_LIST("number_of_erasures_1[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 80000.0;
	}
}

TRANSITION_LIST("number_of_erasures_1[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 80000.0;
	}
}

TRANSITION_LIST("threshold_2[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 80000.0;
	}
}

TRANSITION_LIST("number_of_erasures_0[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 61778.021;
		LEVEL 1 FOR 620.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 260.0;
		LEVEL 0 FOR 420.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 820.0;
		LEVEL 1 FOR 220.0;
		LEVEL 0 FOR 580.0;
		LEVEL 1 FOR 460.0;
		LEVEL 0 FOR 280.0;
		LEVEL 1 FOR 780.0;
		LEVEL 0 FOR 260.0;
		LEVEL 1 FOR 13481.979;
	}
}

TRANSITION_LIST("number_of_erasures_0[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 62398.025;
		LEVEL 1 FOR 280.0;
		LEVEL 0 FOR 440.0;
		LEVEL 1 FOR 1040.0;
		LEVEL 0 FOR 1040.0;
		LEVEL 1 FOR 1060.0;
		LEVEL 0 FOR 13741.975;
	}
}

TRANSITION_LIST("number_of_erasures_0[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 62678.028;
		LEVEL 1 FOR 1480.0;
		LEVEL 0 FOR 2100.0;
		LEVEL 1 FOR 13741.972;
	}
}

TRANSITION_LIST("number_of_erasures_0[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 64158.063;
		LEVEL 1 FOR 15841.937;
	}
}

TRANSITION_LIST("threshold_2[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 80000.0;
	}
}

TRANSITION_LIST("number_of_erasures_0[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 80000.0;
	}
}

TRANSITION_LIST("number_of_erasures_0[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 80000.0;
	}
}

TRANSITION_LIST("normalized_signal[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 80000.0;
	}
}

TRANSITION_LIST("normalized_signal[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 80000.0;
	}
}

TRANSITION_LIST("normalized_signal[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 80000.0;
	}
}

TRANSITION_LIST("threshold_2[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 80000.0;
	}
}

TRANSITION_LIST("normalized_signal[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 80000.0;
	}
}

TRANSITION_LIST("normalized_signal[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 80000.0;
	}
}

TRANSITION_LIST("normalized_signal[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 282.71;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 480.0;
			LEVEL 0 FOR 480.0;
		}
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 480.0;
		NODE
		{
			REPEAT = 5;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 480.0;
			LEVEL 1 FOR 480.0;
		}
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 960.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 480.0;
		}
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 720.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1440.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 720.0;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 480.0;
		}
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 480.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 720.0;
		}
		NODE
		{
			REPEAT = 4;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1680.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 18997.29;
	}
}

TRANSITION_LIST("normalized_signal[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 523.44;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 1440.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 480.0;
		}
		LEVEL 0 FOR 1440.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 1440.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 480.0;
		}
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 720.0;
		}
		LEVEL 0 FOR 720.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 1200.0;
		}
		LEVEL 1 FOR 2400.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 720.0;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1440.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 480.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 240.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 480.0;
		}
		LEVEL 1 FOR 480.0;
		NODE
		{
			REPEAT = 4;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 960.0;
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 18756.56;
	}
}

TRANSITION_LIST("normalized_signal[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 283.505;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 720.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 720.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 1440.0;
		LEVEL 1 FOR 240.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 480.0;
		}
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 1200.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 1200.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 480.0;
			LEVEL 0 FOR 240.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1680.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 720.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 2160.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 18756.495;
	}
}

TRANSITION_LIST("q[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 75302.505;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 80.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 60.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 180.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 60.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 20.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 17.495;
	}
}

TRANSITION_LIST("q[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 75282.768;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 60.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 100.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 17.232;
	}
}

TRANSITION_LIST("q[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 75283.057;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 140.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 80.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 80.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 80.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 40.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 60.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 100.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 60.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 16.943;
	}
}

TRANSITION_LIST("threshold_1[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 80000.0;
	}
}

TRANSITION_LIST("number_of_erasures_2[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 62399.533;
		LEVEL 1 FOR 280.0;
		LEVEL 0 FOR 420.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 820.0;
		LEVEL 1 FOR 1260.0;
		LEVEL 0 FOR 280.0;
		LEVEL 1 FOR 780.0;
		LEVEL 0 FOR 260.0;
		LEVEL 1 FOR 13480.467;
	}
}

TRANSITION_LIST("number_of_erasures_2[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 62678.207;
		LEVEL 1 FOR 440.0;
		LEVEL 0 FOR 2080.0;
		LEVEL 1 FOR 1060.0;
		LEVEL 0 FOR 13741.793;
	}
}

TRANSITION_LIST("threshold_1[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 80000.0;
	}
}

TRANSITION_LIST("number_of_erasures_2[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 63119.29;
		LEVEL 1 FOR 3140.0;
		LEVEL 0 FOR 13740.71;
	}
}

TRANSITION_LIST("number_of_erasures_2[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 66259.678;
		LEVEL 1 FOR 13740.322;
	}
}

TRANSITION_LIST("number_of_erasures_2[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 80000.0;
	}
}

TRANSITION_LIST("number_of_erasures_2[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 80000.0;
	}
}

TRANSITION_LIST("threshold_1[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 80000.0;
	}
}

TRANSITION_LIST("number_of_erasures_1[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 62399.591;
		LEVEL 1 FOR 280.0;
		LEVEL 0 FOR 420.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 820.0;
		LEVEL 1 FOR 1260.0;
		LEVEL 0 FOR 280.0;
		LEVEL 1 FOR 780.0;
		LEVEL 0 FOR 260.0;
		LEVEL 1 FOR 13480.409;
	}
}

TRANSITION_LIST("number_of_erasures_1[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 62678.185;
		LEVEL 1 FOR 440.0;
		LEVEL 0 FOR 2080.0;
		LEVEL 1 FOR 1060.0;
		LEVEL 0 FOR 13741.815;
	}
}

TRANSITION_LIST("number_of_erasures_1[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 63118.906;
		LEVEL 1 FOR 3140.0;
		LEVEL 0 FOR 13741.094;
	}
}

TRANSITION_LIST("threshold_1[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 80000.0;
	}
}

TRANSITION_LIST("threshold_1[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 80000.0;
	}
}

TRANSITION_LIST("threshold_1[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 80000.0;
	}
}

TRANSITION_LIST("threshold_1[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 80000.0;
	}
}

TRANSITION_LIST("threshold_2[8]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 80000.0;
	}
}

TRANSITION_LIST("state_case_2[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 68298.104;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 760.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 10701.896;
	}
}

TRANSITION_LIST("state_case_2[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 68278.169;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 740.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 10701.831;
	}
}

TRANSITION_LIST("syndrome[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 66678.761;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 12781.239;
	}
}

TRANSITION_LIST("syndrome[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 66718.847;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 12741.153;
	}
}

TRANSITION_LIST("syndrome[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 66798.827;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 12741.173;
	}
}

TRANSITION_LIST("syndrome[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 66679.239;
		LEVEL 1 FOR 60.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 12760.761;
	}
}

TRANSITION_LIST("recvd_codeword[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 61541.258;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 80.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 60.0;
		}
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 140.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 80.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 13378.742;
	}
}

TRANSITION_LIST("recvd_codeword[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 61541.746;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 60.0;
		}
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 20.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 40.0;
		}
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 40.0;
		}
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 40.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 13418.254;
	}
}

TRANSITION_LIST("recvd_codeword[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 61541.614;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 80.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 180.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 180.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 13378.386;
	}
}

TRANSITION_LIST("recvd_codeword[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 61520.848;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 80.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 4;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 60.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 13399.152;
	}
}

TRANSITION_LIST("recvd_codeword[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 61521.517;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 60.0;
			LEVEL 1 FOR 20.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 20.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 80.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 60.0;
			LEVEL 1 FOR 60.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 40.0;
		}
		LEVEL 1 FOR 180.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 13398.483;
	}
}

TRANSITION_LIST("recvd_codeword[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 61540.881;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 80.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 60.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 180.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 60.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 20.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		NODE
		{
			REPEAT = 5;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 40.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 13459.119;
	}
}

TRANSITION_LIST("recvd_codeword[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 61521.337;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 60.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 100.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 40.0;
		}
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 13378.663;
	}
}

TRANSITION_LIST("recvd_codeword[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 61520.88;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 140.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 80.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 80.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 80.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 40.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 60.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 100.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 60.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 40.0;
		}
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 13379.12;
	}
}

TRANSITION_LIST("syndrome[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 66678.319;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 12741.681;
	}
}

TRANSITION_LIST("recieved_codeword[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 258.103;
		LEVEL 1 FOR 1440.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 1920.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 1680.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 960.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 960.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 960.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 480.0;
		}
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 720.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 480.0;
		}
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1440.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 480.0;
			LEVEL 1 FOR 480.0;
		}
		LEVEL 0 FOR 1200.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 720.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 480.0;
		}
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 1440.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1680.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 720.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 720.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1680.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 480.0;
		}
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 18541.897;
	}
}

TRANSITION_LIST("recieved_codeword[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 258.177;
		LEVEL 1 FOR 1440.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 1440.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1680.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 1440.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 720.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 1200.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 480.0;
		}
		LEVEL 0 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 480.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 720.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 480.0;
		}
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 18541.823;
	}
}

TRANSITION_LIST("recieved_codeword[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 497.832;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 960.0;
		}
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1440.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 720.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1920.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 2160.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 720.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 480.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1440.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 480.0;
			LEVEL 1 FOR 240.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 480.0;
		}
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1440.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		NODE
		{
			REPEAT = 5;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 480.0;
		}
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 19502.168;
	}
}

TRANSITION_LIST("recieved_codeword[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 258.08;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 1440.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 720.0;
			LEVEL 1 FOR 240.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 480.0;
			LEVEL 1 FOR 240.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1440.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1440.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1920.0;
		LEVEL 1 FOR 960.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 720.0;
			LEVEL 1 FOR 720.0;
			LEVEL 0 FOR 480.0;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 240.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 480.0;
		}
		LEVEL 1 FOR 2160.0;
		LEVEL 0 FOR 1680.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1680.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 18781.92;
	}
}

TRANSITION_LIST("recieved_codeword[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 256.987;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 960.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 480.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 480.0;
		NODE
		{
			REPEAT = 4;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 1440.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 1920.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 480.0;
		}
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 720.0;
		}
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 18783.013;
	}
}

TRANSITION_LIST("recieved_codeword[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 497.83;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1680.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1440.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 960.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 480.0;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 2160.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 1440.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1440.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 2160.0;
		LEVEL 1 FOR 1440.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 18542.17;
	}
}

TRANSITION_LIST("state_case_0[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 68418.115;
		LEVEL 1 FOR 800.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 10621.885;
	}
}

TRANSITION_LIST("state_case_0[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 68378.579;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 760.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 10621.421;
	}
}

TRANSITION_LIST("state_case_0[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 68359.148;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 740.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 10620.852;
	}
}

TRANSITION_LIST("signal_count[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 37.199;
		NODE
		{
			REPEAT = 1536;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 18502.801;
	}
}

TRANSITION_LIST("signal_count[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 57.214;
		NODE
		{
			REPEAT = 768;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 40.0;
		}
		LEVEL 1 FOR 18502.786;
	}
}

TRANSITION_LIST("signal_count[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 97.197;
		NODE
		{
			REPEAT = 255;
			LEVEL 1 FOR 80.0;
			LEVEL 0 FOR 160.0;
		}
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 18622.803;
	}
}

TRANSITION_LIST("signal_count[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 177.194;
		NODE
		{
			REPEAT = 255;
			LEVEL 1 FOR 80.0;
			LEVEL 0 FOR 160.0;
		}
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 18542.806;
	}
}

TRANSITION_LIST("state_case_1[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 68338.042;
		LEVEL 1 FOR 800.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 10701.958;
	}
}

TRANSITION_LIST("sigma_square[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 80000.0;
	}
}

TRANSITION_LIST("sigma_square[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 80000.0;
	}
}

TRANSITION_LIST("sigma_square[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 80000.0;
	}
}

TRANSITION_LIST("sigma_square[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 80000.0;
	}
}

TRANSITION_LIST("sigma_square[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 80000.0;
	}
}

TRANSITION_LIST("sigma_square[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 80000.0;
	}
}

TRANSITION_LIST("sigma_square[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 80000.0;
	}
}

TRANSITION_LIST("sigma_square[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 80000.0;
	}
}

TRANSITION_LIST("sigma_square[8]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 80000.0;
	}
}

TRANSITION_LIST("sigma_square[9]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 80000.0;
	}
}

TRANSITION_LIST("state_case_1[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 68298.649;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 760.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 10701.351;
	}
}

TRANSITION_LIST("state_case_1[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 68277.5;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 740.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 10702.5;
	}
}

TRANSITION_LIST("state_case_2[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 68338.726;
		LEVEL 1 FOR 800.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 10701.274;
	}
}

TRANSITION_LIST("rdaddress_fade[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 3917.171;
		NODE
		{
			REPEAT = 7;
			LEVEL 1 FOR 3840.0;
			LEVEL 0 FOR 3840.0;
		}
		LEVEL 1 FOR 22322.829;
	}
}

TRANSITION_LIST("rdaddress_fade[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 7757.827;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 7680.0;
			LEVEL 0 FOR 7680.0;
		}
		LEVEL 1 FOR 26162.173;
	}
}

TRANSITION_LIST("rdaddress_fade[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 15437.604;
		LEVEL 1 FOR 15360.0;
		LEVEL 0 FOR 15360.0;
		LEVEL 1 FOR 33842.396;
	}
}

TRANSITION_LIST("rdaddress_fade[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 30797.581;
		LEVEL 1 FOR 49202.419;
	}
}

TRANSITION_LIST("threshold_0[8]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 80000.0;
	}
}

TRANSITION_LIST("rdaddress[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 75257.752;
		NODE
		{
			REPEAT = 118;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 2.248;
	}
}

TRANSITION_LIST("rdaddress[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 75277.373;
		NODE
		{
			REPEAT = 59;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 40.0;
		}
		LEVEL 1 FOR 2.627;
	}
}

TRANSITION_LIST("rdaddress[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 75317.767;
		NODE
		{
			REPEAT = 29;
			LEVEL 1 FOR 80.0;
			LEVEL 0 FOR 80.0;
		}
		LEVEL 1 FOR 42.233;
	}
}

TRANSITION_LIST("rdaddress[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 75397.498;
		NODE
		{
			REPEAT = 14;
			LEVEL 1 FOR 160.0;
			LEVEL 0 FOR 160.0;
		}
		LEVEL 1 FOR 122.502;
	}
}

TRANSITION_LIST("rdaddress[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 75557.964;
		NODE
		{
			REPEAT = 6;
			LEVEL 1 FOR 320.0;
			LEVEL 0 FOR 320.0;
		}
		LEVEL 1 FOR 320.0;
		LEVEL 0 FOR 282.036;
	}
}

TRANSITION_LIST("rdaddress[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 75877.797;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 640.0;
			LEVEL 0 FOR 640.0;
		}
		LEVEL 1 FOR 282.203;
	}
}

TRANSITION_LIST("rdaddress[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 76517.788;
		LEVEL 1 FOR 1280.0;
		LEVEL 0 FOR 1280.0;
		LEVEL 1 FOR 922.212;
	}
}

TRANSITION_LIST("rdaddress[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 77797.502;
		LEVEL 1 FOR 2202.498;
	}
}

TRANSITION_LIST("threshold_0[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 80000.0;
	}
}

TRANSITION_LIST("threshold_0[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 80000.0;
	}
}

TRANSITION_LIST("threshold_0[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 80000.0;
	}
}

TRANSITION_LIST("threshold_0[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 80000.0;
	}
}

TRANSITION_LIST("quotient[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 80000.0;
	}
}

TRANSITION_LIST("quotient[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 80000.0;
	}
}

TRANSITION_LIST("quotient[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 80000.0;
	}
}

TRANSITION_LIST("quotient[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 80000.0;
	}
}

TRANSITION_LIST("recieved_codeword[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 497.138;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 480.0;
			LEVEL 0 FOR 720.0;
		}
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 1440.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 240.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 480.0;
		}
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 720.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 480.0;
		}
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 480.0;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 480.0;
		}
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 1440.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 19022.862;
	}
}

TRANSITION_LIST("recieved_codeword[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 496.967;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 960.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 480.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1440.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 720.0;
		}
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1680.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 960.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1440.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 480.0;
		}
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 480.0;
		}
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 1440.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 18543.033;
	}
}

TRANSITION_LIST("syndrome[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 66719.411;
		LEVEL 1 FOR 100.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 12740.589;
	}
}

TRANSITION_LIST("rdaddress_in[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 57.704;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		NODE
		{
			REPEAT = 254;
			LEVEL 1 FOR 100.0;
			NODE
			{
				REPEAT = 3;
				LEVEL 0 FOR 20.0;
				LEVEL 1 FOR 20.0;
			}
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 100.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 18502.296;
	}
}

TRANSITION_LIST("rdaddress_in[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 78.062;
		NODE
		{
			REPEAT = 255;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 120.0;
			LEVEL 0 FOR 40.0;
		}
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 18521.938;
	}
}

TRANSITION_LIST("rdaddress_in[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 117.684;
		NODE
		{
			REPEAT = 255;
			LEVEL 1 FOR 160.0;
			LEVEL 0 FOR 80.0;
		}
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 18522.316;
	}
}

TRANSITION_LIST("rdaddress_in[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 278.209;
		NODE
		{
			REPEAT = 127;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 18521.791;
	}
}

TRANSITION_LIST("rdaddress_in[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 517.446;
		NODE
		{
			REPEAT = 63;
			LEVEL 1 FOR 480.0;
			LEVEL 0 FOR 480.0;
		}
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 18522.554;
	}
}

TRANSITION_LIST("rdaddress_in[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 998.111;
		NODE
		{
			REPEAT = 31;
			LEVEL 1 FOR 960.0;
			LEVEL 0 FOR 960.0;
		}
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 18521.889;
	}
}

TRANSITION_LIST("rdaddress_in[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1957.796;
		NODE
		{
			REPEAT = 15;
			LEVEL 1 FOR 1920.0;
			LEVEL 0 FOR 1920.0;
		}
		LEVEL 1 FOR 1920.0;
		LEVEL 0 FOR 18522.204;
	}
}

TRANSITION_LIST("syndrome[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 66678.738;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 12761.262;
	}
}

TRANSITION_LIST("syndrome[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 66658.855;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 12781.145;
	}
}

TRANSITION_LIST("rdaddress_in[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 3877.459;
		NODE
		{
			REPEAT = 7;
			LEVEL 1 FOR 3840.0;
			LEVEL 0 FOR 3840.0;
		}
		LEVEL 1 FOR 3840.0;
		LEVEL 0 FOR 18522.541;
	}
}

TRANSITION_LIST("rdaddress_in[8]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 7717.47;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 7680.0;
			LEVEL 0 FOR 7680.0;
		}
		LEVEL 1 FOR 7680.0;
		LEVEL 0 FOR 18522.53;
	}
}

TRANSITION_LIST("rdaddress_in[9]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 15398.302;
		LEVEL 1 FOR 15360.0;
		LEVEL 0 FOR 15360.0;
		LEVEL 1 FOR 15360.0;
		LEVEL 0 FOR 18521.698;
	}
}

TRANSITION_LIST("rdaddress_in[10]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 30757.534;
		LEVEL 1 FOR 30720.0;
		LEVEL 0 FOR 18522.466;
	}
}

TRANSITION_LIST("rdaddress_fade[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 317.13;
		NODE
		{
			REPEAT = 127;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 18722.87;
	}
}

TRANSITION_LIST("rdaddress_fade[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 558.108;
		NODE
		{
			REPEAT = 63;
			LEVEL 1 FOR 480.0;
			LEVEL 0 FOR 480.0;
		}
		LEVEL 1 FOR 18961.892;
	}
}

TRANSITION_LIST("rdaddress_fade[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1037.15;
		NODE
		{
			REPEAT = 31;
			LEVEL 1 FOR 960.0;
			LEVEL 0 FOR 960.0;
		}
		LEVEL 1 FOR 19442.85;
	}
}

TRANSITION_LIST("rdaddress_fade[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1998.379;
		NODE
		{
			REPEAT = 15;
			LEVEL 1 FOR 1920.0;
			LEVEL 0 FOR 1920.0;
		}
		LEVEL 1 FOR 20401.621;
	}
}

TRANSITION_LIST("modified_actual_distance[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 80000.0;
	}
}

TRANSITION_LIST("modified_actual_distance[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 80000.0;
	}
}

TRANSITION_LIST("modified_actual_distance[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 80000.0;
	}
}

TRANSITION_LIST("modified_actual_distance[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 80000.0;
	}
}

TRANSITION_LIST("modified_actual_distance[8]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 318.818;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 480.0;
			LEVEL 0 FOR 480.0;
		}
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 480.0;
		NODE
		{
			REPEAT = 5;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 480.0;
			LEVEL 1 FOR 480.0;
		}
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 960.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 480.0;
		}
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 720.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1440.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 720.0;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 480.0;
		}
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 480.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 720.0;
		}
		NODE
		{
			REPEAT = 4;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1680.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 18961.182;
	}
}

TRANSITION_LIST("modified_actual_distance[9]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 318.949;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 720.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 1440.0;
		LEVEL 1 FOR 2880.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 480.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1680.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 3120.0;
		LEVEL 0 FOR 2880.0;
		LEVEL 1 FOR 2400.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 960.0;
		}
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1920.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 18721.051;
	}
}

TRANSITION_LIST("unmodified_syndr_polyn_1[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 80000.0;
	}
}

TRANSITION_LIST("modified_actual_distance[10]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 558.997;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1680.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 480.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 720.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 720.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 480.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 1680.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1440.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 1440.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1440.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 1440.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 1440.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 480.0;
		}
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 480.0;
		}
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 18721.003;
	}
}

TRANSITION_LIST("modified_actual_distance[11]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 559.075;
		LEVEL 1 FOR 1680.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1920.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 960.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 480.0;
		}
		LEVEL 0 FOR 1200.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 720.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1440.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 1440.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1440.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 480.0;
			LEVEL 1 FOR 480.0;
			LEVEL 0 FOR 720.0;
		}
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 1440.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1440.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 480.0;
		}
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 18720.925;
	}
}

TRANSITION_LIST("modified_actual_distance[12]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 319.01;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 2160.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 1440.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 2160.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 1440.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 720.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 960.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 18960.99;
	}
}

TRANSITION_LIST("modified_actual_distance[13]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 318.421;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 1680.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 480.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 480.0;
			LEVEL 1 FOR 240.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 720.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 960.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 720.0;
		}
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 1440.0;
		LEVEL 0 FOR 240.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 480.0;
		}
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 480.0;
			LEVEL 1 FOR 480.0;
		}
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 1680.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 18481.579;
	}
}

TRANSITION_LIST("modified_actual_distance[14]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 318.395;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 720.0;
			LEVEL 1 FOR 720.0;
		}
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 240.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 720.0;
		}
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 1680.0;
		LEVEL 1 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 1200.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 720.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 1440.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 720.0;
			LEVEL 1 FOR 480.0;
		}
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1920.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 480.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 720.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 720.0;
		NODE
		{
			REPEAT = 4;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 18481.605;
	}
}

TRANSITION_LIST("modified_actual_distance[15]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1278.424;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 1440.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 480.0;
			LEVEL 0 FOR 720.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 480.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 1920.0;
		LEVEL 0 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 1440.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1680.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 720.0;
		NODE
		{
			REPEAT = 5;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 18481.576;
	}
}

TRANSITION_LIST("modified_actual_distance[16]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 318.947;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 480.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 1680.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 720.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1440.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 720.0;
		}
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 960.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 480.0;
			LEVEL 1 FOR 240.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 480.0;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 720.0;
		}
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 960.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 480.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 720.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1920.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 480.0;
			LEVEL 0 FOR 720.0;
		}
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 1680.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 18721.053;
	}
}

TRANSITION_LIST("modified_actual_distance[17]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 558.776;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1440.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1440.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 480.0;
			LEVEL 0 FOR 480.0;
		}
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 2640.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 960.0;
			LEVEL 1 FOR 480.0;
		}
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1920.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 18721.224;
	}
}

TRANSITION_LIST("modified_actual_distance[18]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 558.865;
		LEVEL 1 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 1440.0;
		LEVEL 1 FOR 1680.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 1440.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 720.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 480.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 720.0;
			NODE
			{
				REPEAT = 2;
				LEVEL 0 FOR 240.0;
				LEVEL 1 FOR 240.0;
			}
			LEVEL 0 FOR 480.0;
			LEVEL 1 FOR 720.0;
			LEVEL 0 FOR 720.0;
		}
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 480.0;
		}
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 720.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 480.0;
		}
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1680.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 480.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 1440.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 1440.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 18481.135;
	}
}

TRANSITION_LIST("modified_actual_distance[19]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1758.824;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1440.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 1440.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 1920.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 2160.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 1440.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 720.0;
		}
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 720.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 720.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 480.0;
			LEVEL 1 FOR 480.0;
		}
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1440.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 1440.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1440.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 18481.176;
	}
}

TRANSITION_LIST("unmodified_syndr_polyn_1[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 80000.0;
	}
}

TRANSITION_LIST("modified_actual_distance[20]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 318.992;
		LEVEL 1 FOR 5280.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1680.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1920.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 1680.0;
		}
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 3840.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1440.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 1200.0;
		}
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 3360.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1440.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1680.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1680.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1680.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 3840.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1440.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 3120.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 18481.008;
	}
}

TRANSITION_LIST("modified_actual_distance[21]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 318.969;
		LEVEL 1 FOR 59760.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 18481.031;
	}
}

TRANSITION_LIST("modified_actual_distance[22]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 318.957;
		LEVEL 1 FOR 59760.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 18481.043;
	}
}

TRANSITION_LIST("modified_syndr_polyn_1[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 67619.254;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 11800.746;
	}
}

TRANSITION_LIST("unmodified_syndr_polyn_1[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 80000.0;
	}
}

TRANSITION_LIST("modified_syndr_polyn_1[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 67637.97;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 300.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 11822.03;
	}
}

TRANSITION_LIST("modified_syndr_polyn_1[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 67618.922;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 11841.078;
	}
}

TRANSITION_LIST("modified_syndr_polyn_1[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 67618.962;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 11841.038;
	}
}

TRANSITION_LIST("modified_syndr_polyn_1[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 67699.73;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 11800.27;
	}
}

TRANSITION_LIST("unmodified_syndr_polyn_1[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 80000.0;
	}
}

TRANSITION_LIST("modified_syndr_polyn_0[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 67678.192;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 80.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 11721.808;
	}
}

TRANSITION_LIST("modified_syndr_polyn_0[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 67718.114;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 11721.886;
	}
}

TRANSITION_LIST("modified_syndr_polyn_0[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 67697.681;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 11882.319;
	}
}

TRANSITION_LIST("unmodified_syndr_polyn_1[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 80000.0;
	}
}

TRANSITION_LIST("modified_syndr_polyn_0[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 67798.199;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 11721.801;
	}
}

TRANSITION_LIST("modified_syndr_polyn_0[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 67698.155;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 100.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 11821.845;
	}
}

TRANSITION_LIST("modified_syndr_polyn_0[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 67697.736;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 11762.264;
	}
}

TRANSITION_LIST("modified_syndr_polyn_0[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 67717.843;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 20.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 11722.157;
	}
}

TRANSITION_LIST("modified_syndr_polyn_0[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 67738.288;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 11721.712;
	}
}

TRANSITION_LIST("modified_actual_distance[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 80000.0;
	}
}

TRANSITION_LIST("modified_actual_distance[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 80000.0;
	}
}

TRANSITION_LIST("unmodified_syndr_polyn_1[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 80000.0;
	}
}

TRANSITION_LIST("modified_actual_distance[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 80000.0;
	}
}

TRANSITION_LIST("modified_actual_distance[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 80000.0;
	}
}

TRANSITION_LIST("unmodified_syndr_polyn_2[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 80000.0;
	}
}

TRANSITION_LIST("magnitue_polyn_0[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 68278.341;
		LEVEL 1 FOR 300.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 80.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 10801.659;
	}
}

TRANSITION_LIST("magnitue_polyn_0[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 68638.374;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 10801.626;
	}
}

TRANSITION_LIST("magnitue_polyn_0[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 68617.958;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 10962.042;
	}
}

TRANSITION_LIST("magnitue_polyn_0[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 68718.482;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 10801.518;
	}
}

TRANSITION_LIST("magnitue_polyn_0[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 68618.506;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 100.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 10901.494;
	}
}

TRANSITION_LIST("unmodified_syndr_polyn_2[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 80000.0;
	}
}

TRANSITION_LIST("magnitue_polyn_0[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 68617.918;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 10842.082;
	}
}

TRANSITION_LIST("magnitue_polyn_0[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 68638.816;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 20.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 10801.184;
	}
}

TRANSITION_LIST("magnitue_polyn_0[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 68657.904;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 10802.096;
	}
}

TRANSITION_LIST("write_addr[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 757.411;
		NODE
		{
			REPEAT = 63;
			LEVEL 1 FOR 480.0;
			LEVEL 0 FOR 480.0;
		}
		LEVEL 1 FOR 18762.589;
	}
}

TRANSITION_LIST("locator_polyn_2[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 68557.804;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 11282.196;
	}
}

TRANSITION_LIST("locator_polyn_2[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 68537.344;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 11282.656;
	}
}

TRANSITION_LIST("locator_polyn_2[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 68577.364;
		LEVEL 1 FOR 60.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 11282.636;
	}
}

TRANSITION_LIST("locator_polyn_2[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 68557.566;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 11282.434;
	}
}

TRANSITION_LIST("write_addr[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 517.407;
		NODE
		{
			REPEAT = 127;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 18522.593;
	}
}

TRANSITION_LIST("locator_polyn_2[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 68538.005;
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 11341.995;
	}
}

TRANSITION_LIST("locator_polyn_2[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 68537.846;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 11322.154;
	}
}

TRANSITION_LIST("locator_polyn_2[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 68537.772;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 11302.228;
	}
}

TRANSITION_LIST("locator_polyn_2[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 68537.778;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 11282.222;
	}
}

TRANSITION_LIST("locator_polyn_1[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 68557.829;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 11282.171;
	}
}

TRANSITION_LIST("modified_actual_distance[23]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 318.97;
		LEVEL 1 FOR 59760.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 18481.03;
	}
}

TRANSITION_LIST("unmodified_syndr_polyn_1[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 80000.0;
	}
}

TRANSITION_LIST("magnitue_polyn_2[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 68197.394;
		LEVEL 1 FOR 300.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 10902.606;
	}
}

TRANSITION_LIST("magnitue_polyn_2[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 68557.74;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 180.0;
		LEVEL 1 FOR 80.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 10902.26;
	}
}

TRANSITION_LIST("magnitue_polyn_2[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 68557.766;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 10902.234;
	}
}

TRANSITION_LIST("magnitue_polyn_2[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 68537.967;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 10882.033;
	}
}

TRANSITION_LIST("magnitue_polyn_2[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 68557.765;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 300.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 10902.235;
	}
}

TRANSITION_LIST("unmodified_syndr_polyn_2[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 80000.0;
	}
}

TRANSITION_LIST("magnitue_polyn_2[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 68537.744;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 10922.256;
	}
}

TRANSITION_LIST("magnitue_polyn_2[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 68537.381;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 10922.619;
	}
}

TRANSITION_LIST("magnitue_polyn_2[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 68617.358;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 140.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 120.0;
		}
		LEVEL 1 FOR 10882.642;
	}
}

TRANSITION_LIST("magnitue_polyn_1[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 68197.423;
		LEVEL 1 FOR 300.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 10902.577;
	}
}

TRANSITION_LIST("magnitue_polyn_1[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 68556.948;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 180.0;
		LEVEL 1 FOR 80.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 10903.052;
	}
}

TRANSITION_LIST("unmodified_syndr_polyn_2[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 80000.0;
	}
}

TRANSITION_LIST("magnitue_polyn_1[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 68557.354;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 10902.646;
	}
}

TRANSITION_LIST("magnitue_polyn_1[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 68537.335;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 10882.665;
	}
}

TRANSITION_LIST("magnitue_polyn_1[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 68556.949;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 300.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 10903.051;
	}
}

TRANSITION_LIST("magnitue_polyn_1[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 68537.334;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 10922.666;
	}
}

TRANSITION_LIST("magnitue_polyn_1[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 68536.95;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 10923.05;
	}
}

TRANSITION_LIST("magnitue_polyn_1[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 68617.356;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 140.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 120.0;
		}
		LEVEL 1 FOR 10882.644;
	}
}

TRANSITION_LIST("unmodified_syndr_polyn_2[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 80000.0;
	}
}

TRANSITION_LIST("norm_sigma_square[8]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 80000.0;
	}
}

TRANSITION_LIST("norm_sigma_square[9]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 80000.0;
	}
}

TRANSITION_LIST("norm_sigma_square[10]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 101.539;
		LEVEL 1 FOR 79898.461;
	}
}

TRANSITION_LIST("norm_sigma_square[11]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 80000.0;
	}
}

TRANSITION_LIST("norm_sigma_square[12]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 80000.0;
	}
}

TRANSITION_LIST("norm_sigma_square[13]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 102.506;
		LEVEL 1 FOR 79897.494;
	}
}

TRANSITION_LIST("norm_sigma_square[14]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 80000.0;
	}
}

TRANSITION_LIST("unmodified_syndr_polyn_0[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 80000.0;
	}
}

TRANSITION_LIST("no_of_parity[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 80000.0;
	}
}

TRANSITION_LIST("no_of_parity[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 37.981;
		LEVEL 1 FOR 79962.019;
	}
}

TRANSITION_LIST("no_of_parity[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 38.119;
		LEVEL 1 FOR 79961.881;
	}
}

TRANSITION_LIST("unmodified_syndr_polyn_0[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 80000.0;
	}
}

TRANSITION_LIST("no_of_parity[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 38.779;
		LEVEL 1 FOR 79961.221;
	}
}

TRANSITION_LIST("no_of_parity[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 39.308;
		LEVEL 1 FOR 79960.692;
	}
}

TRANSITION_LIST("no_of_parity[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 80000.0;
	}
}

TRANSITION_LIST("unmodified_syndr_polyn_0[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 80000.0;
	}
}

TRANSITION_LIST("no_of_erasure_coefs_2[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 67517.578;
		LEVEL 1 FOR 12482.422;
	}
}

TRANSITION_LIST("no_of_erasure_coefs_2[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 80000.0;
	}
}

TRANSITION_LIST("no_of_erasure_coefs_2[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 80000.0;
	}
}

TRANSITION_LIST("no_of_erasure_coefs_2[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 67517.561;
		LEVEL 1 FOR 12482.439;
	}
}

TRANSITION_LIST("normalized_signal[8]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 763.501;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 720.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 480.0;
			LEVEL 1 FOR 480.0;
		}
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1920.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 1680.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 480.0;
		}
		LEVEL 1 FOR 960.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 720.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 2160.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 1440.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1440.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 960.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 480.0;
			LEVEL 1 FOR 480.0;
		}
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 480.0;
		}
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 18756.499;
	}
}

TRANSITION_LIST("normalized_signal[9]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 283.125;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1680.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 960.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 1440.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 2160.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 480.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 720.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 480.0;
			LEVEL 1 FOR 480.0;
		}
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 720.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 480.0;
		}
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 1680.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 18756.875;
	}
}

TRANSITION_LIST("normalized_signal[10]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 523.43;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 480.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1920.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1920.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1440.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 1200.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 480.0;
		}
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 720.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 720.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 480.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1200.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 480.0;
			LEVEL 0 FOR 960.0;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 18516.57;
	}
}

TRANSITION_LIST("threshold_2[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 80000.0;
	}
}

TRANSITION_LIST("normalized_signal[11]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 765.883;
		LEVEL 1 FOR 240.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 480.0;
		}
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 720.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 1440.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 480.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 1680.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 2880.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 720.0;
		}
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 480.0;
		}
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 1440.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1680.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 480.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 18754.117;
	}
}

TRANSITION_LIST("normalized_signal[12]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 283.431;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1440.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 1200.0;
		NODE
		{
			REPEAT = 4;
			LEVEL 0 FOR 480.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 2160.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 1680.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 1440.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 720.0;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 720.0;
		}
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 1440.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1440.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 18996.569;
	}
}

TRANSITION_LIST("normalized_signal[13]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 524.156;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 720.0;
		}
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 720.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 480.0;
		}
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 720.0;
		}
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 480.0;
		}
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 480.0;
		}
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 18755.844;
	}
}

TRANSITION_LIST("normalized_signal[14]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 523.504;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 720.0;
		}
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 720.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 480.0;
		}
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 720.0;
		}
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 480.0;
		}
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 960.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 480.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 240.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 480.0;
			LEVEL 0 FOR 480.0;
		}
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 18756.496;
	}
}

TRANSITION_LIST("threshold_2[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 80000.0;
	}
}

TRANSITION_LIST("norm_sigma_square[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 80000.0;
	}
}

TRANSITION_LIST("norm_sigma_square[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 80000.0;
	}
}

TRANSITION_LIST("norm_sigma_square[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 80000.0;
	}
}

TRANSITION_LIST("threshold_2[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 80000.0;
	}
}

TRANSITION_LIST("threshold_2[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 80000.0;
	}
}

TRANSITION_LIST("unmodified_syndr_polyn_0[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 80000.0;
	}
}

TRANSITION_LIST("norm_sigma_square[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 80000.0;
	}
}

TRANSITION_LIST("norm_sigma_square[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 80000.0;
	}
}

TRANSITION_LIST("norm_sigma_square[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 101.963;
		LEVEL 1 FOR 79898.037;
	}
}

TRANSITION_LIST("norm_sigma_square[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 80000.0;
	}
}

TRANSITION_LIST("norm_sigma_square[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 80000.0;
	}
}

TRANSITION_LIST("unmodified_syndr_polyn_0[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 80000.0;
	}
}

TRANSITION_LIST("modified_syndr_polyn_2[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 67597.482;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 11822.518;
	}
}

TRANSITION_LIST("modified_syndr_polyn_2[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 67637.983;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 180.0;
		LEVEL 1 FOR 80.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 11822.017;
	}
}

TRANSITION_LIST("modified_syndr_polyn_2[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 67637.75;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 11822.25;
	}
}

TRANSITION_LIST("modified_syndr_polyn_2[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 67618.445;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 11801.555;
	}
}

TRANSITION_LIST("no_of_erasure_coefs_0[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 80000.0;
	}
}

TRANSITION_LIST("modified_syndr_polyn_2[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 67637.515;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 300.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 11822.485;
	}
}

TRANSITION_LIST("modified_syndr_polyn_2[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 67617.392;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 11842.608;
	}
}

TRANSITION_LIST("no_of_erasure_coefs_0[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 80000.0;
	}
}

TRANSITION_LIST("no_of_erasure_coefs_0[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 67597.828;
		LEVEL 1 FOR 12402.172;
	}
}

TRANSITION_LIST("modified_syndr_polyn_2[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 67618.034;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 11841.966;
	}
}

TRANSITION_LIST("modified_syndr_polyn_2[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 67698.046;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 11801.954;
	}
}

TRANSITION_LIST("no_of_erasure_coefs_0[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 67597.432;
		LEVEL 1 FOR 12402.568;
	}
}

TRANSITION_LIST("no_of_erasure_coefs_0[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 80000.0;
	}
}

TRANSITION_LIST("no_of_erasure_coefs_0[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 67597.462;
		LEVEL 1 FOR 12402.538;
	}
}

TRANSITION_LIST("unmodified_syndr_polyn_1[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 80000.0;
	}
}

TRANSITION_LIST("modified_syndr_polyn_1[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 67597.638;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 11822.362;
	}
}

TRANSITION_LIST("no_of_erasure_coefs_1[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 80000.0;
	}
}

TRANSITION_LIST("unmodified_syndr_polyn_0[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 80000.0;
	}
}

TRANSITION_LIST("modified_syndr_polyn_1[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 67637.54;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 180.0;
		LEVEL 1 FOR 80.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 11822.46;
	}
}

TRANSITION_LIST("no_of_erasure_coefs_1[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 80000.0;
	}
}

TRANSITION_LIST("no_of_erasure_coefs_1[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 67517.66;
		LEVEL 1 FOR 12482.34;
	}
}

TRANSITION_LIST("no_of_erasure_coefs_1[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 80000.0;
	}
}

TRANSITION_LIST("no_of_erasure_coefs_1[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 80000.0;
	}
}

TRANSITION_LIST("unmodified_syndr_polyn_0[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 80000.0;
	}
}

TRANSITION_LIST("no_of_erasure_coefs_2[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 80000.0;
	}
}

TRANSITION_LIST("no_of_erasure_coefs_2[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 80000.0;
	}
}

TRANSITION_LIST("modified_syndr_polyn_1[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 67639.448;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 11820.552;
	}
}

TRANSITION_LIST("no_of_erasure_coefs_1[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 67517.714;
		LEVEL 1 FOR 12482.286;
	}
}

TRANSITION_LIST("unmodified_syndr_polyn_0[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 80000.0;
	}
}

TRANSITION_LIST("corrected_cword_ready")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 80000.0;
	}
}

TRANSITION_LIST("syndr_coef_ready_2")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 67597.565;
		LEVEL 1 FOR 640.0;
		LEVEL 0 FOR 11762.435;
	}
}

TRANSITION_LIST("syndr_coef_ready_1")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 67597.933;
		LEVEL 1 FOR 640.0;
		LEVEL 0 FOR 11762.067;
	}
}

TRANSITION_LIST("syndr_coef_ready_0")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 67679.017;
		LEVEL 1 FOR 640.0;
		LEVEL 0 FOR 11680.983;
	}
}

TRANSITION_LIST("MEA_compute_done_2")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 69317.907;
		LEVEL 1 FOR 10682.093;
	}
}

TRANSITION_LIST("MEA_compute_done_1")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 69317.356;
		LEVEL 1 FOR 10682.644;
	}
}

TRANSITION_LIST("MEA_compute_done_0")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 69398.222;
		LEVEL 1 FOR 10601.778;
	}
}

TRANSITION_LIST("erasures_absent_2")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 80000.0;
	}
}

TRANSITION_LIST("erasures_absent_1")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 80000.0;
	}
}

TRANSITION_LIST("erasures_absent_0")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 80000.0;
	}
}

TRANSITION_LIST("erasure_flag_2")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 10838.529;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 3120.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 4800.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 9600.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 14880.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 3120.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 9120.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 2880.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 19481.471;
	}
}

TRANSITION_LIST("erasure_flag_1")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 10837.89;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 3120.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 4800.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 9600.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 14880.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 3120.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 9120.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 2880.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 19482.11;
	}
}

TRANSITION_LIST("erasure_flag_0")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 3398.666;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 7200.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 2880.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 4800.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 9600.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 2400.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 6720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 5280.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 3120.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 9120.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 2880.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 19481.334;
	}
}

TRANSITION_LIST("erasure_coef_ready_2")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 67557.129;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 12242.871;
	}
}

TRANSITION_LIST("load_non_zero_syndrome_done")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 67278.759;
		LEVEL 1 FOR 12721.241;
	}
}

TRANSITION_LIST("new_channel_char")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 257.662;
		NODE
		{
			REPEAT = 255;
			LEVEL 1 FOR 60.0;
			LEVEL 0 FOR 180.0;
		}
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 18482.338;
	}
}

TRANSITION_LIST("new_data")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 61498.649;
		LEVEL 1 FOR 18501.351;
	}
}

TRANSITION_LIST("wren")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 61498.032;
		LEVEL 1 FOR 5120.0;
		LEVEL 0 FOR 13381.968;
	}
}

TRANSITION_LIST("recvd_erasure_flag_0")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 61761.122;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 600.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 400.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 800.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 560.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 440.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 260.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 760.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 13478.878;
	}
}

TRANSITION_LIST("recvd_erasure_flag_1")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 62381.143;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 260.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 400.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 800.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 1240.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 260.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 760.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 13478.857;
	}
}

TRANSITION_LIST("recvd_erasure_flag_2")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 62380.986;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 260.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 400.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 800.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 1240.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 260.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 760.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 13479.014;
	}
}

TRANSITION_LIST("send_data")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 61497.391;
		LEVEL 1 FOR 18502.609;
	}
}

TRANSITION_LIST("send_erasure_polyn_0")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 67618.199;
		LEVEL 1 FOR 280.0;
		LEVEL 0 FOR 12101.801;
	}
}

TRANSITION_LIST("send_erasure_polyn_1")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 67537.634;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 12262.366;
	}
}

TRANSITION_LIST("send_erasure_polyn_2")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 67538.27;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 12261.73;
	}
}

TRANSITION_LIST("send_syndr_polyn_0")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 67659.348;
		LEVEL 1 FOR 640.0;
		LEVEL 0 FOR 11700.652;
	}
}

TRANSITION_LIST("send_syndr_polyn_1")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 67578.396;
		LEVEL 1 FOR 640.0;
		LEVEL 0 FOR 11781.604;
	}
}

TRANSITION_LIST("send_syndr_polyn_2")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 67578.343;
		LEVEL 1 FOR 640.0;
		LEVEL 0 FOR 11781.657;
	}
}

TRANSITION_LIST("send_unmodified_syndr_polyn_0")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 80000.0;
	}
}

TRANSITION_LIST("send_unmodified_syndr_polyn_1")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 80000.0;
	}
}

TRANSITION_LIST("send_unmodified_syndr_polyn_2")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 80000.0;
	}
}

TRANSITION_LIST("start_erasure_polyn_compute")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 67298.902;
		LEVEL 1 FOR 12701.098;
	}
}

TRANSITION_LIST("start_modified_syndrome_polyn_compute")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 67298.902;
		LEVEL 1 FOR 12701.098;
	}
}

TRANSITION_LIST("erasure_coef_ready_1")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 67558.797;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 12241.203;
	}
}

TRANSITION_LIST("erasure_coef_ready_0")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 67637.515;
		LEVEL 1 FOR 280.0;
		LEVEL 0 FOR 12082.485;
	}
}

TRANSITION_LIST("erasure")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 80000.0;
	}
}

TRANSITION_LIST("decode_strobe")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 80000.0;
	}
}

TRANSITION_LIST("cutoff_threshold_ready")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 80000.0;
	}
}

TRANSITION_LIST("rd_enable")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 61498.032;
		LEVEL 1 FOR 5120.0;
		LEVEL 0 FOR 13381.968;
	}
}

TRANSITION_LIST("wren_decoder_in_buffer")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 277.524;
		LEVEL 1 FOR 79722.476;
	}
}

DISPLAY_LINE
{
	CHANNEL = "ext_clk";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 0;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "k_value";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 1;
	TREE_LEVEL = 0;
	CHILDREN = 2, 3, 4, 5, 6, 7, 8, 9;
}

DISPLAY_LINE
{
	CHANNEL = "k_value[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 2;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "k_value[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 3;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "k_value[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 4;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "k_value[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 5;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "k_value[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 6;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "k_value[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 7;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "k_value[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 8;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "k_value[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 9;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "reset";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 10;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "sigma_value";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 11;
	TREE_LEVEL = 0;
	CHILDREN = 12, 13, 14, 15, 16;
}

DISPLAY_LINE
{
	CHANNEL = "sigma_value[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 12;
	TREE_LEVEL = 1;
	PARENT = 11;
}

DISPLAY_LINE
{
	CHANNEL = "sigma_value[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 13;
	TREE_LEVEL = 1;
	PARENT = 11;
}

DISPLAY_LINE
{
	CHANNEL = "sigma_value[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 14;
	TREE_LEVEL = 1;
	PARENT = 11;
}

DISPLAY_LINE
{
	CHANNEL = "sigma_value[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 15;
	TREE_LEVEL = 1;
	PARENT = 11;
}

DISPLAY_LINE
{
	CHANNEL = "sigma_value[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 16;
	TREE_LEVEL = 1;
	PARENT = 11;
}

DISPLAY_LINE
{
	CHANNEL = "L_degree_0";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 17;
	TREE_LEVEL = 0;
	CHILDREN = 18, 19, 20, 21, 22, 23;
}

DISPLAY_LINE
{
	CHANNEL = "L_degree_0[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 18;
	TREE_LEVEL = 1;
	PARENT = 17;
}

DISPLAY_LINE
{
	CHANNEL = "L_degree_0[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 19;
	TREE_LEVEL = 1;
	PARENT = 17;
}

DISPLAY_LINE
{
	CHANNEL = "L_degree_0[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 20;
	TREE_LEVEL = 1;
	PARENT = 17;
}

DISPLAY_LINE
{
	CHANNEL = "L_degree_0[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 21;
	TREE_LEVEL = 1;
	PARENT = 17;
}

DISPLAY_LINE
{
	CHANNEL = "L_degree_0[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 22;
	TREE_LEVEL = 1;
	PARENT = 17;
}

DISPLAY_LINE
{
	CHANNEL = "L_degree_0[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 23;
	TREE_LEVEL = 1;
	PARENT = 17;
}

DISPLAY_LINE
{
	CHANNEL = "L_degree_0[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 24;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "L_degree_0[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 25;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "L_degree_0[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 26;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "L_degree_0[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 27;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "L_degree_0[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 28;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "L_degree_0[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 29;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "L_degree_1";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 30;
	TREE_LEVEL = 0;
	CHILDREN = 31, 32, 33, 34, 35, 36;
}

DISPLAY_LINE
{
	CHANNEL = "L_degree_1[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 31;
	TREE_LEVEL = 1;
	PARENT = 30;
}

DISPLAY_LINE
{
	CHANNEL = "L_degree_1[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 32;
	TREE_LEVEL = 1;
	PARENT = 30;
}

DISPLAY_LINE
{
	CHANNEL = "L_degree_1[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 33;
	TREE_LEVEL = 1;
	PARENT = 30;
}

DISPLAY_LINE
{
	CHANNEL = "L_degree_1[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 34;
	TREE_LEVEL = 1;
	PARENT = 30;
}

DISPLAY_LINE
{
	CHANNEL = "L_degree_1[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 35;
	TREE_LEVEL = 1;
	PARENT = 30;
}

DISPLAY_LINE
{
	CHANNEL = "L_degree_1[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 36;
	TREE_LEVEL = 1;
	PARENT = 30;
}

DISPLAY_LINE
{
	CHANNEL = "L_degree_1[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 37;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "L_degree_1[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 38;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "L_degree_1[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 39;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "L_degree_1[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 40;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "L_degree_1[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 41;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "L_degree_1[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 42;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "L_degree_2";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 43;
	TREE_LEVEL = 0;
	CHILDREN = 44, 45, 46, 47, 48, 49;
}

DISPLAY_LINE
{
	CHANNEL = "L_degree_2[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 44;
	TREE_LEVEL = 1;
	PARENT = 43;
}

DISPLAY_LINE
{
	CHANNEL = "L_degree_2[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 45;
	TREE_LEVEL = 1;
	PARENT = 43;
}

DISPLAY_LINE
{
	CHANNEL = "L_degree_2[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 46;
	TREE_LEVEL = 1;
	PARENT = 43;
}

DISPLAY_LINE
{
	CHANNEL = "L_degree_2[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 47;
	TREE_LEVEL = 1;
	PARENT = 43;
}

DISPLAY_LINE
{
	CHANNEL = "L_degree_2[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 48;
	TREE_LEVEL = 1;
	PARENT = 43;
}

DISPLAY_LINE
{
	CHANNEL = "L_degree_2[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 49;
	TREE_LEVEL = 1;
	PARENT = 43;
}

DISPLAY_LINE
{
	CHANNEL = "L_degree_2[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 50;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "L_degree_2[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 51;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "L_degree_2[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 52;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "L_degree_2[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 53;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "L_degree_2[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 54;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "L_degree_2[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 55;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "MEA_compute_done_0";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 56;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "MEA_compute_done_1";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 57;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "MEA_compute_done_2";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 58;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Q_degree_0";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 59;
	TREE_LEVEL = 0;
	CHILDREN = 60, 61, 62, 63, 64, 65;
}

DISPLAY_LINE
{
	CHANNEL = "Q_degree_0[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 60;
	TREE_LEVEL = 1;
	PARENT = 59;
}

DISPLAY_LINE
{
	CHANNEL = "Q_degree_0[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 61;
	TREE_LEVEL = 1;
	PARENT = 59;
}

DISPLAY_LINE
{
	CHANNEL = "Q_degree_0[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 62;
	TREE_LEVEL = 1;
	PARENT = 59;
}

DISPLAY_LINE
{
	CHANNEL = "Q_degree_0[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 63;
	TREE_LEVEL = 1;
	PARENT = 59;
}

DISPLAY_LINE
{
	CHANNEL = "Q_degree_0[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 64;
	TREE_LEVEL = 1;
	PARENT = 59;
}

DISPLAY_LINE
{
	CHANNEL = "Q_degree_0[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 65;
	TREE_LEVEL = 1;
	PARENT = 59;
}

DISPLAY_LINE
{
	CHANNEL = "Q_degree_0[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 66;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Q_degree_0[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 67;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Q_degree_0[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 68;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Q_degree_0[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 69;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Q_degree_0[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 70;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Q_degree_0[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 71;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Q_degree_1";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 72;
	TREE_LEVEL = 0;
	CHILDREN = 73, 74, 75, 76, 77, 78;
}

DISPLAY_LINE
{
	CHANNEL = "Q_degree_1[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 73;
	TREE_LEVEL = 1;
	PARENT = 72;
}

DISPLAY_LINE
{
	CHANNEL = "Q_degree_1[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 74;
	TREE_LEVEL = 1;
	PARENT = 72;
}

DISPLAY_LINE
{
	CHANNEL = "Q_degree_1[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 75;
	TREE_LEVEL = 1;
	PARENT = 72;
}

DISPLAY_LINE
{
	CHANNEL = "Q_degree_1[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 76;
	TREE_LEVEL = 1;
	PARENT = 72;
}

DISPLAY_LINE
{
	CHANNEL = "Q_degree_1[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 77;
	TREE_LEVEL = 1;
	PARENT = 72;
}

DISPLAY_LINE
{
	CHANNEL = "Q_degree_1[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 78;
	TREE_LEVEL = 1;
	PARENT = 72;
}

DISPLAY_LINE
{
	CHANNEL = "Q_degree_1[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 79;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Q_degree_1[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 80;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Q_degree_1[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 81;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Q_degree_1[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 82;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Q_degree_1[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 83;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Q_degree_1[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 84;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Q_degree_2";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 85;
	TREE_LEVEL = 0;
	CHILDREN = 86, 87, 88, 89, 90, 91;
}

DISPLAY_LINE
{
	CHANNEL = "Q_degree_2[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 86;
	TREE_LEVEL = 1;
	PARENT = 85;
}

DISPLAY_LINE
{
	CHANNEL = "Q_degree_2[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 87;
	TREE_LEVEL = 1;
	PARENT = 85;
}

DISPLAY_LINE
{
	CHANNEL = "Q_degree_2[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 88;
	TREE_LEVEL = 1;
	PARENT = 85;
}

DISPLAY_LINE
{
	CHANNEL = "Q_degree_2[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 89;
	TREE_LEVEL = 1;
	PARENT = 85;
}

DISPLAY_LINE
{
	CHANNEL = "Q_degree_2[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 90;
	TREE_LEVEL = 1;
	PARENT = 85;
}

DISPLAY_LINE
{
	CHANNEL = "Q_degree_2[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 91;
	TREE_LEVEL = 1;
	PARENT = 85;
}

DISPLAY_LINE
{
	CHANNEL = "Q_degree_2[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 92;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Q_degree_2[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 93;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Q_degree_2[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 94;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Q_degree_2[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 95;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Q_degree_2[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 96;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Q_degree_2[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 97;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "R_degree_0";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 98;
	TREE_LEVEL = 0;
	CHILDREN = 99, 100, 101, 102, 103, 104;
}

DISPLAY_LINE
{
	CHANNEL = "R_degree_0[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 99;
	TREE_LEVEL = 1;
	PARENT = 98;
}

DISPLAY_LINE
{
	CHANNEL = "R_degree_0[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 100;
	TREE_LEVEL = 1;
	PARENT = 98;
}

DISPLAY_LINE
{
	CHANNEL = "R_degree_0[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 101;
	TREE_LEVEL = 1;
	PARENT = 98;
}

DISPLAY_LINE
{
	CHANNEL = "R_degree_0[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 102;
	TREE_LEVEL = 1;
	PARENT = 98;
}

DISPLAY_LINE
{
	CHANNEL = "R_degree_0[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 103;
	TREE_LEVEL = 1;
	PARENT = 98;
}

DISPLAY_LINE
{
	CHANNEL = "R_degree_0[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 104;
	TREE_LEVEL = 1;
	PARENT = 98;
}

DISPLAY_LINE
{
	CHANNEL = "R_degree_0[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 105;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "R_degree_0[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 106;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "R_degree_0[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 107;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "R_degree_0[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 108;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "R_degree_0[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 109;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "R_degree_0[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 110;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "R_degree_1";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 111;
	TREE_LEVEL = 0;
	CHILDREN = 112, 113, 114, 115, 116, 117;
}

DISPLAY_LINE
{
	CHANNEL = "R_degree_1[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 112;
	TREE_LEVEL = 1;
	PARENT = 111;
}

DISPLAY_LINE
{
	CHANNEL = "R_degree_1[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 113;
	TREE_LEVEL = 1;
	PARENT = 111;
}

DISPLAY_LINE
{
	CHANNEL = "R_degree_1[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 114;
	TREE_LEVEL = 1;
	PARENT = 111;
}

DISPLAY_LINE
{
	CHANNEL = "R_degree_1[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 115;
	TREE_LEVEL = 1;
	PARENT = 111;
}

DISPLAY_LINE
{
	CHANNEL = "R_degree_1[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 116;
	TREE_LEVEL = 1;
	PARENT = 111;
}

DISPLAY_LINE
{
	CHANNEL = "R_degree_1[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 117;
	TREE_LEVEL = 1;
	PARENT = 111;
}

DISPLAY_LINE
{
	CHANNEL = "R_degree_1[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 118;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "R_degree_1[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 119;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "R_degree_1[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 120;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "R_degree_1[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 121;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "R_degree_1[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 122;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "R_degree_1[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 123;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "R_degree_2";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 124;
	TREE_LEVEL = 0;
	CHILDREN = 125, 126, 127, 128, 129, 130;
}

DISPLAY_LINE
{
	CHANNEL = "R_degree_2[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 125;
	TREE_LEVEL = 1;
	PARENT = 124;
}

DISPLAY_LINE
{
	CHANNEL = "R_degree_2[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 126;
	TREE_LEVEL = 1;
	PARENT = 124;
}

DISPLAY_LINE
{
	CHANNEL = "R_degree_2[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 127;
	TREE_LEVEL = 1;
	PARENT = 124;
}

DISPLAY_LINE
{
	CHANNEL = "R_degree_2[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 128;
	TREE_LEVEL = 1;
	PARENT = 124;
}

DISPLAY_LINE
{
	CHANNEL = "R_degree_2[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 129;
	TREE_LEVEL = 1;
	PARENT = 124;
}

DISPLAY_LINE
{
	CHANNEL = "R_degree_2[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 130;
	TREE_LEVEL = 1;
	PARENT = 124;
}

DISPLAY_LINE
{
	CHANNEL = "R_degree_2[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 131;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "R_degree_2[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 132;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "R_degree_2[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 133;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "R_degree_2[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 134;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "R_degree_2[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 135;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "R_degree_2[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 136;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "channel_char";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 137;
	TREE_LEVEL = 0;
	CHILDREN = 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152;
}

DISPLAY_LINE
{
	CHANNEL = "channel_char[14]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 138;
	TREE_LEVEL = 1;
	PARENT = 137;
}

DISPLAY_LINE
{
	CHANNEL = "channel_char[13]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 139;
	TREE_LEVEL = 1;
	PARENT = 137;
}

DISPLAY_LINE
{
	CHANNEL = "channel_char[12]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 140;
	TREE_LEVEL = 1;
	PARENT = 137;
}

DISPLAY_LINE
{
	CHANNEL = "channel_char[11]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 141;
	TREE_LEVEL = 1;
	PARENT = 137;
}

DISPLAY_LINE
{
	CHANNEL = "channel_char[10]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 142;
	TREE_LEVEL = 1;
	PARENT = 137;
}

DISPLAY_LINE
{
	CHANNEL = "channel_char[9]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 143;
	TREE_LEVEL = 1;
	PARENT = 137;
}

DISPLAY_LINE
{
	CHANNEL = "channel_char[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 144;
	TREE_LEVEL = 1;
	PARENT = 137;
}

DISPLAY_LINE
{
	CHANNEL = "channel_char[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 145;
	TREE_LEVEL = 1;
	PARENT = 137;
}

DISPLAY_LINE
{
	CHANNEL = "channel_char[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 146;
	TREE_LEVEL = 1;
	PARENT = 137;
}

DISPLAY_LINE
{
	CHANNEL = "channel_char[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 147;
	TREE_LEVEL = 1;
	PARENT = 137;
}

DISPLAY_LINE
{
	CHANNEL = "channel_char[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 148;
	TREE_LEVEL = 1;
	PARENT = 137;
}

DISPLAY_LINE
{
	CHANNEL = "channel_char[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 149;
	TREE_LEVEL = 1;
	PARENT = 137;
}

DISPLAY_LINE
{
	CHANNEL = "channel_char[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 150;
	TREE_LEVEL = 1;
	PARENT = 137;
}

DISPLAY_LINE
{
	CHANNEL = "channel_char[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 151;
	TREE_LEVEL = 1;
	PARENT = 137;
}

DISPLAY_LINE
{
	CHANNEL = "channel_char[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 152;
	TREE_LEVEL = 1;
	PARENT = 137;
}

DISPLAY_LINE
{
	CHANNEL = "channel_char[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 153;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "channel_char[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 154;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "channel_char[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 155;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "channel_char[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 156;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "channel_char[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 157;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "channel_char[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 158;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "channel_char[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 159;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "channel_char[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 160;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "channel_char[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 161;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "channel_char[9]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 162;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "channel_char[10]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 163;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "channel_char[11]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 164;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "channel_char[12]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 165;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "channel_char[13]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 166;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "channel_char[14]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 167;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "corrected_cw";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 168;
	TREE_LEVEL = 0;
	CHILDREN = 169, 170, 171, 172, 173, 174, 175, 176;
}

DISPLAY_LINE
{
	CHANNEL = "corrected_cw[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 169;
	TREE_LEVEL = 1;
	PARENT = 168;
}

DISPLAY_LINE
{
	CHANNEL = "corrected_cw[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 170;
	TREE_LEVEL = 1;
	PARENT = 168;
}

DISPLAY_LINE
{
	CHANNEL = "corrected_cw[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 171;
	TREE_LEVEL = 1;
	PARENT = 168;
}

DISPLAY_LINE
{
	CHANNEL = "corrected_cw[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 172;
	TREE_LEVEL = 1;
	PARENT = 168;
}

DISPLAY_LINE
{
	CHANNEL = "corrected_cw[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 173;
	TREE_LEVEL = 1;
	PARENT = 168;
}

DISPLAY_LINE
{
	CHANNEL = "corrected_cw[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 174;
	TREE_LEVEL = 1;
	PARENT = 168;
}

DISPLAY_LINE
{
	CHANNEL = "corrected_cw[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 175;
	TREE_LEVEL = 1;
	PARENT = 168;
}

DISPLAY_LINE
{
	CHANNEL = "corrected_cw[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 176;
	TREE_LEVEL = 1;
	PARENT = 168;
}

DISPLAY_LINE
{
	CHANNEL = "corrected_cw[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 177;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "corrected_cw[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 178;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "corrected_cw[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 179;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "corrected_cw[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 180;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "corrected_cw[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 181;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "corrected_cw[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 182;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "corrected_cw[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 183;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "corrected_cw[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 184;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "corrected_cword_ready";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 185;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "corrected_error_count";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 186;
	TREE_LEVEL = 0;
	CHILDREN = 187, 188, 189, 190, 191, 192, 193, 194;
}

DISPLAY_LINE
{
	CHANNEL = "corrected_error_count[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 187;
	TREE_LEVEL = 1;
	PARENT = 186;
}

DISPLAY_LINE
{
	CHANNEL = "corrected_error_count[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 188;
	TREE_LEVEL = 1;
	PARENT = 186;
}

DISPLAY_LINE
{
	CHANNEL = "corrected_error_count[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 189;
	TREE_LEVEL = 1;
	PARENT = 186;
}

DISPLAY_LINE
{
	CHANNEL = "corrected_error_count[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 190;
	TREE_LEVEL = 1;
	PARENT = 186;
}

DISPLAY_LINE
{
	CHANNEL = "corrected_error_count[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 191;
	TREE_LEVEL = 1;
	PARENT = 186;
}

DISPLAY_LINE
{
	CHANNEL = "corrected_error_count[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 192;
	TREE_LEVEL = 1;
	PARENT = 186;
}

DISPLAY_LINE
{
	CHANNEL = "corrected_error_count[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 193;
	TREE_LEVEL = 1;
	PARENT = 186;
}

DISPLAY_LINE
{
	CHANNEL = "corrected_error_count[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 194;
	TREE_LEVEL = 1;
	PARENT = 186;
}

DISPLAY_LINE
{
	CHANNEL = "corrected_error_count[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 195;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "corrected_error_count[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 196;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "corrected_error_count[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 197;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "corrected_error_count[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 198;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "corrected_error_count[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 199;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "corrected_error_count[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 200;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "corrected_error_count[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 201;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "corrected_error_count[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 202;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "cutoff_threshold_0";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 203;
	TREE_LEVEL = 0;
	CHILDREN = 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227;
}

DISPLAY_LINE
{
	CHANNEL = "cutoff_threshold_0[23]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 204;
	TREE_LEVEL = 1;
	PARENT = 203;
}

DISPLAY_LINE
{
	CHANNEL = "cutoff_threshold_0[22]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 205;
	TREE_LEVEL = 1;
	PARENT = 203;
}

DISPLAY_LINE
{
	CHANNEL = "cutoff_threshold_0[21]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 206;
	TREE_LEVEL = 1;
	PARENT = 203;
}

DISPLAY_LINE
{
	CHANNEL = "cutoff_threshold_0[20]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 207;
	TREE_LEVEL = 1;
	PARENT = 203;
}

DISPLAY_LINE
{
	CHANNEL = "cutoff_threshold_0[19]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 208;
	TREE_LEVEL = 1;
	PARENT = 203;
}

DISPLAY_LINE
{
	CHANNEL = "cutoff_threshold_0[18]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 209;
	TREE_LEVEL = 1;
	PARENT = 203;
}

DISPLAY_LINE
{
	CHANNEL = "cutoff_threshold_0[17]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 210;
	TREE_LEVEL = 1;
	PARENT = 203;
}

DISPLAY_LINE
{
	CHANNEL = "cutoff_threshold_0[16]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 211;
	TREE_LEVEL = 1;
	PARENT = 203;
}

DISPLAY_LINE
{
	CHANNEL = "cutoff_threshold_0[15]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 212;
	TREE_LEVEL = 1;
	PARENT = 203;
}

DISPLAY_LINE
{
	CHANNEL = "cutoff_threshold_0[14]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 213;
	TREE_LEVEL = 1;
	PARENT = 203;
}

DISPLAY_LINE
{
	CHANNEL = "cutoff_threshold_0[13]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 214;
	TREE_LEVEL = 1;
	PARENT = 203;
}

DISPLAY_LINE
{
	CHANNEL = "cutoff_threshold_0[12]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 215;
	TREE_LEVEL = 1;
	PARENT = 203;
}

DISPLAY_LINE
{
	CHANNEL = "cutoff_threshold_0[11]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 216;
	TREE_LEVEL = 1;
	PARENT = 203;
}

DISPLAY_LINE
{
	CHANNEL = "cutoff_threshold_0[10]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 217;
	TREE_LEVEL = 1;
	PARENT = 203;
}

DISPLAY_LINE
{
	CHANNEL = "cutoff_threshold_0[9]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 218;
	TREE_LEVEL = 1;
	PARENT = 203;
}

DISPLAY_LINE
{
	CHANNEL = "cutoff_threshold_0[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 219;
	TREE_LEVEL = 1;
	PARENT = 203;
}

DISPLAY_LINE
{
	CHANNEL = "cutoff_threshold_0[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 220;
	TREE_LEVEL = 1;
	PARENT = 203;
}

DISPLAY_LINE
{
	CHANNEL = "cutoff_threshold_0[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 221;
	TREE_LEVEL = 1;
	PARENT = 203;
}

DISPLAY_LINE
{
	CHANNEL = "cutoff_threshold_0[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 222;
	TREE_LEVEL = 1;
	PARENT = 203;
}

DISPLAY_LINE
{
	CHANNEL = "cutoff_threshold_0[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 223;
	TREE_LEVEL = 1;
	PARENT = 203;
}

DISPLAY_LINE
{
	CHANNEL = "cutoff_threshold_0[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 224;
	TREE_LEVEL = 1;
	PARENT = 203;
}

DISPLAY_LINE
{
	CHANNEL = "cutoff_threshold_0[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 225;
	TREE_LEVEL = 1;
	PARENT = 203;
}

DISPLAY_LINE
{
	CHANNEL = "cutoff_threshold_0[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 226;
	TREE_LEVEL = 1;
	PARENT = 203;
}

DISPLAY_LINE
{
	CHANNEL = "cutoff_threshold_0[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 227;
	TREE_LEVEL = 1;
	PARENT = 203;
}

DISPLAY_LINE
{
	CHANNEL = "cutoff_threshold_0[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 228;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "cutoff_threshold_0[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 229;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "cutoff_threshold_0[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 230;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "cutoff_threshold_0[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 231;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "cutoff_threshold_0[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 232;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "cutoff_threshold_0[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 233;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "cutoff_threshold_0[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 234;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "cutoff_threshold_0[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 235;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "cutoff_threshold_0[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 236;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "cutoff_threshold_0[9]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 237;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "cutoff_threshold_0[10]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 238;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "cutoff_threshold_0[11]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 239;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "cutoff_threshold_0[12]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 240;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "cutoff_threshold_0[13]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 241;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "cutoff_threshold_0[14]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 242;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "cutoff_threshold_0[15]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 243;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "cutoff_threshold_0[16]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 244;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "cutoff_threshold_0[17]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 245;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "cutoff_threshold_0[18]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 246;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "cutoff_threshold_0[19]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 247;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "cutoff_threshold_0[20]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 248;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "cutoff_threshold_0[21]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 249;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "cutoff_threshold_0[22]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 250;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "cutoff_threshold_0[23]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 251;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "cutoff_threshold_1";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 252;
	TREE_LEVEL = 0;
	CHILDREN = 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276;
}

DISPLAY_LINE
{
	CHANNEL = "cutoff_threshold_1[23]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 253;
	TREE_LEVEL = 1;
	PARENT = 252;
}

DISPLAY_LINE
{
	CHANNEL = "cutoff_threshold_1[22]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 254;
	TREE_LEVEL = 1;
	PARENT = 252;
}

DISPLAY_LINE
{
	CHANNEL = "cutoff_threshold_1[21]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 255;
	TREE_LEVEL = 1;
	PARENT = 252;
}

DISPLAY_LINE
{
	CHANNEL = "cutoff_threshold_1[20]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 256;
	TREE_LEVEL = 1;
	PARENT = 252;
}

DISPLAY_LINE
{
	CHANNEL = "cutoff_threshold_1[19]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 257;
	TREE_LEVEL = 1;
	PARENT = 252;
}

DISPLAY_LINE
{
	CHANNEL = "cutoff_threshold_1[18]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 258;
	TREE_LEVEL = 1;
	PARENT = 252;
}

DISPLAY_LINE
{
	CHANNEL = "cutoff_threshold_1[17]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 259;
	TREE_LEVEL = 1;
	PARENT = 252;
}

DISPLAY_LINE
{
	CHANNEL = "cutoff_threshold_1[16]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 260;
	TREE_LEVEL = 1;
	PARENT = 252;
}

DISPLAY_LINE
{
	CHANNEL = "cutoff_threshold_1[15]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 261;
	TREE_LEVEL = 1;
	PARENT = 252;
}

DISPLAY_LINE
{
	CHANNEL = "cutoff_threshold_1[14]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 262;
	TREE_LEVEL = 1;
	PARENT = 252;
}

DISPLAY_LINE
{
	CHANNEL = "cutoff_threshold_1[13]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 263;
	TREE_LEVEL = 1;
	PARENT = 252;
}

DISPLAY_LINE
{
	CHANNEL = "cutoff_threshold_1[12]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 264;
	TREE_LEVEL = 1;
	PARENT = 252;
}

DISPLAY_LINE
{
	CHANNEL = "cutoff_threshold_1[11]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 265;
	TREE_LEVEL = 1;
	PARENT = 252;
}

DISPLAY_LINE
{
	CHANNEL = "cutoff_threshold_1[10]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 266;
	TREE_LEVEL = 1;
	PARENT = 252;
}

DISPLAY_LINE
{
	CHANNEL = "cutoff_threshold_1[9]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 267;
	TREE_LEVEL = 1;
	PARENT = 252;
}

DISPLAY_LINE
{
	CHANNEL = "cutoff_threshold_1[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 268;
	TREE_LEVEL = 1;
	PARENT = 252;
}

DISPLAY_LINE
{
	CHANNEL = "cutoff_threshold_1[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 269;
	TREE_LEVEL = 1;
	PARENT = 252;
}

DISPLAY_LINE
{
	CHANNEL = "cutoff_threshold_1[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 270;
	TREE_LEVEL = 1;
	PARENT = 252;
}

DISPLAY_LINE
{
	CHANNEL = "cutoff_threshold_1[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 271;
	TREE_LEVEL = 1;
	PARENT = 252;
}

DISPLAY_LINE
{
	CHANNEL = "cutoff_threshold_1[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 272;
	TREE_LEVEL = 1;
	PARENT = 252;
}

DISPLAY_LINE
{
	CHANNEL = "cutoff_threshold_1[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 273;
	TREE_LEVEL = 1;
	PARENT = 252;
}

DISPLAY_LINE
{
	CHANNEL = "cutoff_threshold_1[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 274;
	TREE_LEVEL = 1;
	PARENT = 252;
}

DISPLAY_LINE
{
	CHANNEL = "cutoff_threshold_1[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 275;
	TREE_LEVEL = 1;
	PARENT = 252;
}

DISPLAY_LINE
{
	CHANNEL = "cutoff_threshold_1[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 276;
	TREE_LEVEL = 1;
	PARENT = 252;
}

DISPLAY_LINE
{
	CHANNEL = "cutoff_threshold_1[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 277;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "cutoff_threshold_1[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 278;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "cutoff_threshold_1[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 279;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "cutoff_threshold_1[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 280;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "cutoff_threshold_1[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 281;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "cutoff_threshold_1[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 282;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "cutoff_threshold_1[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 283;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "cutoff_threshold_1[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 284;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "cutoff_threshold_1[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 285;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "cutoff_threshold_1[9]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 286;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "cutoff_threshold_1[10]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 287;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "cutoff_threshold_1[11]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 288;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "cutoff_threshold_1[12]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 289;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "cutoff_threshold_1[13]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 290;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "cutoff_threshold_1[14]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 291;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "cutoff_threshold_1[15]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 292;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "cutoff_threshold_1[16]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 293;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "cutoff_threshold_1[17]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 294;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "cutoff_threshold_1[18]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 295;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "cutoff_threshold_1[19]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 296;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "cutoff_threshold_1[20]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 297;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "cutoff_threshold_1[21]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 298;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "cutoff_threshold_1[22]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 299;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "cutoff_threshold_1[23]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 300;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "cutoff_threshold_2";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 301;
	TREE_LEVEL = 0;
	CHILDREN = 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325;
}

DISPLAY_LINE
{
	CHANNEL = "cutoff_threshold_2[23]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 302;
	TREE_LEVEL = 1;
	PARENT = 301;
}

DISPLAY_LINE
{
	CHANNEL = "cutoff_threshold_2[22]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 303;
	TREE_LEVEL = 1;
	PARENT = 301;
}

DISPLAY_LINE
{
	CHANNEL = "cutoff_threshold_2[21]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 304;
	TREE_LEVEL = 1;
	PARENT = 301;
}

DISPLAY_LINE
{
	CHANNEL = "cutoff_threshold_2[20]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 305;
	TREE_LEVEL = 1;
	PARENT = 301;
}

DISPLAY_LINE
{
	CHANNEL = "cutoff_threshold_2[19]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 306;
	TREE_LEVEL = 1;
	PARENT = 301;
}

DISPLAY_LINE
{
	CHANNEL = "cutoff_threshold_2[18]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 307;
	TREE_LEVEL = 1;
	PARENT = 301;
}

DISPLAY_LINE
{
	CHANNEL = "cutoff_threshold_2[17]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 308;
	TREE_LEVEL = 1;
	PARENT = 301;
}

DISPLAY_LINE
{
	CHANNEL = "cutoff_threshold_2[16]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 309;
	TREE_LEVEL = 1;
	PARENT = 301;
}

DISPLAY_LINE
{
	CHANNEL = "cutoff_threshold_2[15]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 310;
	TREE_LEVEL = 1;
	PARENT = 301;
}

DISPLAY_LINE
{
	CHANNEL = "cutoff_threshold_2[14]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 311;
	TREE_LEVEL = 1;
	PARENT = 301;
}

DISPLAY_LINE
{
	CHANNEL = "cutoff_threshold_2[13]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 312;
	TREE_LEVEL = 1;
	PARENT = 301;
}

DISPLAY_LINE
{
	CHANNEL = "cutoff_threshold_2[12]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 313;
	TREE_LEVEL = 1;
	PARENT = 301;
}

DISPLAY_LINE
{
	CHANNEL = "cutoff_threshold_2[11]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 314;
	TREE_LEVEL = 1;
	PARENT = 301;
}

DISPLAY_LINE
{
	CHANNEL = "cutoff_threshold_2[10]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 315;
	TREE_LEVEL = 1;
	PARENT = 301;
}

DISPLAY_LINE
{
	CHANNEL = "cutoff_threshold_2[9]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 316;
	TREE_LEVEL = 1;
	PARENT = 301;
}

DISPLAY_LINE
{
	CHANNEL = "cutoff_threshold_2[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 317;
	TREE_LEVEL = 1;
	PARENT = 301;
}

DISPLAY_LINE
{
	CHANNEL = "cutoff_threshold_2[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 318;
	TREE_LEVEL = 1;
	PARENT = 301;
}

DISPLAY_LINE
{
	CHANNEL = "cutoff_threshold_2[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 319;
	TREE_LEVEL = 1;
	PARENT = 301;
}

DISPLAY_LINE
{
	CHANNEL = "cutoff_threshold_2[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 320;
	TREE_LEVEL = 1;
	PARENT = 301;
}

DISPLAY_LINE
{
	CHANNEL = "cutoff_threshold_2[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 321;
	TREE_LEVEL = 1;
	PARENT = 301;
}

DISPLAY_LINE
{
	CHANNEL = "cutoff_threshold_2[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 322;
	TREE_LEVEL = 1;
	PARENT = 301;
}

DISPLAY_LINE
{
	CHANNEL = "cutoff_threshold_2[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 323;
	TREE_LEVEL = 1;
	PARENT = 301;
}

DISPLAY_LINE
{
	CHANNEL = "cutoff_threshold_2[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 324;
	TREE_LEVEL = 1;
	PARENT = 301;
}

DISPLAY_LINE
{
	CHANNEL = "cutoff_threshold_2[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 325;
	TREE_LEVEL = 1;
	PARENT = 301;
}

DISPLAY_LINE
{
	CHANNEL = "cutoff_threshold_2[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 326;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "cutoff_threshold_2[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 327;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "cutoff_threshold_2[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 328;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "cutoff_threshold_2[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 329;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "cutoff_threshold_2[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 330;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "cutoff_threshold_2[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 331;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "cutoff_threshold_2[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 332;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "cutoff_threshold_2[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 333;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "cutoff_threshold_2[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 334;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "cutoff_threshold_2[9]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 335;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "cutoff_threshold_2[10]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 336;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "cutoff_threshold_2[11]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 337;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "cutoff_threshold_2[12]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 338;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "cutoff_threshold_2[13]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 339;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "cutoff_threshold_2[14]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 340;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "cutoff_threshold_2[15]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 341;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "cutoff_threshold_2[16]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 342;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "cutoff_threshold_2[17]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 343;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "cutoff_threshold_2[18]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 344;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "cutoff_threshold_2[19]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 345;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "cutoff_threshold_2[20]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 346;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "cutoff_threshold_2[21]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 347;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "cutoff_threshold_2[22]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 348;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "cutoff_threshold_2[23]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 349;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "cutoff_threshold_ready";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 350;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "cw_data";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 351;
	TREE_LEVEL = 0;
	CHILDREN = 352, 353, 354, 355, 356, 357, 358, 359;
}

DISPLAY_LINE
{
	CHANNEL = "cw_data[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 352;
	TREE_LEVEL = 1;
	PARENT = 351;
}

DISPLAY_LINE
{
	CHANNEL = "cw_data[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 353;
	TREE_LEVEL = 1;
	PARENT = 351;
}

DISPLAY_LINE
{
	CHANNEL = "cw_data[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 354;
	TREE_LEVEL = 1;
	PARENT = 351;
}

DISPLAY_LINE
{
	CHANNEL = "cw_data[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 355;
	TREE_LEVEL = 1;
	PARENT = 351;
}

DISPLAY_LINE
{
	CHANNEL = "cw_data[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 356;
	TREE_LEVEL = 1;
	PARENT = 351;
}

DISPLAY_LINE
{
	CHANNEL = "cw_data[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 357;
	TREE_LEVEL = 1;
	PARENT = 351;
}

DISPLAY_LINE
{
	CHANNEL = "cw_data[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 358;
	TREE_LEVEL = 1;
	PARENT = 351;
}

DISPLAY_LINE
{
	CHANNEL = "cw_data[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 359;
	TREE_LEVEL = 1;
	PARENT = 351;
}

DISPLAY_LINE
{
	CHANNEL = "cw_data[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 360;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "cw_data[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 361;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "cw_data[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 362;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "cw_data[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 363;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "cw_data[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 364;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "cw_data[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 365;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "cw_data[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 366;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "cw_data[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 367;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "cycle";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 368;
	TREE_LEVEL = 0;
	CHILDREN = 369, 370, 371, 372, 373, 374, 375, 376, 377;
}

DISPLAY_LINE
{
	CHANNEL = "cycle[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 369;
	TREE_LEVEL = 1;
	PARENT = 368;
}

DISPLAY_LINE
{
	CHANNEL = "cycle[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 370;
	TREE_LEVEL = 1;
	PARENT = 368;
}

DISPLAY_LINE
{
	CHANNEL = "cycle[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 371;
	TREE_LEVEL = 1;
	PARENT = 368;
}

DISPLAY_LINE
{
	CHANNEL = "cycle[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 372;
	TREE_LEVEL = 1;
	PARENT = 368;
}

DISPLAY_LINE
{
	CHANNEL = "cycle[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 373;
	TREE_LEVEL = 1;
	PARENT = 368;
}

DISPLAY_LINE
{
	CHANNEL = "cycle[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 374;
	TREE_LEVEL = 1;
	PARENT = 368;
}

DISPLAY_LINE
{
	CHANNEL = "cycle[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 375;
	TREE_LEVEL = 1;
	PARENT = 368;
}

DISPLAY_LINE
{
	CHANNEL = "cycle[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 376;
	TREE_LEVEL = 1;
	PARENT = 368;
}

DISPLAY_LINE
{
	CHANNEL = "cycle[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 377;
	TREE_LEVEL = 1;
	PARENT = 368;
}

DISPLAY_LINE
{
	CHANNEL = "cycle[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 378;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "cycle[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 379;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "cycle[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 380;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "cycle[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 381;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "cycle[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 382;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "cycle[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 383;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "cycle[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 384;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "cycle[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 385;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "cycle[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 386;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "decode_strobe";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 387;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "decoder_rd_addr";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 388;
	TREE_LEVEL = 0;
	CHILDREN = 389, 390, 391, 392, 393, 394, 395, 396;
}

DISPLAY_LINE
{
	CHANNEL = "decoder_rd_addr[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 389;
	TREE_LEVEL = 1;
	PARENT = 388;
}

DISPLAY_LINE
{
	CHANNEL = "decoder_rd_addr[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 390;
	TREE_LEVEL = 1;
	PARENT = 388;
}

DISPLAY_LINE
{
	CHANNEL = "decoder_rd_addr[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 391;
	TREE_LEVEL = 1;
	PARENT = 388;
}

DISPLAY_LINE
{
	CHANNEL = "decoder_rd_addr[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 392;
	TREE_LEVEL = 1;
	PARENT = 388;
}

DISPLAY_LINE
{
	CHANNEL = "decoder_rd_addr[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 393;
	TREE_LEVEL = 1;
	PARENT = 388;
}

DISPLAY_LINE
{
	CHANNEL = "decoder_rd_addr[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 394;
	TREE_LEVEL = 1;
	PARENT = 388;
}

DISPLAY_LINE
{
	CHANNEL = "decoder_rd_addr[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 395;
	TREE_LEVEL = 1;
	PARENT = 388;
}

DISPLAY_LINE
{
	CHANNEL = "decoder_rd_addr[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 396;
	TREE_LEVEL = 1;
	PARENT = 388;
}

DISPLAY_LINE
{
	CHANNEL = "decoder_rd_addr[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 397;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "decoder_rd_addr[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 398;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "decoder_rd_addr[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 399;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "decoder_rd_addr[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 400;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "decoder_rd_addr[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 401;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "decoder_rd_addr[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 402;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "decoder_rd_addr[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 403;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "decoder_rd_addr[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 404;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "derivative_error_location";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 405;
	TREE_LEVEL = 0;
	CHILDREN = 406, 407, 408, 409, 410, 411, 412, 413;
}

DISPLAY_LINE
{
	CHANNEL = "derivative_error_location[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 406;
	TREE_LEVEL = 1;
	PARENT = 405;
}

DISPLAY_LINE
{
	CHANNEL = "derivative_error_location[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 407;
	TREE_LEVEL = 1;
	PARENT = 405;
}

DISPLAY_LINE
{
	CHANNEL = "derivative_error_location[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 408;
	TREE_LEVEL = 1;
	PARENT = 405;
}

DISPLAY_LINE
{
	CHANNEL = "derivative_error_location[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 409;
	TREE_LEVEL = 1;
	PARENT = 405;
}

DISPLAY_LINE
{
	CHANNEL = "derivative_error_location[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 410;
	TREE_LEVEL = 1;
	PARENT = 405;
}

DISPLAY_LINE
{
	CHANNEL = "derivative_error_location[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 411;
	TREE_LEVEL = 1;
	PARENT = 405;
}

DISPLAY_LINE
{
	CHANNEL = "derivative_error_location[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 412;
	TREE_LEVEL = 1;
	PARENT = 405;
}

DISPLAY_LINE
{
	CHANNEL = "derivative_error_location[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 413;
	TREE_LEVEL = 1;
	PARENT = 405;
}

DISPLAY_LINE
{
	CHANNEL = "derivative_error_location[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 414;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "derivative_error_location[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 415;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "derivative_error_location[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 416;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "derivative_error_location[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 417;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "derivative_error_location[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 418;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "derivative_error_location[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 419;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "derivative_error_location[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 420;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "derivative_error_location[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 421;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "erase_position_0";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 422;
	TREE_LEVEL = 0;
	CHILDREN = 423, 424, 425, 426, 427, 428, 429, 430;
}

DISPLAY_LINE
{
	CHANNEL = "erase_position_0[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 423;
	TREE_LEVEL = 1;
	PARENT = 422;
}

DISPLAY_LINE
{
	CHANNEL = "erase_position_0[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 424;
	TREE_LEVEL = 1;
	PARENT = 422;
}

DISPLAY_LINE
{
	CHANNEL = "erase_position_0[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 425;
	TREE_LEVEL = 1;
	PARENT = 422;
}

DISPLAY_LINE
{
	CHANNEL = "erase_position_0[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 426;
	TREE_LEVEL = 1;
	PARENT = 422;
}

DISPLAY_LINE
{
	CHANNEL = "erase_position_0[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 427;
	TREE_LEVEL = 1;
	PARENT = 422;
}

DISPLAY_LINE
{
	CHANNEL = "erase_position_0[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 428;
	TREE_LEVEL = 1;
	PARENT = 422;
}

DISPLAY_LINE
{
	CHANNEL = "erase_position_0[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 429;
	TREE_LEVEL = 1;
	PARENT = 422;
}

DISPLAY_LINE
{
	CHANNEL = "erase_position_0[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 430;
	TREE_LEVEL = 1;
	PARENT = 422;
}

DISPLAY_LINE
{
	CHANNEL = "erase_position_0[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 431;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "erase_position_0[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 432;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "erase_position_0[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 433;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "erase_position_0[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 434;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "erase_position_0[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 435;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "erase_position_0[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 436;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "erase_position_0[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 437;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "erase_position_0[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 438;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "erase_position_1";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 439;
	TREE_LEVEL = 0;
	CHILDREN = 440, 441, 442, 443, 444, 445, 446, 447;
}

DISPLAY_LINE
{
	CHANNEL = "erase_position_1[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 440;
	TREE_LEVEL = 1;
	PARENT = 439;
}

DISPLAY_LINE
{
	CHANNEL = "erase_position_1[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 441;
	TREE_LEVEL = 1;
	PARENT = 439;
}

DISPLAY_LINE
{
	CHANNEL = "erase_position_1[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 442;
	TREE_LEVEL = 1;
	PARENT = 439;
}

DISPLAY_LINE
{
	CHANNEL = "erase_position_1[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 443;
	TREE_LEVEL = 1;
	PARENT = 439;
}

DISPLAY_LINE
{
	CHANNEL = "erase_position_1[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 444;
	TREE_LEVEL = 1;
	PARENT = 439;
}

DISPLAY_LINE
{
	CHANNEL = "erase_position_1[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 445;
	TREE_LEVEL = 1;
	PARENT = 439;
}

DISPLAY_LINE
{
	CHANNEL = "erase_position_1[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 446;
	TREE_LEVEL = 1;
	PARENT = 439;
}

DISPLAY_LINE
{
	CHANNEL = "erase_position_1[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 447;
	TREE_LEVEL = 1;
	PARENT = 439;
}

DISPLAY_LINE
{
	CHANNEL = "erase_position_1[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 448;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "erase_position_1[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 449;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "erase_position_1[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 450;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "erase_position_1[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 451;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "erase_position_1[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 452;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "erase_position_1[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 453;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "erase_position_1[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 454;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "erase_position_1[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 455;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "erase_position_2";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 456;
	TREE_LEVEL = 0;
	CHILDREN = 457, 458, 459, 460, 461, 462, 463, 464;
}

DISPLAY_LINE
{
	CHANNEL = "erase_position_2[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 457;
	TREE_LEVEL = 1;
	PARENT = 456;
}

DISPLAY_LINE
{
	CHANNEL = "erase_position_2[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 458;
	TREE_LEVEL = 1;
	PARENT = 456;
}

DISPLAY_LINE
{
	CHANNEL = "erase_position_2[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 459;
	TREE_LEVEL = 1;
	PARENT = 456;
}

DISPLAY_LINE
{
	CHANNEL = "erase_position_2[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 460;
	TREE_LEVEL = 1;
	PARENT = 456;
}

DISPLAY_LINE
{
	CHANNEL = "erase_position_2[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 461;
	TREE_LEVEL = 1;
	PARENT = 456;
}

DISPLAY_LINE
{
	CHANNEL = "erase_position_2[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 462;
	TREE_LEVEL = 1;
	PARENT = 456;
}

DISPLAY_LINE
{
	CHANNEL = "erase_position_2[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 463;
	TREE_LEVEL = 1;
	PARENT = 456;
}

DISPLAY_LINE
{
	CHANNEL = "erase_position_2[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 464;
	TREE_LEVEL = 1;
	PARENT = 456;
}

DISPLAY_LINE
{
	CHANNEL = "erase_position_2[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 465;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "erase_position_2[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 466;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "erase_position_2[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 467;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "erase_position_2[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 468;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "erase_position_2[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 469;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "erase_position_2[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 470;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "erase_position_2[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 471;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "erase_position_2[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 472;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "erasure";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 473;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "erasure_coef_ready_0";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 474;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "erasure_coef_ready_1";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 475;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "erasure_coef_ready_2";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 476;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "erasure_flag_0";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 477;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "erasure_flag_1";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 478;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "erasure_flag_2";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 479;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "erasure_polyn_0";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 480;
	TREE_LEVEL = 0;
	CHILDREN = 481, 482, 483, 484, 485, 486, 487, 488;
}

DISPLAY_LINE
{
	CHANNEL = "erasure_polyn_0[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 481;
	TREE_LEVEL = 1;
	PARENT = 480;
}

DISPLAY_LINE
{
	CHANNEL = "erasure_polyn_0[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 482;
	TREE_LEVEL = 1;
	PARENT = 480;
}

DISPLAY_LINE
{
	CHANNEL = "erasure_polyn_0[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 483;
	TREE_LEVEL = 1;
	PARENT = 480;
}

DISPLAY_LINE
{
	CHANNEL = "erasure_polyn_0[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 484;
	TREE_LEVEL = 1;
	PARENT = 480;
}

DISPLAY_LINE
{
	CHANNEL = "erasure_polyn_0[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 485;
	TREE_LEVEL = 1;
	PARENT = 480;
}

DISPLAY_LINE
{
	CHANNEL = "erasure_polyn_0[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 486;
	TREE_LEVEL = 1;
	PARENT = 480;
}

DISPLAY_LINE
{
	CHANNEL = "erasure_polyn_0[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 487;
	TREE_LEVEL = 1;
	PARENT = 480;
}

DISPLAY_LINE
{
	CHANNEL = "erasure_polyn_0[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 488;
	TREE_LEVEL = 1;
	PARENT = 480;
}

DISPLAY_LINE
{
	CHANNEL = "erasure_polyn_0[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 489;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "erasure_polyn_0[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 490;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "erasure_polyn_0[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 491;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "erasure_polyn_0[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 492;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "erasure_polyn_0[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 493;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "erasure_polyn_0[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 494;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "erasure_polyn_0[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 495;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "erasure_polyn_0[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 496;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "erasure_polyn_1";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 497;
	TREE_LEVEL = 0;
	CHILDREN = 498, 499, 500, 501, 502, 503, 504, 505;
}

DISPLAY_LINE
{
	CHANNEL = "erasure_polyn_1[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 498;
	TREE_LEVEL = 1;
	PARENT = 497;
}

DISPLAY_LINE
{
	CHANNEL = "erasure_polyn_1[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 499;
	TREE_LEVEL = 1;
	PARENT = 497;
}

DISPLAY_LINE
{
	CHANNEL = "erasure_polyn_1[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 500;
	TREE_LEVEL = 1;
	PARENT = 497;
}

DISPLAY_LINE
{
	CHANNEL = "erasure_polyn_1[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 501;
	TREE_LEVEL = 1;
	PARENT = 497;
}

DISPLAY_LINE
{
	CHANNEL = "erasure_polyn_1[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 502;
	TREE_LEVEL = 1;
	PARENT = 497;
}

DISPLAY_LINE
{
	CHANNEL = "erasure_polyn_1[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 503;
	TREE_LEVEL = 1;
	PARENT = 497;
}

DISPLAY_LINE
{
	CHANNEL = "erasure_polyn_1[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 504;
	TREE_LEVEL = 1;
	PARENT = 497;
}

DISPLAY_LINE
{
	CHANNEL = "erasure_polyn_1[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 505;
	TREE_LEVEL = 1;
	PARENT = 497;
}

DISPLAY_LINE
{
	CHANNEL = "erasure_polyn_1[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 506;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "erasure_polyn_1[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 507;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "erasure_polyn_1[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 508;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "erasure_polyn_1[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 509;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "erasure_polyn_1[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 510;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "erasure_polyn_1[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 511;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "erasure_polyn_1[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 512;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "erasure_polyn_1[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 513;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "erasure_polyn_2";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 514;
	TREE_LEVEL = 0;
	CHILDREN = 515, 516, 517, 518, 519, 520, 521, 522;
}

DISPLAY_LINE
{
	CHANNEL = "erasure_polyn_2[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 515;
	TREE_LEVEL = 1;
	PARENT = 514;
}

DISPLAY_LINE
{
	CHANNEL = "erasure_polyn_2[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 516;
	TREE_LEVEL = 1;
	PARENT = 514;
}

DISPLAY_LINE
{
	CHANNEL = "erasure_polyn_2[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 517;
	TREE_LEVEL = 1;
	PARENT = 514;
}

DISPLAY_LINE
{
	CHANNEL = "erasure_polyn_2[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 518;
	TREE_LEVEL = 1;
	PARENT = 514;
}

DISPLAY_LINE
{
	CHANNEL = "erasure_polyn_2[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 519;
	TREE_LEVEL = 1;
	PARENT = 514;
}

DISPLAY_LINE
{
	CHANNEL = "erasure_polyn_2[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 520;
	TREE_LEVEL = 1;
	PARENT = 514;
}

DISPLAY_LINE
{
	CHANNEL = "erasure_polyn_2[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 521;
	TREE_LEVEL = 1;
	PARENT = 514;
}

DISPLAY_LINE
{
	CHANNEL = "erasure_polyn_2[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 522;
	TREE_LEVEL = 1;
	PARENT = 514;
}

DISPLAY_LINE
{
	CHANNEL = "erasure_polyn_2[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 523;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "erasure_polyn_2[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 524;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "erasure_polyn_2[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 525;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "erasure_polyn_2[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 526;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "erasure_polyn_2[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 527;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "erasure_polyn_2[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 528;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "erasure_polyn_2[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 529;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "erasure_polyn_2[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 530;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "erasures_absent_0";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 531;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "erasures_absent_1";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 532;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "erasures_absent_2";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 533;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "errata_loc_coefs_0";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 534;
	TREE_LEVEL = 0;
	CHILDREN = 535, 536, 537, 538, 539, 540, 541, 542;
}

DISPLAY_LINE
{
	CHANNEL = "errata_loc_coefs_0[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 535;
	TREE_LEVEL = 1;
	PARENT = 534;
}

DISPLAY_LINE
{
	CHANNEL = "errata_loc_coefs_0[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 536;
	TREE_LEVEL = 1;
	PARENT = 534;
}

DISPLAY_LINE
{
	CHANNEL = "errata_loc_coefs_0[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 537;
	TREE_LEVEL = 1;
	PARENT = 534;
}

DISPLAY_LINE
{
	CHANNEL = "errata_loc_coefs_0[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 538;
	TREE_LEVEL = 1;
	PARENT = 534;
}

DISPLAY_LINE
{
	CHANNEL = "errata_loc_coefs_0[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 539;
	TREE_LEVEL = 1;
	PARENT = 534;
}

DISPLAY_LINE
{
	CHANNEL = "errata_loc_coefs_0[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 540;
	TREE_LEVEL = 1;
	PARENT = 534;
}

DISPLAY_LINE
{
	CHANNEL = "errata_loc_coefs_0[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 541;
	TREE_LEVEL = 1;
	PARENT = 534;
}

DISPLAY_LINE
{
	CHANNEL = "errata_loc_coefs_0[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 542;
	TREE_LEVEL = 1;
	PARENT = 534;
}

DISPLAY_LINE
{
	CHANNEL = "errata_loc_coefs_0[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 543;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "errata_loc_coefs_0[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 544;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "errata_loc_coefs_0[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 545;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "errata_loc_coefs_0[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 546;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "errata_loc_coefs_0[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 547;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "errata_loc_coefs_0[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 548;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "errata_loc_coefs_0[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 549;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "errata_loc_coefs_0[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 550;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "errata_loc_coefs_1";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 551;
	TREE_LEVEL = 0;
	CHILDREN = 552, 553, 554, 555, 556, 557, 558, 559;
}

DISPLAY_LINE
{
	CHANNEL = "errata_loc_coefs_1[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 552;
	TREE_LEVEL = 1;
	PARENT = 551;
}

DISPLAY_LINE
{
	CHANNEL = "errata_loc_coefs_1[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 553;
	TREE_LEVEL = 1;
	PARENT = 551;
}

DISPLAY_LINE
{
	CHANNEL = "errata_loc_coefs_1[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 554;
	TREE_LEVEL = 1;
	PARENT = 551;
}

DISPLAY_LINE
{
	CHANNEL = "errata_loc_coefs_1[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 555;
	TREE_LEVEL = 1;
	PARENT = 551;
}

DISPLAY_LINE
{
	CHANNEL = "errata_loc_coefs_1[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 556;
	TREE_LEVEL = 1;
	PARENT = 551;
}

DISPLAY_LINE
{
	CHANNEL = "errata_loc_coefs_1[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 557;
	TREE_LEVEL = 1;
	PARENT = 551;
}

DISPLAY_LINE
{
	CHANNEL = "errata_loc_coefs_1[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 558;
	TREE_LEVEL = 1;
	PARENT = 551;
}

DISPLAY_LINE
{
	CHANNEL = "errata_loc_coefs_1[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 559;
	TREE_LEVEL = 1;
	PARENT = 551;
}

DISPLAY_LINE
{
	CHANNEL = "errata_loc_coefs_1[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 560;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "errata_loc_coefs_1[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 561;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "errata_loc_coefs_1[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 562;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "errata_loc_coefs_1[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 563;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "errata_loc_coefs_1[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 564;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "errata_loc_coefs_1[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 565;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "errata_loc_coefs_1[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 566;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "errata_loc_coefs_1[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 567;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "errata_loc_coefs_2";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 568;
	TREE_LEVEL = 0;
	CHILDREN = 569, 570, 571, 572, 573, 574, 575, 576;
}

DISPLAY_LINE
{
	CHANNEL = "errata_loc_coefs_2[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 569;
	TREE_LEVEL = 1;
	PARENT = 568;
}

DISPLAY_LINE
{
	CHANNEL = "errata_loc_coefs_2[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 570;
	TREE_LEVEL = 1;
	PARENT = 568;
}

DISPLAY_LINE
{
	CHANNEL = "errata_loc_coefs_2[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 571;
	TREE_LEVEL = 1;
	PARENT = 568;
}

DISPLAY_LINE
{
	CHANNEL = "errata_loc_coefs_2[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 572;
	TREE_LEVEL = 1;
	PARENT = 568;
}

DISPLAY_LINE
{
	CHANNEL = "errata_loc_coefs_2[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 573;
	TREE_LEVEL = 1;
	PARENT = 568;
}

DISPLAY_LINE
{
	CHANNEL = "errata_loc_coefs_2[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 574;
	TREE_LEVEL = 1;
	PARENT = 568;
}

DISPLAY_LINE
{
	CHANNEL = "errata_loc_coefs_2[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 575;
	TREE_LEVEL = 1;
	PARENT = 568;
}

DISPLAY_LINE
{
	CHANNEL = "errata_loc_coefs_2[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 576;
	TREE_LEVEL = 1;
	PARENT = 568;
}

DISPLAY_LINE
{
	CHANNEL = "errata_loc_coefs_2[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 577;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "errata_loc_coefs_2[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 578;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "errata_loc_coefs_2[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 579;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "errata_loc_coefs_2[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 580;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "errata_loc_coefs_2[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 581;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "errata_loc_coefs_2[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 582;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "errata_loc_coefs_2[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 583;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "errata_loc_coefs_2[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 584;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "errata_magnitude_coefs_0";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 585;
	TREE_LEVEL = 0;
	CHILDREN = 586, 587, 588, 589, 590, 591, 592, 593;
}

DISPLAY_LINE
{
	CHANNEL = "errata_magnitude_coefs_0[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 586;
	TREE_LEVEL = 1;
	PARENT = 585;
}

DISPLAY_LINE
{
	CHANNEL = "errata_magnitude_coefs_0[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 587;
	TREE_LEVEL = 1;
	PARENT = 585;
}

DISPLAY_LINE
{
	CHANNEL = "errata_magnitude_coefs_0[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 588;
	TREE_LEVEL = 1;
	PARENT = 585;
}

DISPLAY_LINE
{
	CHANNEL = "errata_magnitude_coefs_0[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 589;
	TREE_LEVEL = 1;
	PARENT = 585;
}

DISPLAY_LINE
{
	CHANNEL = "errata_magnitude_coefs_0[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 590;
	TREE_LEVEL = 1;
	PARENT = 585;
}

DISPLAY_LINE
{
	CHANNEL = "errata_magnitude_coefs_0[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 591;
	TREE_LEVEL = 1;
	PARENT = 585;
}

DISPLAY_LINE
{
	CHANNEL = "errata_magnitude_coefs_0[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 592;
	TREE_LEVEL = 1;
	PARENT = 585;
}

DISPLAY_LINE
{
	CHANNEL = "errata_magnitude_coefs_0[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 593;
	TREE_LEVEL = 1;
	PARENT = 585;
}

DISPLAY_LINE
{
	CHANNEL = "errata_magnitude_coefs_0[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 594;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "errata_magnitude_coefs_0[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 595;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "errata_magnitude_coefs_0[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 596;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "errata_magnitude_coefs_0[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 597;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "errata_magnitude_coefs_0[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 598;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "errata_magnitude_coefs_0[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 599;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "errata_magnitude_coefs_0[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 600;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "errata_magnitude_coefs_0[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 601;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "errata_magnitude_coefs_1";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 602;
	TREE_LEVEL = 0;
	CHILDREN = 603, 604, 605, 606, 607, 608, 609, 610;
}

DISPLAY_LINE
{
	CHANNEL = "errata_magnitude_coefs_1[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 603;
	TREE_LEVEL = 1;
	PARENT = 602;
}

DISPLAY_LINE
{
	CHANNEL = "errata_magnitude_coefs_1[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 604;
	TREE_LEVEL = 1;
	PARENT = 602;
}

DISPLAY_LINE
{
	CHANNEL = "errata_magnitude_coefs_1[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 605;
	TREE_LEVEL = 1;
	PARENT = 602;
}

DISPLAY_LINE
{
	CHANNEL = "errata_magnitude_coefs_1[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 606;
	TREE_LEVEL = 1;
	PARENT = 602;
}

DISPLAY_LINE
{
	CHANNEL = "errata_magnitude_coefs_1[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 607;
	TREE_LEVEL = 1;
	PARENT = 602;
}

DISPLAY_LINE
{
	CHANNEL = "errata_magnitude_coefs_1[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 608;
	TREE_LEVEL = 1;
	PARENT = 602;
}

DISPLAY_LINE
{
	CHANNEL = "errata_magnitude_coefs_1[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 609;
	TREE_LEVEL = 1;
	PARENT = 602;
}

DISPLAY_LINE
{
	CHANNEL = "errata_magnitude_coefs_1[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 610;
	TREE_LEVEL = 1;
	PARENT = 602;
}

DISPLAY_LINE
{
	CHANNEL = "errata_magnitude_coefs_1[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 611;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "errata_magnitude_coefs_1[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 612;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "errata_magnitude_coefs_1[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 613;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "errata_magnitude_coefs_1[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 614;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "errata_magnitude_coefs_1[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 615;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "errata_magnitude_coefs_1[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 616;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "errata_magnitude_coefs_1[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 617;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "errata_magnitude_coefs_1[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 618;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "errata_magnitude_coefs_2";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 619;
	TREE_LEVEL = 0;
	CHILDREN = 620, 621, 622, 623, 624, 625, 626, 627;
}

DISPLAY_LINE
{
	CHANNEL = "errata_magnitude_coefs_2[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 620;
	TREE_LEVEL = 1;
	PARENT = 619;
}

DISPLAY_LINE
{
	CHANNEL = "errata_magnitude_coefs_2[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 621;
	TREE_LEVEL = 1;
	PARENT = 619;
}

DISPLAY_LINE
{
	CHANNEL = "errata_magnitude_coefs_2[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 622;
	TREE_LEVEL = 1;
	PARENT = 619;
}

DISPLAY_LINE
{
	CHANNEL = "errata_magnitude_coefs_2[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 623;
	TREE_LEVEL = 1;
	PARENT = 619;
}

DISPLAY_LINE
{
	CHANNEL = "errata_magnitude_coefs_2[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 624;
	TREE_LEVEL = 1;
	PARENT = 619;
}

DISPLAY_LINE
{
	CHANNEL = "errata_magnitude_coefs_2[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 625;
	TREE_LEVEL = 1;
	PARENT = 619;
}

DISPLAY_LINE
{
	CHANNEL = "errata_magnitude_coefs_2[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 626;
	TREE_LEVEL = 1;
	PARENT = 619;
}

DISPLAY_LINE
{
	CHANNEL = "errata_magnitude_coefs_2[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 627;
	TREE_LEVEL = 1;
	PARENT = 619;
}

DISPLAY_LINE
{
	CHANNEL = "errata_magnitude_coefs_2[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 628;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "errata_magnitude_coefs_2[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 629;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "errata_magnitude_coefs_2[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 630;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "errata_magnitude_coefs_2[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 631;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "errata_magnitude_coefs_2[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 632;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "errata_magnitude_coefs_2[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 633;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "errata_magnitude_coefs_2[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 634;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "errata_magnitude_coefs_2[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 635;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "error_location_0";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 636;
	TREE_LEVEL = 0;
	CHILDREN = 637, 638, 639, 640, 641, 642, 643, 644;
}

DISPLAY_LINE
{
	CHANNEL = "error_location_0[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 637;
	TREE_LEVEL = 1;
	PARENT = 636;
}

DISPLAY_LINE
{
	CHANNEL = "error_location_0[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 638;
	TREE_LEVEL = 1;
	PARENT = 636;
}

DISPLAY_LINE
{
	CHANNEL = "error_location_0[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 639;
	TREE_LEVEL = 1;
	PARENT = 636;
}

DISPLAY_LINE
{
	CHANNEL = "error_location_0[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 640;
	TREE_LEVEL = 1;
	PARENT = 636;
}

DISPLAY_LINE
{
	CHANNEL = "error_location_0[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 641;
	TREE_LEVEL = 1;
	PARENT = 636;
}

DISPLAY_LINE
{
	CHANNEL = "error_location_0[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 642;
	TREE_LEVEL = 1;
	PARENT = 636;
}

DISPLAY_LINE
{
	CHANNEL = "error_location_0[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 643;
	TREE_LEVEL = 1;
	PARENT = 636;
}

DISPLAY_LINE
{
	CHANNEL = "error_location_0[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 644;
	TREE_LEVEL = 1;
	PARENT = 636;
}

DISPLAY_LINE
{
	CHANNEL = "error_location_0[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 645;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "error_location_0[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 646;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "error_location_0[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 647;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "error_location_0[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 648;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "error_location_0[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 649;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "error_location_0[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 650;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "error_location_0[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 651;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "error_location_0[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 652;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "error_location_1";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 653;
	TREE_LEVEL = 0;
	CHILDREN = 654, 655, 656, 657, 658, 659, 660, 661;
}

DISPLAY_LINE
{
	CHANNEL = "error_location_1[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 654;
	TREE_LEVEL = 1;
	PARENT = 653;
}

DISPLAY_LINE
{
	CHANNEL = "error_location_1[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 655;
	TREE_LEVEL = 1;
	PARENT = 653;
}

DISPLAY_LINE
{
	CHANNEL = "error_location_1[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 656;
	TREE_LEVEL = 1;
	PARENT = 653;
}

DISPLAY_LINE
{
	CHANNEL = "error_location_1[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 657;
	TREE_LEVEL = 1;
	PARENT = 653;
}

DISPLAY_LINE
{
	CHANNEL = "error_location_1[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 658;
	TREE_LEVEL = 1;
	PARENT = 653;
}

DISPLAY_LINE
{
	CHANNEL = "error_location_1[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 659;
	TREE_LEVEL = 1;
	PARENT = 653;
}

DISPLAY_LINE
{
	CHANNEL = "error_location_1[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 660;
	TREE_LEVEL = 1;
	PARENT = 653;
}

DISPLAY_LINE
{
	CHANNEL = "error_location_1[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 661;
	TREE_LEVEL = 1;
	PARENT = 653;
}

DISPLAY_LINE
{
	CHANNEL = "error_location_1[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 662;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "error_location_1[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 663;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "error_location_1[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 664;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "error_location_1[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 665;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "error_location_1[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 666;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "error_location_1[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 667;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "error_location_1[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 668;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "error_location_1[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 669;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "error_location_2";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 670;
	TREE_LEVEL = 0;
	CHILDREN = 671, 672, 673, 674, 675, 676, 677, 678;
}

DISPLAY_LINE
{
	CHANNEL = "error_location_2[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 671;
	TREE_LEVEL = 1;
	PARENT = 670;
}

DISPLAY_LINE
{
	CHANNEL = "error_location_2[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 672;
	TREE_LEVEL = 1;
	PARENT = 670;
}

DISPLAY_LINE
{
	CHANNEL = "error_location_2[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 673;
	TREE_LEVEL = 1;
	PARENT = 670;
}

DISPLAY_LINE
{
	CHANNEL = "error_location_2[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 674;
	TREE_LEVEL = 1;
	PARENT = 670;
}

DISPLAY_LINE
{
	CHANNEL = "error_location_2[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 675;
	TREE_LEVEL = 1;
	PARENT = 670;
}

DISPLAY_LINE
{
	CHANNEL = "error_location_2[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 676;
	TREE_LEVEL = 1;
	PARENT = 670;
}

DISPLAY_LINE
{
	CHANNEL = "error_location_2[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 677;
	TREE_LEVEL = 1;
	PARENT = 670;
}

DISPLAY_LINE
{
	CHANNEL = "error_location_2[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 678;
	TREE_LEVEL = 1;
	PARENT = 670;
}

DISPLAY_LINE
{
	CHANNEL = "error_location_2[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 679;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "error_location_2[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 680;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "error_location_2[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 681;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "error_location_2[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 682;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "error_location_2[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 683;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "error_location_2[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 684;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "error_location_2[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 685;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "error_location_2[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 686;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "error_magnitude";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 687;
	TREE_LEVEL = 0;
	CHILDREN = 688, 689, 690, 691, 692, 693, 694, 695;
}

DISPLAY_LINE
{
	CHANNEL = "error_magnitude[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 688;
	TREE_LEVEL = 1;
	PARENT = 687;
}

DISPLAY_LINE
{
	CHANNEL = "error_magnitude[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 689;
	TREE_LEVEL = 1;
	PARENT = 687;
}

DISPLAY_LINE
{
	CHANNEL = "error_magnitude[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 690;
	TREE_LEVEL = 1;
	PARENT = 687;
}

DISPLAY_LINE
{
	CHANNEL = "error_magnitude[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 691;
	TREE_LEVEL = 1;
	PARENT = 687;
}

DISPLAY_LINE
{
	CHANNEL = "error_magnitude[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 692;
	TREE_LEVEL = 1;
	PARENT = 687;
}

DISPLAY_LINE
{
	CHANNEL = "error_magnitude[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 693;
	TREE_LEVEL = 1;
	PARENT = 687;
}

DISPLAY_LINE
{
	CHANNEL = "error_magnitude[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 694;
	TREE_LEVEL = 1;
	PARENT = 687;
}

DISPLAY_LINE
{
	CHANNEL = "error_magnitude[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 695;
	TREE_LEVEL = 1;
	PARENT = 687;
}

DISPLAY_LINE
{
	CHANNEL = "error_magnitude[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 696;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "error_magnitude[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 697;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "error_magnitude[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 698;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "error_magnitude[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 699;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "error_magnitude[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 700;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "error_magnitude[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 701;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "error_magnitude[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 702;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "error_magnitude[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 703;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "exact_smallest";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 704;
	TREE_LEVEL = 0;
	CHILDREN = 705, 706, 707, 708, 709, 710, 711, 712, 713, 714;
}

DISPLAY_LINE
{
	CHANNEL = "exact_smallest[9]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 705;
	TREE_LEVEL = 1;
	PARENT = 704;
}

DISPLAY_LINE
{
	CHANNEL = "exact_smallest[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 706;
	TREE_LEVEL = 1;
	PARENT = 704;
}

DISPLAY_LINE
{
	CHANNEL = "exact_smallest[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 707;
	TREE_LEVEL = 1;
	PARENT = 704;
}

DISPLAY_LINE
{
	CHANNEL = "exact_smallest[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 708;
	TREE_LEVEL = 1;
	PARENT = 704;
}

DISPLAY_LINE
{
	CHANNEL = "exact_smallest[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 709;
	TREE_LEVEL = 1;
	PARENT = 704;
}

DISPLAY_LINE
{
	CHANNEL = "exact_smallest[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 710;
	TREE_LEVEL = 1;
	PARENT = 704;
}

DISPLAY_LINE
{
	CHANNEL = "exact_smallest[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 711;
	TREE_LEVEL = 1;
	PARENT = 704;
}

DISPLAY_LINE
{
	CHANNEL = "exact_smallest[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 712;
	TREE_LEVEL = 1;
	PARENT = 704;
}

DISPLAY_LINE
{
	CHANNEL = "exact_smallest[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 713;
	TREE_LEVEL = 1;
	PARENT = 704;
}

DISPLAY_LINE
{
	CHANNEL = "exact_smallest[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 714;
	TREE_LEVEL = 1;
	PARENT = 704;
}

DISPLAY_LINE
{
	CHANNEL = "exact_smallest[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 715;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "exact_smallest[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 716;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "exact_smallest[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 717;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "exact_smallest[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 718;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "exact_smallest[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 719;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "exact_smallest[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 720;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "exact_smallest[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 721;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "exact_smallest[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 722;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "exact_smallest[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 723;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "exact_smallest[9]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 724;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "fade_value";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 725;
	TREE_LEVEL = 0;
	CHILDREN = 726, 727, 728, 729, 730, 731, 732, 733, 734, 735;
}

DISPLAY_LINE
{
	CHANNEL = "fade_value[9]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 726;
	TREE_LEVEL = 1;
	PARENT = 725;
}

DISPLAY_LINE
{
	CHANNEL = "fade_value[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 727;
	TREE_LEVEL = 1;
	PARENT = 725;
}

DISPLAY_LINE
{
	CHANNEL = "fade_value[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 728;
	TREE_LEVEL = 1;
	PARENT = 725;
}

DISPLAY_LINE
{
	CHANNEL = "fade_value[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 729;
	TREE_LEVEL = 1;
	PARENT = 725;
}

DISPLAY_LINE
{
	CHANNEL = "fade_value[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 730;
	TREE_LEVEL = 1;
	PARENT = 725;
}

DISPLAY_LINE
{
	CHANNEL = "fade_value[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 731;
	TREE_LEVEL = 1;
	PARENT = 725;
}

DISPLAY_LINE
{
	CHANNEL = "fade_value[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 732;
	TREE_LEVEL = 1;
	PARENT = 725;
}

DISPLAY_LINE
{
	CHANNEL = "fade_value[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 733;
	TREE_LEVEL = 1;
	PARENT = 725;
}

DISPLAY_LINE
{
	CHANNEL = "fade_value[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 734;
	TREE_LEVEL = 1;
	PARENT = 725;
}

DISPLAY_LINE
{
	CHANNEL = "fade_value[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 735;
	TREE_LEVEL = 1;
	PARENT = 725;
}

DISPLAY_LINE
{
	CHANNEL = "fade_value[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 736;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "fade_value[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 737;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "fade_value[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 738;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "fade_value[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 739;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "fade_value[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 740;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "fade_value[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 741;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "fade_value[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 742;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "fade_value[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 743;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "fade_value[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 744;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "fade_value[9]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 745;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "load_non_zero_syndrome_done";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 746;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "locator_degree_0";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 747;
	TREE_LEVEL = 0;
	CHILDREN = 748, 749, 750, 751, 752, 753;
}

DISPLAY_LINE
{
	CHANNEL = "locator_degree_0[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 748;
	TREE_LEVEL = 1;
	PARENT = 747;
}

DISPLAY_LINE
{
	CHANNEL = "locator_degree_0[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 749;
	TREE_LEVEL = 1;
	PARENT = 747;
}

DISPLAY_LINE
{
	CHANNEL = "locator_degree_0[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 750;
	TREE_LEVEL = 1;
	PARENT = 747;
}

DISPLAY_LINE
{
	CHANNEL = "locator_degree_0[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 751;
	TREE_LEVEL = 1;
	PARENT = 747;
}

DISPLAY_LINE
{
	CHANNEL = "locator_degree_0[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 752;
	TREE_LEVEL = 1;
	PARENT = 747;
}

DISPLAY_LINE
{
	CHANNEL = "locator_degree_0[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 753;
	TREE_LEVEL = 1;
	PARENT = 747;
}

DISPLAY_LINE
{
	CHANNEL = "locator_degree_0[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 754;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "locator_degree_0[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 755;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "locator_degree_0[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 756;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "locator_degree_0[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 757;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "locator_degree_0[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 758;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "locator_degree_0[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 759;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "locator_degree_1";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 760;
	TREE_LEVEL = 0;
	CHILDREN = 761, 762, 763, 764, 765, 766;
}

DISPLAY_LINE
{
	CHANNEL = "locator_degree_1[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 761;
	TREE_LEVEL = 1;
	PARENT = 760;
}

DISPLAY_LINE
{
	CHANNEL = "locator_degree_1[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 762;
	TREE_LEVEL = 1;
	PARENT = 760;
}

DISPLAY_LINE
{
	CHANNEL = "locator_degree_1[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 763;
	TREE_LEVEL = 1;
	PARENT = 760;
}

DISPLAY_LINE
{
	CHANNEL = "locator_degree_1[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 764;
	TREE_LEVEL = 1;
	PARENT = 760;
}

DISPLAY_LINE
{
	CHANNEL = "locator_degree_1[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 765;
	TREE_LEVEL = 1;
	PARENT = 760;
}

DISPLAY_LINE
{
	CHANNEL = "locator_degree_1[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 766;
	TREE_LEVEL = 1;
	PARENT = 760;
}

DISPLAY_LINE
{
	CHANNEL = "locator_degree_1[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 767;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "locator_degree_1[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 768;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "locator_degree_1[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 769;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "locator_degree_1[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 770;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "locator_degree_1[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 771;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "locator_degree_1[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 772;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "locator_degree_2";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 773;
	TREE_LEVEL = 0;
	CHILDREN = 774, 775, 776, 777, 778, 779;
}

DISPLAY_LINE
{
	CHANNEL = "locator_degree_2[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 774;
	TREE_LEVEL = 1;
	PARENT = 773;
}

DISPLAY_LINE
{
	CHANNEL = "locator_degree_2[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 775;
	TREE_LEVEL = 1;
	PARENT = 773;
}

DISPLAY_LINE
{
	CHANNEL = "locator_degree_2[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 776;
	TREE_LEVEL = 1;
	PARENT = 773;
}

DISPLAY_LINE
{
	CHANNEL = "locator_degree_2[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 777;
	TREE_LEVEL = 1;
	PARENT = 773;
}

DISPLAY_LINE
{
	CHANNEL = "locator_degree_2[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 778;
	TREE_LEVEL = 1;
	PARENT = 773;
}

DISPLAY_LINE
{
	CHANNEL = "locator_degree_2[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 779;
	TREE_LEVEL = 1;
	PARENT = 773;
}

DISPLAY_LINE
{
	CHANNEL = "locator_degree_2[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 780;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "locator_degree_2[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 781;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "locator_degree_2[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 782;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "locator_degree_2[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 783;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "locator_degree_2[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 784;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "locator_degree_2[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 785;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "locator_polyn_0";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 786;
	TREE_LEVEL = 0;
	CHILDREN = 787, 788, 789, 790, 791, 792, 793, 794;
}

DISPLAY_LINE
{
	CHANNEL = "locator_polyn_0[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 787;
	TREE_LEVEL = 1;
	PARENT = 786;
}

DISPLAY_LINE
{
	CHANNEL = "locator_polyn_0[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 788;
	TREE_LEVEL = 1;
	PARENT = 786;
}

DISPLAY_LINE
{
	CHANNEL = "locator_polyn_0[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 789;
	TREE_LEVEL = 1;
	PARENT = 786;
}

DISPLAY_LINE
{
	CHANNEL = "locator_polyn_0[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 790;
	TREE_LEVEL = 1;
	PARENT = 786;
}

DISPLAY_LINE
{
	CHANNEL = "locator_polyn_0[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 791;
	TREE_LEVEL = 1;
	PARENT = 786;
}

DISPLAY_LINE
{
	CHANNEL = "locator_polyn_0[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 792;
	TREE_LEVEL = 1;
	PARENT = 786;
}

DISPLAY_LINE
{
	CHANNEL = "locator_polyn_0[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 793;
	TREE_LEVEL = 1;
	PARENT = 786;
}

DISPLAY_LINE
{
	CHANNEL = "locator_polyn_0[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 794;
	TREE_LEVEL = 1;
	PARENT = 786;
}

DISPLAY_LINE
{
	CHANNEL = "locator_polyn_0[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 795;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "locator_polyn_0[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 796;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "locator_polyn_0[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 797;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "locator_polyn_0[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 798;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "locator_polyn_0[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 799;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "locator_polyn_0[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 800;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "locator_polyn_0[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 801;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "locator_polyn_0[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 802;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "locator_polyn_1";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 803;
	TREE_LEVEL = 0;
	CHILDREN = 804, 805, 806, 807, 808, 809, 810, 811;
}

DISPLAY_LINE
{
	CHANNEL = "locator_polyn_1[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 804;
	TREE_LEVEL = 1;
	PARENT = 803;
}

DISPLAY_LINE
{
	CHANNEL = "locator_polyn_1[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 805;
	TREE_LEVEL = 1;
	PARENT = 803;
}

DISPLAY_LINE
{
	CHANNEL = "locator_polyn_1[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 806;
	TREE_LEVEL = 1;
	PARENT = 803;
}

DISPLAY_LINE
{
	CHANNEL = "locator_polyn_1[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 807;
	TREE_LEVEL = 1;
	PARENT = 803;
}

DISPLAY_LINE
{
	CHANNEL = "locator_polyn_1[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 808;
	TREE_LEVEL = 1;
	PARENT = 803;
}

DISPLAY_LINE
{
	CHANNEL = "locator_polyn_1[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 809;
	TREE_LEVEL = 1;
	PARENT = 803;
}

DISPLAY_LINE
{
	CHANNEL = "locator_polyn_1[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 810;
	TREE_LEVEL = 1;
	PARENT = 803;
}

DISPLAY_LINE
{
	CHANNEL = "locator_polyn_1[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 811;
	TREE_LEVEL = 1;
	PARENT = 803;
}

DISPLAY_LINE
{
	CHANNEL = "locator_polyn_1[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 812;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "locator_polyn_1[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 813;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "locator_polyn_1[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 814;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "locator_polyn_1[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 815;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "locator_polyn_1[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 816;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "locator_polyn_1[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 817;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "locator_polyn_1[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 818;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "locator_polyn_1[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 819;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "locator_polyn_2";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 820;
	TREE_LEVEL = 0;
	CHILDREN = 821, 822, 823, 824, 825, 826, 827, 828;
}

DISPLAY_LINE
{
	CHANNEL = "locator_polyn_2[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 821;
	TREE_LEVEL = 1;
	PARENT = 820;
}

DISPLAY_LINE
{
	CHANNEL = "locator_polyn_2[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 822;
	TREE_LEVEL = 1;
	PARENT = 820;
}

DISPLAY_LINE
{
	CHANNEL = "locator_polyn_2[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 823;
	TREE_LEVEL = 1;
	PARENT = 820;
}

DISPLAY_LINE
{
	CHANNEL = "locator_polyn_2[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 824;
	TREE_LEVEL = 1;
	PARENT = 820;
}

DISPLAY_LINE
{
	CHANNEL = "locator_polyn_2[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 825;
	TREE_LEVEL = 1;
	PARENT = 820;
}

DISPLAY_LINE
{
	CHANNEL = "locator_polyn_2[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 826;
	TREE_LEVEL = 1;
	PARENT = 820;
}

DISPLAY_LINE
{
	CHANNEL = "locator_polyn_2[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 827;
	TREE_LEVEL = 1;
	PARENT = 820;
}

DISPLAY_LINE
{
	CHANNEL = "locator_polyn_2[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 828;
	TREE_LEVEL = 1;
	PARENT = 820;
}

DISPLAY_LINE
{
	CHANNEL = "locator_polyn_2[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 829;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "locator_polyn_2[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 830;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "locator_polyn_2[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 831;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "locator_polyn_2[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 832;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "locator_polyn_2[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 833;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "locator_polyn_2[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 834;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "locator_polyn_2[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 835;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "locator_polyn_2[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 836;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "magnitue_polyn_0";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 837;
	TREE_LEVEL = 0;
	CHILDREN = 838, 839, 840, 841, 842, 843, 844, 845;
}

DISPLAY_LINE
{
	CHANNEL = "magnitue_polyn_0[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 838;
	TREE_LEVEL = 1;
	PARENT = 837;
}

DISPLAY_LINE
{
	CHANNEL = "magnitue_polyn_0[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 839;
	TREE_LEVEL = 1;
	PARENT = 837;
}

DISPLAY_LINE
{
	CHANNEL = "magnitue_polyn_0[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 840;
	TREE_LEVEL = 1;
	PARENT = 837;
}

DISPLAY_LINE
{
	CHANNEL = "magnitue_polyn_0[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 841;
	TREE_LEVEL = 1;
	PARENT = 837;
}

DISPLAY_LINE
{
	CHANNEL = "magnitue_polyn_0[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 842;
	TREE_LEVEL = 1;
	PARENT = 837;
}

DISPLAY_LINE
{
	CHANNEL = "magnitue_polyn_0[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 843;
	TREE_LEVEL = 1;
	PARENT = 837;
}

DISPLAY_LINE
{
	CHANNEL = "magnitue_polyn_0[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 844;
	TREE_LEVEL = 1;
	PARENT = 837;
}

DISPLAY_LINE
{
	CHANNEL = "magnitue_polyn_0[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 845;
	TREE_LEVEL = 1;
	PARENT = 837;
}

DISPLAY_LINE
{
	CHANNEL = "magnitue_polyn_0[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 846;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "magnitue_polyn_0[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 847;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "magnitue_polyn_0[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 848;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "magnitue_polyn_0[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 849;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "magnitue_polyn_0[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 850;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "magnitue_polyn_0[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 851;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "magnitue_polyn_0[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 852;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "magnitue_polyn_0[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 853;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "magnitue_polyn_1";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 854;
	TREE_LEVEL = 0;
	CHILDREN = 855, 856, 857, 858, 859, 860, 861, 862;
}

DISPLAY_LINE
{
	CHANNEL = "magnitue_polyn_1[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 855;
	TREE_LEVEL = 1;
	PARENT = 854;
}

DISPLAY_LINE
{
	CHANNEL = "magnitue_polyn_1[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 856;
	TREE_LEVEL = 1;
	PARENT = 854;
}

DISPLAY_LINE
{
	CHANNEL = "magnitue_polyn_1[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 857;
	TREE_LEVEL = 1;
	PARENT = 854;
}

DISPLAY_LINE
{
	CHANNEL = "magnitue_polyn_1[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 858;
	TREE_LEVEL = 1;
	PARENT = 854;
}

DISPLAY_LINE
{
	CHANNEL = "magnitue_polyn_1[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 859;
	TREE_LEVEL = 1;
	PARENT = 854;
}

DISPLAY_LINE
{
	CHANNEL = "magnitue_polyn_1[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 860;
	TREE_LEVEL = 1;
	PARENT = 854;
}

DISPLAY_LINE
{
	CHANNEL = "magnitue_polyn_1[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 861;
	TREE_LEVEL = 1;
	PARENT = 854;
}

DISPLAY_LINE
{
	CHANNEL = "magnitue_polyn_1[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 862;
	TREE_LEVEL = 1;
	PARENT = 854;
}

DISPLAY_LINE
{
	CHANNEL = "magnitue_polyn_1[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 863;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "magnitue_polyn_1[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 864;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "magnitue_polyn_1[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 865;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "magnitue_polyn_1[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 866;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "magnitue_polyn_1[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 867;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "magnitue_polyn_1[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 868;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "magnitue_polyn_1[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 869;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "magnitue_polyn_1[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 870;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "magnitue_polyn_2";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 871;
	TREE_LEVEL = 0;
	CHILDREN = 872, 873, 874, 875, 876, 877, 878, 879;
}

DISPLAY_LINE
{
	CHANNEL = "magnitue_polyn_2[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 872;
	TREE_LEVEL = 1;
	PARENT = 871;
}

DISPLAY_LINE
{
	CHANNEL = "magnitue_polyn_2[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 873;
	TREE_LEVEL = 1;
	PARENT = 871;
}

DISPLAY_LINE
{
	CHANNEL = "magnitue_polyn_2[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 874;
	TREE_LEVEL = 1;
	PARENT = 871;
}

DISPLAY_LINE
{
	CHANNEL = "magnitue_polyn_2[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 875;
	TREE_LEVEL = 1;
	PARENT = 871;
}

DISPLAY_LINE
{
	CHANNEL = "magnitue_polyn_2[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 876;
	TREE_LEVEL = 1;
	PARENT = 871;
}

DISPLAY_LINE
{
	CHANNEL = "magnitue_polyn_2[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 877;
	TREE_LEVEL = 1;
	PARENT = 871;
}

DISPLAY_LINE
{
	CHANNEL = "magnitue_polyn_2[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 878;
	TREE_LEVEL = 1;
	PARENT = 871;
}

DISPLAY_LINE
{
	CHANNEL = "magnitue_polyn_2[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 879;
	TREE_LEVEL = 1;
	PARENT = 871;
}

DISPLAY_LINE
{
	CHANNEL = "magnitue_polyn_2[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 880;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "magnitue_polyn_2[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 881;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "magnitue_polyn_2[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 882;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "magnitue_polyn_2[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 883;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "magnitue_polyn_2[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 884;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "magnitue_polyn_2[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 885;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "magnitue_polyn_2[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 886;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "magnitue_polyn_2[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 887;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "modified_actual_distance";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 888;
	TREE_LEVEL = 0;
	CHILDREN = 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912;
}

DISPLAY_LINE
{
	CHANNEL = "modified_actual_distance[23]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 889;
	TREE_LEVEL = 1;
	PARENT = 888;
}

DISPLAY_LINE
{
	CHANNEL = "modified_actual_distance[22]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 890;
	TREE_LEVEL = 1;
	PARENT = 888;
}

DISPLAY_LINE
{
	CHANNEL = "modified_actual_distance[21]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 891;
	TREE_LEVEL = 1;
	PARENT = 888;
}

DISPLAY_LINE
{
	CHANNEL = "modified_actual_distance[20]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 892;
	TREE_LEVEL = 1;
	PARENT = 888;
}

DISPLAY_LINE
{
	CHANNEL = "modified_actual_distance[19]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 893;
	TREE_LEVEL = 1;
	PARENT = 888;
}

DISPLAY_LINE
{
	CHANNEL = "modified_actual_distance[18]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 894;
	TREE_LEVEL = 1;
	PARENT = 888;
}

DISPLAY_LINE
{
	CHANNEL = "modified_actual_distance[17]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 895;
	TREE_LEVEL = 1;
	PARENT = 888;
}

DISPLAY_LINE
{
	CHANNEL = "modified_actual_distance[16]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 896;
	TREE_LEVEL = 1;
	PARENT = 888;
}

DISPLAY_LINE
{
	CHANNEL = "modified_actual_distance[15]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 897;
	TREE_LEVEL = 1;
	PARENT = 888;
}

DISPLAY_LINE
{
	CHANNEL = "modified_actual_distance[14]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 898;
	TREE_LEVEL = 1;
	PARENT = 888;
}

DISPLAY_LINE
{
	CHANNEL = "modified_actual_distance[13]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 899;
	TREE_LEVEL = 1;
	PARENT = 888;
}

DISPLAY_LINE
{
	CHANNEL = "modified_actual_distance[12]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 900;
	TREE_LEVEL = 1;
	PARENT = 888;
}

DISPLAY_LINE
{
	CHANNEL = "modified_actual_distance[11]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 901;
	TREE_LEVEL = 1;
	PARENT = 888;
}

DISPLAY_LINE
{
	CHANNEL = "modified_actual_distance[10]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 902;
	TREE_LEVEL = 1;
	PARENT = 888;
}

DISPLAY_LINE
{
	CHANNEL = "modified_actual_distance[9]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 903;
	TREE_LEVEL = 1;
	PARENT = 888;
}

DISPLAY_LINE
{
	CHANNEL = "modified_actual_distance[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 904;
	TREE_LEVEL = 1;
	PARENT = 888;
}

DISPLAY_LINE
{
	CHANNEL = "modified_actual_distance[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 905;
	TREE_LEVEL = 1;
	PARENT = 888;
}

DISPLAY_LINE
{
	CHANNEL = "modified_actual_distance[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 906;
	TREE_LEVEL = 1;
	PARENT = 888;
}

DISPLAY_LINE
{
	CHANNEL = "modified_actual_distance[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 907;
	TREE_LEVEL = 1;
	PARENT = 888;
}

DISPLAY_LINE
{
	CHANNEL = "modified_actual_distance[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 908;
	TREE_LEVEL = 1;
	PARENT = 888;
}

DISPLAY_LINE
{
	CHANNEL = "modified_actual_distance[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 909;
	TREE_LEVEL = 1;
	PARENT = 888;
}

DISPLAY_LINE
{
	CHANNEL = "modified_actual_distance[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 910;
	TREE_LEVEL = 1;
	PARENT = 888;
}

DISPLAY_LINE
{
	CHANNEL = "modified_actual_distance[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 911;
	TREE_LEVEL = 1;
	PARENT = 888;
}

DISPLAY_LINE
{
	CHANNEL = "modified_actual_distance[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 912;
	TREE_LEVEL = 1;
	PARENT = 888;
}

DISPLAY_LINE
{
	CHANNEL = "modified_actual_distance[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 913;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "modified_actual_distance[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 914;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "modified_actual_distance[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 915;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "modified_actual_distance[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 916;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "modified_actual_distance[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 917;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "modified_actual_distance[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 918;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "modified_actual_distance[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 919;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "modified_actual_distance[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 920;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "modified_actual_distance[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 921;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "modified_actual_distance[9]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 922;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "modified_actual_distance[10]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 923;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "modified_actual_distance[11]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 924;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "modified_actual_distance[12]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 925;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "modified_actual_distance[13]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 926;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "modified_actual_distance[14]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 927;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "modified_actual_distance[15]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 928;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "modified_actual_distance[16]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 929;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "modified_actual_distance[17]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 930;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "modified_actual_distance[18]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 931;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "modified_actual_distance[19]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 932;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "modified_actual_distance[20]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 933;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "modified_actual_distance[21]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 934;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "modified_actual_distance[22]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 935;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "modified_actual_distance[23]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 936;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "modified_syndr_polyn_0";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 937;
	TREE_LEVEL = 0;
	CHILDREN = 938, 939, 940, 941, 942, 943, 944, 945;
}

DISPLAY_LINE
{
	CHANNEL = "modified_syndr_polyn_0[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 938;
	TREE_LEVEL = 1;
	PARENT = 937;
}

DISPLAY_LINE
{
	CHANNEL = "modified_syndr_polyn_0[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 939;
	TREE_LEVEL = 1;
	PARENT = 937;
}

DISPLAY_LINE
{
	CHANNEL = "modified_syndr_polyn_0[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 940;
	TREE_LEVEL = 1;
	PARENT = 937;
}

DISPLAY_LINE
{
	CHANNEL = "modified_syndr_polyn_0[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 941;
	TREE_LEVEL = 1;
	PARENT = 937;
}

DISPLAY_LINE
{
	CHANNEL = "modified_syndr_polyn_0[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 942;
	TREE_LEVEL = 1;
	PARENT = 937;
}

DISPLAY_LINE
{
	CHANNEL = "modified_syndr_polyn_0[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 943;
	TREE_LEVEL = 1;
	PARENT = 937;
}

DISPLAY_LINE
{
	CHANNEL = "modified_syndr_polyn_0[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 944;
	TREE_LEVEL = 1;
	PARENT = 937;
}

DISPLAY_LINE
{
	CHANNEL = "modified_syndr_polyn_0[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 945;
	TREE_LEVEL = 1;
	PARENT = 937;
}

DISPLAY_LINE
{
	CHANNEL = "modified_syndr_polyn_0[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 946;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "modified_syndr_polyn_0[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 947;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "modified_syndr_polyn_0[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 948;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "modified_syndr_polyn_0[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 949;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "modified_syndr_polyn_0[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 950;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "modified_syndr_polyn_0[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 951;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "modified_syndr_polyn_0[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 952;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "modified_syndr_polyn_0[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 953;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "modified_syndr_polyn_1";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 954;
	TREE_LEVEL = 0;
	CHILDREN = 955, 956, 957, 958, 959, 960, 961, 962;
}

DISPLAY_LINE
{
	CHANNEL = "modified_syndr_polyn_1[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 955;
	TREE_LEVEL = 1;
	PARENT = 954;
}

DISPLAY_LINE
{
	CHANNEL = "modified_syndr_polyn_1[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 956;
	TREE_LEVEL = 1;
	PARENT = 954;
}

DISPLAY_LINE
{
	CHANNEL = "modified_syndr_polyn_1[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 957;
	TREE_LEVEL = 1;
	PARENT = 954;
}

DISPLAY_LINE
{
	CHANNEL = "modified_syndr_polyn_1[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 958;
	TREE_LEVEL = 1;
	PARENT = 954;
}

DISPLAY_LINE
{
	CHANNEL = "modified_syndr_polyn_1[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 959;
	TREE_LEVEL = 1;
	PARENT = 954;
}

DISPLAY_LINE
{
	CHANNEL = "modified_syndr_polyn_1[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 960;
	TREE_LEVEL = 1;
	PARENT = 954;
}

DISPLAY_LINE
{
	CHANNEL = "modified_syndr_polyn_1[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 961;
	TREE_LEVEL = 1;
	PARENT = 954;
}

DISPLAY_LINE
{
	CHANNEL = "modified_syndr_polyn_1[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 962;
	TREE_LEVEL = 1;
	PARENT = 954;
}

DISPLAY_LINE
{
	CHANNEL = "modified_syndr_polyn_1[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 963;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "modified_syndr_polyn_1[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 964;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "modified_syndr_polyn_1[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 965;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "modified_syndr_polyn_1[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 966;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "modified_syndr_polyn_1[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 967;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "modified_syndr_polyn_1[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 968;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "modified_syndr_polyn_1[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 969;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "modified_syndr_polyn_1[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 970;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "modified_syndr_polyn_2";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 971;
	TREE_LEVEL = 0;
	CHILDREN = 972, 973, 974, 975, 976, 977, 978, 979;
}

DISPLAY_LINE
{
	CHANNEL = "modified_syndr_polyn_2[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 972;
	TREE_LEVEL = 1;
	PARENT = 971;
}

DISPLAY_LINE
{
	CHANNEL = "modified_syndr_polyn_2[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 973;
	TREE_LEVEL = 1;
	PARENT = 971;
}

DISPLAY_LINE
{
	CHANNEL = "modified_syndr_polyn_2[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 974;
	TREE_LEVEL = 1;
	PARENT = 971;
}

DISPLAY_LINE
{
	CHANNEL = "modified_syndr_polyn_2[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 975;
	TREE_LEVEL = 1;
	PARENT = 971;
}

DISPLAY_LINE
{
	CHANNEL = "modified_syndr_polyn_2[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 976;
	TREE_LEVEL = 1;
	PARENT = 971;
}

DISPLAY_LINE
{
	CHANNEL = "modified_syndr_polyn_2[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 977;
	TREE_LEVEL = 1;
	PARENT = 971;
}

DISPLAY_LINE
{
	CHANNEL = "modified_syndr_polyn_2[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 978;
	TREE_LEVEL = 1;
	PARENT = 971;
}

DISPLAY_LINE
{
	CHANNEL = "modified_syndr_polyn_2[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 979;
	TREE_LEVEL = 1;
	PARENT = 971;
}

DISPLAY_LINE
{
	CHANNEL = "modified_syndr_polyn_2[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 980;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "modified_syndr_polyn_2[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 981;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "modified_syndr_polyn_2[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 982;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "modified_syndr_polyn_2[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 983;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "modified_syndr_polyn_2[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 984;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "modified_syndr_polyn_2[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 985;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "modified_syndr_polyn_2[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 986;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "modified_syndr_polyn_2[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 987;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "new_channel_char";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 988;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "new_data";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 989;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "no_of_erasure_coefs_0";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 990;
	TREE_LEVEL = 0;
	CHILDREN = 991, 992, 993, 994, 995, 996;
}

DISPLAY_LINE
{
	CHANNEL = "no_of_erasure_coefs_0[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 991;
	TREE_LEVEL = 1;
	PARENT = 990;
}

DISPLAY_LINE
{
	CHANNEL = "no_of_erasure_coefs_0[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 992;
	TREE_LEVEL = 1;
	PARENT = 990;
}

DISPLAY_LINE
{
	CHANNEL = "no_of_erasure_coefs_0[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 993;
	TREE_LEVEL = 1;
	PARENT = 990;
}

DISPLAY_LINE
{
	CHANNEL = "no_of_erasure_coefs_0[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 994;
	TREE_LEVEL = 1;
	PARENT = 990;
}

DISPLAY_LINE
{
	CHANNEL = "no_of_erasure_coefs_0[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 995;
	TREE_LEVEL = 1;
	PARENT = 990;
}

DISPLAY_LINE
{
	CHANNEL = "no_of_erasure_coefs_0[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 996;
	TREE_LEVEL = 1;
	PARENT = 990;
}

DISPLAY_LINE
{
	CHANNEL = "no_of_erasure_coefs_0[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 997;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "no_of_erasure_coefs_0[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 998;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "no_of_erasure_coefs_0[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 999;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "no_of_erasure_coefs_0[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1000;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "no_of_erasure_coefs_0[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1001;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "no_of_erasure_coefs_0[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1002;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "no_of_erasure_coefs_1";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1003;
	TREE_LEVEL = 0;
	CHILDREN = 1004, 1005, 1006, 1007, 1008, 1009;
}

DISPLAY_LINE
{
	CHANNEL = "no_of_erasure_coefs_1[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1004;
	TREE_LEVEL = 1;
	PARENT = 1003;
}

DISPLAY_LINE
{
	CHANNEL = "no_of_erasure_coefs_1[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1005;
	TREE_LEVEL = 1;
	PARENT = 1003;
}

DISPLAY_LINE
{
	CHANNEL = "no_of_erasure_coefs_1[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1006;
	TREE_LEVEL = 1;
	PARENT = 1003;
}

DISPLAY_LINE
{
	CHANNEL = "no_of_erasure_coefs_1[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1007;
	TREE_LEVEL = 1;
	PARENT = 1003;
}

DISPLAY_LINE
{
	CHANNEL = "no_of_erasure_coefs_1[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1008;
	TREE_LEVEL = 1;
	PARENT = 1003;
}

DISPLAY_LINE
{
	CHANNEL = "no_of_erasure_coefs_1[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1009;
	TREE_LEVEL = 1;
	PARENT = 1003;
}

DISPLAY_LINE
{
	CHANNEL = "no_of_erasure_coefs_1[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1010;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "no_of_erasure_coefs_1[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1011;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "no_of_erasure_coefs_1[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1012;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "no_of_erasure_coefs_1[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1013;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "no_of_erasure_coefs_1[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1014;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "no_of_erasure_coefs_1[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1015;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "no_of_erasure_coefs_2";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1016;
	TREE_LEVEL = 0;
	CHILDREN = 1017, 1018, 1019, 1020, 1021, 1022;
}

DISPLAY_LINE
{
	CHANNEL = "no_of_erasure_coefs_2[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1017;
	TREE_LEVEL = 1;
	PARENT = 1016;
}

DISPLAY_LINE
{
	CHANNEL = "no_of_erasure_coefs_2[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1018;
	TREE_LEVEL = 1;
	PARENT = 1016;
}

DISPLAY_LINE
{
	CHANNEL = "no_of_erasure_coefs_2[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1019;
	TREE_LEVEL = 1;
	PARENT = 1016;
}

DISPLAY_LINE
{
	CHANNEL = "no_of_erasure_coefs_2[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1020;
	TREE_LEVEL = 1;
	PARENT = 1016;
}

DISPLAY_LINE
{
	CHANNEL = "no_of_erasure_coefs_2[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1021;
	TREE_LEVEL = 1;
	PARENT = 1016;
}

DISPLAY_LINE
{
	CHANNEL = "no_of_erasure_coefs_2[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1022;
	TREE_LEVEL = 1;
	PARENT = 1016;
}

DISPLAY_LINE
{
	CHANNEL = "no_of_erasure_coefs_2[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1023;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "no_of_erasure_coefs_2[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1024;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "no_of_erasure_coefs_2[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1025;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "no_of_erasure_coefs_2[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1026;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "no_of_erasure_coefs_2[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1027;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "no_of_erasure_coefs_2[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1028;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "no_of_parity";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1029;
	TREE_LEVEL = 0;
	CHILDREN = 1030, 1031, 1032, 1033, 1034, 1035;
}

DISPLAY_LINE
{
	CHANNEL = "no_of_parity[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1030;
	TREE_LEVEL = 1;
	PARENT = 1029;
}

DISPLAY_LINE
{
	CHANNEL = "no_of_parity[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1031;
	TREE_LEVEL = 1;
	PARENT = 1029;
}

DISPLAY_LINE
{
	CHANNEL = "no_of_parity[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1032;
	TREE_LEVEL = 1;
	PARENT = 1029;
}

DISPLAY_LINE
{
	CHANNEL = "no_of_parity[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1033;
	TREE_LEVEL = 1;
	PARENT = 1029;
}

DISPLAY_LINE
{
	CHANNEL = "no_of_parity[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1034;
	TREE_LEVEL = 1;
	PARENT = 1029;
}

DISPLAY_LINE
{
	CHANNEL = "no_of_parity[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1035;
	TREE_LEVEL = 1;
	PARENT = 1029;
}

DISPLAY_LINE
{
	CHANNEL = "no_of_parity[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1036;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "no_of_parity[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1037;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "no_of_parity[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1038;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "no_of_parity[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1039;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "no_of_parity[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1040;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "no_of_parity[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1041;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "norm_sigma_square";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1042;
	TREE_LEVEL = 0;
	CHILDREN = 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057;
}

DISPLAY_LINE
{
	CHANNEL = "norm_sigma_square[14]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1043;
	TREE_LEVEL = 1;
	PARENT = 1042;
}

DISPLAY_LINE
{
	CHANNEL = "norm_sigma_square[13]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1044;
	TREE_LEVEL = 1;
	PARENT = 1042;
}

DISPLAY_LINE
{
	CHANNEL = "norm_sigma_square[12]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1045;
	TREE_LEVEL = 1;
	PARENT = 1042;
}

DISPLAY_LINE
{
	CHANNEL = "norm_sigma_square[11]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1046;
	TREE_LEVEL = 1;
	PARENT = 1042;
}

DISPLAY_LINE
{
	CHANNEL = "norm_sigma_square[10]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1047;
	TREE_LEVEL = 1;
	PARENT = 1042;
}

DISPLAY_LINE
{
	CHANNEL = "norm_sigma_square[9]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1048;
	TREE_LEVEL = 1;
	PARENT = 1042;
}

DISPLAY_LINE
{
	CHANNEL = "norm_sigma_square[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1049;
	TREE_LEVEL = 1;
	PARENT = 1042;
}

DISPLAY_LINE
{
	CHANNEL = "norm_sigma_square[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1050;
	TREE_LEVEL = 1;
	PARENT = 1042;
}

DISPLAY_LINE
{
	CHANNEL = "norm_sigma_square[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1051;
	TREE_LEVEL = 1;
	PARENT = 1042;
}

DISPLAY_LINE
{
	CHANNEL = "norm_sigma_square[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1052;
	TREE_LEVEL = 1;
	PARENT = 1042;
}

DISPLAY_LINE
{
	CHANNEL = "norm_sigma_square[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1053;
	TREE_LEVEL = 1;
	PARENT = 1042;
}

DISPLAY_LINE
{
	CHANNEL = "norm_sigma_square[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1054;
	TREE_LEVEL = 1;
	PARENT = 1042;
}

DISPLAY_LINE
{
	CHANNEL = "norm_sigma_square[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1055;
	TREE_LEVEL = 1;
	PARENT = 1042;
}

DISPLAY_LINE
{
	CHANNEL = "norm_sigma_square[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1056;
	TREE_LEVEL = 1;
	PARENT = 1042;
}

DISPLAY_LINE
{
	CHANNEL = "norm_sigma_square[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1057;
	TREE_LEVEL = 1;
	PARENT = 1042;
}

DISPLAY_LINE
{
	CHANNEL = "norm_sigma_square[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1058;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "norm_sigma_square[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1059;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "norm_sigma_square[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1060;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "norm_sigma_square[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1061;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "norm_sigma_square[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1062;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "norm_sigma_square[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1063;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "norm_sigma_square[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1064;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "norm_sigma_square[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1065;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "norm_sigma_square[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1066;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "norm_sigma_square[9]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1067;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "norm_sigma_square[10]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1068;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "norm_sigma_square[11]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1069;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "norm_sigma_square[12]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1070;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "norm_sigma_square[13]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1071;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "norm_sigma_square[14]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1072;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "normalized_signal";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1073;
	TREE_LEVEL = 0;
	CHILDREN = 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088;
}

DISPLAY_LINE
{
	CHANNEL = "normalized_signal[14]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1074;
	TREE_LEVEL = 1;
	PARENT = 1073;
}

DISPLAY_LINE
{
	CHANNEL = "normalized_signal[13]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1075;
	TREE_LEVEL = 1;
	PARENT = 1073;
}

DISPLAY_LINE
{
	CHANNEL = "normalized_signal[12]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1076;
	TREE_LEVEL = 1;
	PARENT = 1073;
}

DISPLAY_LINE
{
	CHANNEL = "normalized_signal[11]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1077;
	TREE_LEVEL = 1;
	PARENT = 1073;
}

DISPLAY_LINE
{
	CHANNEL = "normalized_signal[10]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1078;
	TREE_LEVEL = 1;
	PARENT = 1073;
}

DISPLAY_LINE
{
	CHANNEL = "normalized_signal[9]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1079;
	TREE_LEVEL = 1;
	PARENT = 1073;
}

DISPLAY_LINE
{
	CHANNEL = "normalized_signal[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1080;
	TREE_LEVEL = 1;
	PARENT = 1073;
}

DISPLAY_LINE
{
	CHANNEL = "normalized_signal[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1081;
	TREE_LEVEL = 1;
	PARENT = 1073;
}

DISPLAY_LINE
{
	CHANNEL = "normalized_signal[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1082;
	TREE_LEVEL = 1;
	PARENT = 1073;
}

DISPLAY_LINE
{
	CHANNEL = "normalized_signal[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1083;
	TREE_LEVEL = 1;
	PARENT = 1073;
}

DISPLAY_LINE
{
	CHANNEL = "normalized_signal[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1084;
	TREE_LEVEL = 1;
	PARENT = 1073;
}

DISPLAY_LINE
{
	CHANNEL = "normalized_signal[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1085;
	TREE_LEVEL = 1;
	PARENT = 1073;
}

DISPLAY_LINE
{
	CHANNEL = "normalized_signal[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1086;
	TREE_LEVEL = 1;
	PARENT = 1073;
}

DISPLAY_LINE
{
	CHANNEL = "normalized_signal[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1087;
	TREE_LEVEL = 1;
	PARENT = 1073;
}

DISPLAY_LINE
{
	CHANNEL = "normalized_signal[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1088;
	TREE_LEVEL = 1;
	PARENT = 1073;
}

DISPLAY_LINE
{
	CHANNEL = "normalized_signal[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1089;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "normalized_signal[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1090;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "normalized_signal[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1091;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "normalized_signal[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1092;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "normalized_signal[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1093;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "normalized_signal[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1094;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "normalized_signal[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1095;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "normalized_signal[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1096;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "normalized_signal[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1097;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "normalized_signal[9]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1098;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "normalized_signal[10]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1099;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "normalized_signal[11]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1100;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "normalized_signal[12]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1101;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "normalized_signal[13]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1102;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "normalized_signal[14]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1103;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "number_of_erasures_0";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1104;
	TREE_LEVEL = 0;
	CHILDREN = 1105, 1106, 1107, 1108, 1109, 1110;
}

DISPLAY_LINE
{
	CHANNEL = "number_of_erasures_0[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1105;
	TREE_LEVEL = 1;
	PARENT = 1104;
}

DISPLAY_LINE
{
	CHANNEL = "number_of_erasures_0[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1106;
	TREE_LEVEL = 1;
	PARENT = 1104;
}

DISPLAY_LINE
{
	CHANNEL = "number_of_erasures_0[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1107;
	TREE_LEVEL = 1;
	PARENT = 1104;
}

DISPLAY_LINE
{
	CHANNEL = "number_of_erasures_0[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1108;
	TREE_LEVEL = 1;
	PARENT = 1104;
}

DISPLAY_LINE
{
	CHANNEL = "number_of_erasures_0[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1109;
	TREE_LEVEL = 1;
	PARENT = 1104;
}

DISPLAY_LINE
{
	CHANNEL = "number_of_erasures_0[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1110;
	TREE_LEVEL = 1;
	PARENT = 1104;
}

DISPLAY_LINE
{
	CHANNEL = "number_of_erasures_0[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1111;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "number_of_erasures_0[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1112;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "number_of_erasures_0[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1113;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "number_of_erasures_0[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1114;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "number_of_erasures_0[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1115;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "number_of_erasures_0[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1116;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "number_of_erasures_1";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1117;
	TREE_LEVEL = 0;
	CHILDREN = 1118, 1119, 1120, 1121, 1122, 1123;
}

DISPLAY_LINE
{
	CHANNEL = "number_of_erasures_1[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1118;
	TREE_LEVEL = 1;
	PARENT = 1117;
}

DISPLAY_LINE
{
	CHANNEL = "number_of_erasures_1[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1119;
	TREE_LEVEL = 1;
	PARENT = 1117;
}

DISPLAY_LINE
{
	CHANNEL = "number_of_erasures_1[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1120;
	TREE_LEVEL = 1;
	PARENT = 1117;
}

DISPLAY_LINE
{
	CHANNEL = "number_of_erasures_1[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1121;
	TREE_LEVEL = 1;
	PARENT = 1117;
}

DISPLAY_LINE
{
	CHANNEL = "number_of_erasures_1[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1122;
	TREE_LEVEL = 1;
	PARENT = 1117;
}

DISPLAY_LINE
{
	CHANNEL = "number_of_erasures_1[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1123;
	TREE_LEVEL = 1;
	PARENT = 1117;
}

DISPLAY_LINE
{
	CHANNEL = "number_of_erasures_1[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1124;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "number_of_erasures_1[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1125;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "number_of_erasures_1[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1126;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "number_of_erasures_1[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1127;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "number_of_erasures_1[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1128;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "number_of_erasures_1[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1129;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "number_of_erasures_2";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1130;
	TREE_LEVEL = 0;
	CHILDREN = 1131, 1132, 1133, 1134, 1135, 1136;
}

DISPLAY_LINE
{
	CHANNEL = "number_of_erasures_2[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1131;
	TREE_LEVEL = 1;
	PARENT = 1130;
}

DISPLAY_LINE
{
	CHANNEL = "number_of_erasures_2[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1132;
	TREE_LEVEL = 1;
	PARENT = 1130;
}

DISPLAY_LINE
{
	CHANNEL = "number_of_erasures_2[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1133;
	TREE_LEVEL = 1;
	PARENT = 1130;
}

DISPLAY_LINE
{
	CHANNEL = "number_of_erasures_2[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1134;
	TREE_LEVEL = 1;
	PARENT = 1130;
}

DISPLAY_LINE
{
	CHANNEL = "number_of_erasures_2[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1135;
	TREE_LEVEL = 1;
	PARENT = 1130;
}

DISPLAY_LINE
{
	CHANNEL = "number_of_erasures_2[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1136;
	TREE_LEVEL = 1;
	PARENT = 1130;
}

DISPLAY_LINE
{
	CHANNEL = "number_of_erasures_2[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1137;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "number_of_erasures_2[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1138;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "number_of_erasures_2[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1139;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "number_of_erasures_2[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1140;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "number_of_erasures_2[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1141;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "number_of_erasures_2[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1142;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "q";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1143;
	TREE_LEVEL = 0;
	CHILDREN = 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151;
}

DISPLAY_LINE
{
	CHANNEL = "q[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1144;
	TREE_LEVEL = 1;
	PARENT = 1143;
}

DISPLAY_LINE
{
	CHANNEL = "q[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1145;
	TREE_LEVEL = 1;
	PARENT = 1143;
}

DISPLAY_LINE
{
	CHANNEL = "q[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1146;
	TREE_LEVEL = 1;
	PARENT = 1143;
}

DISPLAY_LINE
{
	CHANNEL = "q[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1147;
	TREE_LEVEL = 1;
	PARENT = 1143;
}

DISPLAY_LINE
{
	CHANNEL = "q[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1148;
	TREE_LEVEL = 1;
	PARENT = 1143;
}

DISPLAY_LINE
{
	CHANNEL = "q[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1149;
	TREE_LEVEL = 1;
	PARENT = 1143;
}

DISPLAY_LINE
{
	CHANNEL = "q[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1150;
	TREE_LEVEL = 1;
	PARENT = 1143;
}

DISPLAY_LINE
{
	CHANNEL = "q[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1151;
	TREE_LEVEL = 1;
	PARENT = 1143;
}

DISPLAY_LINE
{
	CHANNEL = "q[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1152;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "q[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1153;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "q[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1154;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "q[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1155;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "q[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1156;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "q[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1157;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "q[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1158;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "q[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1159;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "q_fade";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1160;
	TREE_LEVEL = 0;
	CHILDREN = 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170;
}

DISPLAY_LINE
{
	CHANNEL = "q_fade[9]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1161;
	TREE_LEVEL = 1;
	PARENT = 1160;
}

DISPLAY_LINE
{
	CHANNEL = "q_fade[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1162;
	TREE_LEVEL = 1;
	PARENT = 1160;
}

DISPLAY_LINE
{
	CHANNEL = "q_fade[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1163;
	TREE_LEVEL = 1;
	PARENT = 1160;
}

DISPLAY_LINE
{
	CHANNEL = "q_fade[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1164;
	TREE_LEVEL = 1;
	PARENT = 1160;
}

DISPLAY_LINE
{
	CHANNEL = "q_fade[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1165;
	TREE_LEVEL = 1;
	PARENT = 1160;
}

DISPLAY_LINE
{
	CHANNEL = "q_fade[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1166;
	TREE_LEVEL = 1;
	PARENT = 1160;
}

DISPLAY_LINE
{
	CHANNEL = "q_fade[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1167;
	TREE_LEVEL = 1;
	PARENT = 1160;
}

DISPLAY_LINE
{
	CHANNEL = "q_fade[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1168;
	TREE_LEVEL = 1;
	PARENT = 1160;
}

DISPLAY_LINE
{
	CHANNEL = "q_fade[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1169;
	TREE_LEVEL = 1;
	PARENT = 1160;
}

DISPLAY_LINE
{
	CHANNEL = "q_fade[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1170;
	TREE_LEVEL = 1;
	PARENT = 1160;
}

DISPLAY_LINE
{
	CHANNEL = "q_fade[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1171;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "q_fade[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1172;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "q_fade[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1173;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "q_fade[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1174;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "q_fade[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1175;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "q_fade[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1176;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "q_fade[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1177;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "q_fade[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1178;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "q_fade[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1179;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "q_fade[9]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1180;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "q_in";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1181;
	TREE_LEVEL = 0;
	CHILDREN = 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191;
}

DISPLAY_LINE
{
	CHANNEL = "q_in[9]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1182;
	TREE_LEVEL = 1;
	PARENT = 1181;
}

DISPLAY_LINE
{
	CHANNEL = "q_in[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1183;
	TREE_LEVEL = 1;
	PARENT = 1181;
}

DISPLAY_LINE
{
	CHANNEL = "q_in[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1184;
	TREE_LEVEL = 1;
	PARENT = 1181;
}

DISPLAY_LINE
{
	CHANNEL = "q_in[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1185;
	TREE_LEVEL = 1;
	PARENT = 1181;
}

DISPLAY_LINE
{
	CHANNEL = "q_in[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1186;
	TREE_LEVEL = 1;
	PARENT = 1181;
}

DISPLAY_LINE
{
	CHANNEL = "q_in[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1187;
	TREE_LEVEL = 1;
	PARENT = 1181;
}

DISPLAY_LINE
{
	CHANNEL = "q_in[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1188;
	TREE_LEVEL = 1;
	PARENT = 1181;
}

DISPLAY_LINE
{
	CHANNEL = "q_in[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1189;
	TREE_LEVEL = 1;
	PARENT = 1181;
}

DISPLAY_LINE
{
	CHANNEL = "q_in[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1190;
	TREE_LEVEL = 1;
	PARENT = 1181;
}

DISPLAY_LINE
{
	CHANNEL = "q_in[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1191;
	TREE_LEVEL = 1;
	PARENT = 1181;
}

DISPLAY_LINE
{
	CHANNEL = "q_in[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1192;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "q_in[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1193;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "q_in[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1194;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "q_in[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1195;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "q_in[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1196;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "q_in[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1197;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "q_in[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1198;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "q_in[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1199;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "q_in[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1200;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "q_in[9]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1201;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "quotient";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1202;
	TREE_LEVEL = 0;
	CHILDREN = 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217;
}

DISPLAY_LINE
{
	CHANNEL = "quotient[14]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1203;
	TREE_LEVEL = 1;
	PARENT = 1202;
}

DISPLAY_LINE
{
	CHANNEL = "quotient[13]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1204;
	TREE_LEVEL = 1;
	PARENT = 1202;
}

DISPLAY_LINE
{
	CHANNEL = "quotient[12]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1205;
	TREE_LEVEL = 1;
	PARENT = 1202;
}

DISPLAY_LINE
{
	CHANNEL = "quotient[11]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1206;
	TREE_LEVEL = 1;
	PARENT = 1202;
}

DISPLAY_LINE
{
	CHANNEL = "quotient[10]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1207;
	TREE_LEVEL = 1;
	PARENT = 1202;
}

DISPLAY_LINE
{
	CHANNEL = "quotient[9]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1208;
	TREE_LEVEL = 1;
	PARENT = 1202;
}

DISPLAY_LINE
{
	CHANNEL = "quotient[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1209;
	TREE_LEVEL = 1;
	PARENT = 1202;
}

DISPLAY_LINE
{
	CHANNEL = "quotient[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1210;
	TREE_LEVEL = 1;
	PARENT = 1202;
}

DISPLAY_LINE
{
	CHANNEL = "quotient[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1211;
	TREE_LEVEL = 1;
	PARENT = 1202;
}

DISPLAY_LINE
{
	CHANNEL = "quotient[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1212;
	TREE_LEVEL = 1;
	PARENT = 1202;
}

DISPLAY_LINE
{
	CHANNEL = "quotient[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1213;
	TREE_LEVEL = 1;
	PARENT = 1202;
}

DISPLAY_LINE
{
	CHANNEL = "quotient[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1214;
	TREE_LEVEL = 1;
	PARENT = 1202;
}

DISPLAY_LINE
{
	CHANNEL = "quotient[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1215;
	TREE_LEVEL = 1;
	PARENT = 1202;
}

DISPLAY_LINE
{
	CHANNEL = "quotient[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1216;
	TREE_LEVEL = 1;
	PARENT = 1202;
}

DISPLAY_LINE
{
	CHANNEL = "quotient[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1217;
	TREE_LEVEL = 1;
	PARENT = 1202;
}

DISPLAY_LINE
{
	CHANNEL = "quotient[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1218;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "quotient[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1219;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "quotient[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1220;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "quotient[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1221;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "quotient[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1222;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "quotient[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1223;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "quotient[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1224;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "quotient[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1225;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "quotient[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1226;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "quotient[9]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1227;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "quotient[10]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1228;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "quotient[11]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1229;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "quotient[12]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1230;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "quotient[13]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1231;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "quotient[14]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1232;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "rd_enable";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1233;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "rdaddress";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1234;
	TREE_LEVEL = 0;
	CHILDREN = 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242;
}

DISPLAY_LINE
{
	CHANNEL = "rdaddress[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1235;
	TREE_LEVEL = 1;
	PARENT = 1234;
}

DISPLAY_LINE
{
	CHANNEL = "rdaddress[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1236;
	TREE_LEVEL = 1;
	PARENT = 1234;
}

DISPLAY_LINE
{
	CHANNEL = "rdaddress[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1237;
	TREE_LEVEL = 1;
	PARENT = 1234;
}

DISPLAY_LINE
{
	CHANNEL = "rdaddress[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1238;
	TREE_LEVEL = 1;
	PARENT = 1234;
}

DISPLAY_LINE
{
	CHANNEL = "rdaddress[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1239;
	TREE_LEVEL = 1;
	PARENT = 1234;
}

DISPLAY_LINE
{
	CHANNEL = "rdaddress[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1240;
	TREE_LEVEL = 1;
	PARENT = 1234;
}

DISPLAY_LINE
{
	CHANNEL = "rdaddress[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1241;
	TREE_LEVEL = 1;
	PARENT = 1234;
}

DISPLAY_LINE
{
	CHANNEL = "rdaddress[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1242;
	TREE_LEVEL = 1;
	PARENT = 1234;
}

DISPLAY_LINE
{
	CHANNEL = "rdaddress[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1243;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "rdaddress[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1244;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "rdaddress[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1245;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "rdaddress[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1246;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "rdaddress[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1247;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "rdaddress[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1248;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "rdaddress[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1249;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "rdaddress[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1250;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "rdaddress_fade";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1251;
	TREE_LEVEL = 0;
	CHILDREN = 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259;
}

DISPLAY_LINE
{
	CHANNEL = "rdaddress_fade[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1252;
	TREE_LEVEL = 1;
	PARENT = 1251;
}

DISPLAY_LINE
{
	CHANNEL = "rdaddress_fade[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1253;
	TREE_LEVEL = 1;
	PARENT = 1251;
}

DISPLAY_LINE
{
	CHANNEL = "rdaddress_fade[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1254;
	TREE_LEVEL = 1;
	PARENT = 1251;
}

DISPLAY_LINE
{
	CHANNEL = "rdaddress_fade[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1255;
	TREE_LEVEL = 1;
	PARENT = 1251;
}

DISPLAY_LINE
{
	CHANNEL = "rdaddress_fade[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1256;
	TREE_LEVEL = 1;
	PARENT = 1251;
}

DISPLAY_LINE
{
	CHANNEL = "rdaddress_fade[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1257;
	TREE_LEVEL = 1;
	PARENT = 1251;
}

DISPLAY_LINE
{
	CHANNEL = "rdaddress_fade[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1258;
	TREE_LEVEL = 1;
	PARENT = 1251;
}

DISPLAY_LINE
{
	CHANNEL = "rdaddress_fade[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1259;
	TREE_LEVEL = 1;
	PARENT = 1251;
}

DISPLAY_LINE
{
	CHANNEL = "rdaddress_fade[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1260;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "rdaddress_fade[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1261;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "rdaddress_fade[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1262;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "rdaddress_fade[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1263;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "rdaddress_fade[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1264;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "rdaddress_fade[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1265;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "rdaddress_fade[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1266;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "rdaddress_fade[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1267;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "rdaddress_in";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1268;
	TREE_LEVEL = 0;
	CHILDREN = 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279;
}

DISPLAY_LINE
{
	CHANNEL = "rdaddress_in[10]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1269;
	TREE_LEVEL = 1;
	PARENT = 1268;
}

DISPLAY_LINE
{
	CHANNEL = "rdaddress_in[9]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1270;
	TREE_LEVEL = 1;
	PARENT = 1268;
}

DISPLAY_LINE
{
	CHANNEL = "rdaddress_in[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1271;
	TREE_LEVEL = 1;
	PARENT = 1268;
}

DISPLAY_LINE
{
	CHANNEL = "rdaddress_in[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1272;
	TREE_LEVEL = 1;
	PARENT = 1268;
}

DISPLAY_LINE
{
	CHANNEL = "rdaddress_in[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1273;
	TREE_LEVEL = 1;
	PARENT = 1268;
}

DISPLAY_LINE
{
	CHANNEL = "rdaddress_in[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1274;
	TREE_LEVEL = 1;
	PARENT = 1268;
}

DISPLAY_LINE
{
	CHANNEL = "rdaddress_in[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1275;
	TREE_LEVEL = 1;
	PARENT = 1268;
}

DISPLAY_LINE
{
	CHANNEL = "rdaddress_in[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1276;
	TREE_LEVEL = 1;
	PARENT = 1268;
}

DISPLAY_LINE
{
	CHANNEL = "rdaddress_in[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1277;
	TREE_LEVEL = 1;
	PARENT = 1268;
}

DISPLAY_LINE
{
	CHANNEL = "rdaddress_in[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1278;
	TREE_LEVEL = 1;
	PARENT = 1268;
}

DISPLAY_LINE
{
	CHANNEL = "rdaddress_in[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1279;
	TREE_LEVEL = 1;
	PARENT = 1268;
}

DISPLAY_LINE
{
	CHANNEL = "rdaddress_in[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1280;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "rdaddress_in[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1281;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "rdaddress_in[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1282;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "rdaddress_in[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1283;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "rdaddress_in[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1284;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "rdaddress_in[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1285;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "rdaddress_in[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1286;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "rdaddress_in[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1287;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "rdaddress_in[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1288;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "rdaddress_in[9]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1289;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "rdaddress_in[10]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1290;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "recieved_codeword";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1291;
	TREE_LEVEL = 0;
	CHILDREN = 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299;
}

DISPLAY_LINE
{
	CHANNEL = "recieved_codeword[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1292;
	TREE_LEVEL = 1;
	PARENT = 1291;
}

DISPLAY_LINE
{
	CHANNEL = "recieved_codeword[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1293;
	TREE_LEVEL = 1;
	PARENT = 1291;
}

DISPLAY_LINE
{
	CHANNEL = "recieved_codeword[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1294;
	TREE_LEVEL = 1;
	PARENT = 1291;
}

DISPLAY_LINE
{
	CHANNEL = "recieved_codeword[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1295;
	TREE_LEVEL = 1;
	PARENT = 1291;
}

DISPLAY_LINE
{
	CHANNEL = "recieved_codeword[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1296;
	TREE_LEVEL = 1;
	PARENT = 1291;
}

DISPLAY_LINE
{
	CHANNEL = "recieved_codeword[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1297;
	TREE_LEVEL = 1;
	PARENT = 1291;
}

DISPLAY_LINE
{
	CHANNEL = "recieved_codeword[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1298;
	TREE_LEVEL = 1;
	PARENT = 1291;
}

DISPLAY_LINE
{
	CHANNEL = "recieved_codeword[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1299;
	TREE_LEVEL = 1;
	PARENT = 1291;
}

DISPLAY_LINE
{
	CHANNEL = "recieved_codeword[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1300;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "recieved_codeword[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1301;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "recieved_codeword[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1302;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "recieved_codeword[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1303;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "recieved_codeword[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1304;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "recieved_codeword[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1305;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "recieved_codeword[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1306;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "recieved_codeword[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1307;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "recvd_codeword";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1308;
	TREE_LEVEL = 0;
	CHILDREN = 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316;
}

DISPLAY_LINE
{
	CHANNEL = "recvd_codeword[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1309;
	TREE_LEVEL = 1;
	PARENT = 1308;
}

DISPLAY_LINE
{
	CHANNEL = "recvd_codeword[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1310;
	TREE_LEVEL = 1;
	PARENT = 1308;
}

DISPLAY_LINE
{
	CHANNEL = "recvd_codeword[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1311;
	TREE_LEVEL = 1;
	PARENT = 1308;
}

DISPLAY_LINE
{
	CHANNEL = "recvd_codeword[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1312;
	TREE_LEVEL = 1;
	PARENT = 1308;
}

DISPLAY_LINE
{
	CHANNEL = "recvd_codeword[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1313;
	TREE_LEVEL = 1;
	PARENT = 1308;
}

DISPLAY_LINE
{
	CHANNEL = "recvd_codeword[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1314;
	TREE_LEVEL = 1;
	PARENT = 1308;
}

DISPLAY_LINE
{
	CHANNEL = "recvd_codeword[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1315;
	TREE_LEVEL = 1;
	PARENT = 1308;
}

DISPLAY_LINE
{
	CHANNEL = "recvd_codeword[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1316;
	TREE_LEVEL = 1;
	PARENT = 1308;
}

DISPLAY_LINE
{
	CHANNEL = "recvd_codeword[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1317;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "recvd_codeword[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1318;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "recvd_codeword[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1319;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "recvd_codeword[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1320;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "recvd_codeword[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1321;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "recvd_codeword[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1322;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "recvd_codeword[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1323;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "recvd_codeword[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1324;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "recvd_erasure_flag_0";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1325;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "recvd_erasure_flag_1";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1326;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "recvd_erasure_flag_2";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1327;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "send_data";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1328;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "send_erasure_polyn_0";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1329;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "send_erasure_polyn_1";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1330;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "send_erasure_polyn_2";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1331;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "send_syndr_polyn_0";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1332;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "send_syndr_polyn_1";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1333;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "send_syndr_polyn_2";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1334;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "send_unmodified_syndr_polyn_0";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1335;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "send_unmodified_syndr_polyn_1";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1336;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "send_unmodified_syndr_polyn_2";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1337;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "sigma_square";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1338;
	TREE_LEVEL = 0;
	CHILDREN = 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348;
}

DISPLAY_LINE
{
	CHANNEL = "sigma_square[9]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1339;
	TREE_LEVEL = 1;
	PARENT = 1338;
}

DISPLAY_LINE
{
	CHANNEL = "sigma_square[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1340;
	TREE_LEVEL = 1;
	PARENT = 1338;
}

DISPLAY_LINE
{
	CHANNEL = "sigma_square[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1341;
	TREE_LEVEL = 1;
	PARENT = 1338;
}

DISPLAY_LINE
{
	CHANNEL = "sigma_square[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1342;
	TREE_LEVEL = 1;
	PARENT = 1338;
}

DISPLAY_LINE
{
	CHANNEL = "sigma_square[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1343;
	TREE_LEVEL = 1;
	PARENT = 1338;
}

DISPLAY_LINE
{
	CHANNEL = "sigma_square[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1344;
	TREE_LEVEL = 1;
	PARENT = 1338;
}

DISPLAY_LINE
{
	CHANNEL = "sigma_square[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1345;
	TREE_LEVEL = 1;
	PARENT = 1338;
}

DISPLAY_LINE
{
	CHANNEL = "sigma_square[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1346;
	TREE_LEVEL = 1;
	PARENT = 1338;
}

DISPLAY_LINE
{
	CHANNEL = "sigma_square[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1347;
	TREE_LEVEL = 1;
	PARENT = 1338;
}

DISPLAY_LINE
{
	CHANNEL = "sigma_square[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1348;
	TREE_LEVEL = 1;
	PARENT = 1338;
}

DISPLAY_LINE
{
	CHANNEL = "sigma_square[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1349;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "sigma_square[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1350;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "sigma_square[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1351;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "sigma_square[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1352;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "sigma_square[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1353;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "sigma_square[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1354;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "sigma_square[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1355;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "sigma_square[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1356;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "sigma_square[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1357;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "sigma_square[9]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1358;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "signal_count";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1359;
	TREE_LEVEL = 0;
	CHILDREN = 1360, 1361, 1362, 1363;
}

DISPLAY_LINE
{
	CHANNEL = "signal_count[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1360;
	TREE_LEVEL = 1;
	PARENT = 1359;
}

DISPLAY_LINE
{
	CHANNEL = "signal_count[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1361;
	TREE_LEVEL = 1;
	PARENT = 1359;
}

DISPLAY_LINE
{
	CHANNEL = "signal_count[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1362;
	TREE_LEVEL = 1;
	PARENT = 1359;
}

DISPLAY_LINE
{
	CHANNEL = "signal_count[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1363;
	TREE_LEVEL = 1;
	PARENT = 1359;
}

DISPLAY_LINE
{
	CHANNEL = "signal_count[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1364;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "signal_count[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1365;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "signal_count[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1366;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "signal_count[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1367;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "start_erasure_polyn_compute";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1368;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "start_modified_syndrome_polyn_compute";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1369;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "state_case_0";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1370;
	TREE_LEVEL = 0;
	CHILDREN = 1371, 1372, 1373;
}

DISPLAY_LINE
{
	CHANNEL = "state_case_0[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1371;
	TREE_LEVEL = 1;
	PARENT = 1370;
}

DISPLAY_LINE
{
	CHANNEL = "state_case_0[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1372;
	TREE_LEVEL = 1;
	PARENT = 1370;
}

DISPLAY_LINE
{
	CHANNEL = "state_case_0[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1373;
	TREE_LEVEL = 1;
	PARENT = 1370;
}

DISPLAY_LINE
{
	CHANNEL = "state_case_0[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1374;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "state_case_0[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1375;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "state_case_0[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1376;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "state_case_1";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1377;
	TREE_LEVEL = 0;
	CHILDREN = 1378, 1379, 1380;
}

DISPLAY_LINE
{
	CHANNEL = "state_case_1[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1378;
	TREE_LEVEL = 1;
	PARENT = 1377;
}

DISPLAY_LINE
{
	CHANNEL = "state_case_1[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1379;
	TREE_LEVEL = 1;
	PARENT = 1377;
}

DISPLAY_LINE
{
	CHANNEL = "state_case_1[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1380;
	TREE_LEVEL = 1;
	PARENT = 1377;
}

DISPLAY_LINE
{
	CHANNEL = "state_case_1[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1381;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "state_case_1[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1382;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "state_case_1[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1383;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "state_case_2";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1384;
	TREE_LEVEL = 0;
	CHILDREN = 1385, 1386, 1387;
}

DISPLAY_LINE
{
	CHANNEL = "state_case_2[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1385;
	TREE_LEVEL = 1;
	PARENT = 1384;
}

DISPLAY_LINE
{
	CHANNEL = "state_case_2[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1386;
	TREE_LEVEL = 1;
	PARENT = 1384;
}

DISPLAY_LINE
{
	CHANNEL = "state_case_2[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1387;
	TREE_LEVEL = 1;
	PARENT = 1384;
}

DISPLAY_LINE
{
	CHANNEL = "state_case_2[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1388;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "state_case_2[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1389;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "state_case_2[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1390;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "syndr_coef_ready_0";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1391;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "syndr_coef_ready_1";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1392;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "syndr_coef_ready_2";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1393;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "syndrome";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1394;
	TREE_LEVEL = 0;
	CHILDREN = 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402;
}

DISPLAY_LINE
{
	CHANNEL = "syndrome[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1395;
	TREE_LEVEL = 1;
	PARENT = 1394;
}

DISPLAY_LINE
{
	CHANNEL = "syndrome[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1396;
	TREE_LEVEL = 1;
	PARENT = 1394;
}

DISPLAY_LINE
{
	CHANNEL = "syndrome[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1397;
	TREE_LEVEL = 1;
	PARENT = 1394;
}

DISPLAY_LINE
{
	CHANNEL = "syndrome[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1398;
	TREE_LEVEL = 1;
	PARENT = 1394;
}

DISPLAY_LINE
{
	CHANNEL = "syndrome[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1399;
	TREE_LEVEL = 1;
	PARENT = 1394;
}

DISPLAY_LINE
{
	CHANNEL = "syndrome[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1400;
	TREE_LEVEL = 1;
	PARENT = 1394;
}

DISPLAY_LINE
{
	CHANNEL = "syndrome[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1401;
	TREE_LEVEL = 1;
	PARENT = 1394;
}

DISPLAY_LINE
{
	CHANNEL = "syndrome[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1402;
	TREE_LEVEL = 1;
	PARENT = 1394;
}

DISPLAY_LINE
{
	CHANNEL = "syndrome[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1403;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "syndrome[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1404;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "syndrome[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1405;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "syndrome[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1406;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "syndrome[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1407;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "syndrome[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1408;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "syndrome[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1409;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "syndrome[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1410;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "threshold_0";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1411;
	TREE_LEVEL = 0;
	CHILDREN = 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420;
}

DISPLAY_LINE
{
	CHANNEL = "threshold_0[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1412;
	TREE_LEVEL = 1;
	PARENT = 1411;
}

DISPLAY_LINE
{
	CHANNEL = "threshold_0[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1413;
	TREE_LEVEL = 1;
	PARENT = 1411;
}

DISPLAY_LINE
{
	CHANNEL = "threshold_0[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1414;
	TREE_LEVEL = 1;
	PARENT = 1411;
}

DISPLAY_LINE
{
	CHANNEL = "threshold_0[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1415;
	TREE_LEVEL = 1;
	PARENT = 1411;
}

DISPLAY_LINE
{
	CHANNEL = "threshold_0[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1416;
	TREE_LEVEL = 1;
	PARENT = 1411;
}

DISPLAY_LINE
{
	CHANNEL = "threshold_0[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1417;
	TREE_LEVEL = 1;
	PARENT = 1411;
}

DISPLAY_LINE
{
	CHANNEL = "threshold_0[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1418;
	TREE_LEVEL = 1;
	PARENT = 1411;
}

DISPLAY_LINE
{
	CHANNEL = "threshold_0[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1419;
	TREE_LEVEL = 1;
	PARENT = 1411;
}

DISPLAY_LINE
{
	CHANNEL = "threshold_0[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1420;
	TREE_LEVEL = 1;
	PARENT = 1411;
}

DISPLAY_LINE
{
	CHANNEL = "threshold_0[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1421;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "threshold_0[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1422;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "threshold_0[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1423;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "threshold_0[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1424;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "threshold_0[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1425;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "threshold_0[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1426;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "threshold_0[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1427;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "threshold_0[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1428;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "threshold_0[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1429;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "threshold_1";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1430;
	TREE_LEVEL = 0;
	CHILDREN = 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439;
}

DISPLAY_LINE
{
	CHANNEL = "threshold_1[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1431;
	TREE_LEVEL = 1;
	PARENT = 1430;
}

DISPLAY_LINE
{
	CHANNEL = "threshold_1[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1432;
	TREE_LEVEL = 1;
	PARENT = 1430;
}

DISPLAY_LINE
{
	CHANNEL = "threshold_1[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1433;
	TREE_LEVEL = 1;
	PARENT = 1430;
}

DISPLAY_LINE
{
	CHANNEL = "threshold_1[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1434;
	TREE_LEVEL = 1;
	PARENT = 1430;
}

DISPLAY_LINE
{
	CHANNEL = "threshold_1[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1435;
	TREE_LEVEL = 1;
	PARENT = 1430;
}

DISPLAY_LINE
{
	CHANNEL = "threshold_1[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1436;
	TREE_LEVEL = 1;
	PARENT = 1430;
}

DISPLAY_LINE
{
	CHANNEL = "threshold_1[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1437;
	TREE_LEVEL = 1;
	PARENT = 1430;
}

DISPLAY_LINE
{
	CHANNEL = "threshold_1[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1438;
	TREE_LEVEL = 1;
	PARENT = 1430;
}

DISPLAY_LINE
{
	CHANNEL = "threshold_1[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1439;
	TREE_LEVEL = 1;
	PARENT = 1430;
}

DISPLAY_LINE
{
	CHANNEL = "threshold_1[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1440;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "threshold_1[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1441;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "threshold_1[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1442;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "threshold_1[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1443;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "threshold_1[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1444;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "threshold_1[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1445;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "threshold_1[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1446;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "threshold_1[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1447;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "threshold_1[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1448;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "threshold_2";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1449;
	TREE_LEVEL = 0;
	CHILDREN = 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458;
}

DISPLAY_LINE
{
	CHANNEL = "threshold_2[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1450;
	TREE_LEVEL = 1;
	PARENT = 1449;
}

DISPLAY_LINE
{
	CHANNEL = "threshold_2[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1451;
	TREE_LEVEL = 1;
	PARENT = 1449;
}

DISPLAY_LINE
{
	CHANNEL = "threshold_2[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1452;
	TREE_LEVEL = 1;
	PARENT = 1449;
}

DISPLAY_LINE
{
	CHANNEL = "threshold_2[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1453;
	TREE_LEVEL = 1;
	PARENT = 1449;
}

DISPLAY_LINE
{
	CHANNEL = "threshold_2[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1454;
	TREE_LEVEL = 1;
	PARENT = 1449;
}

DISPLAY_LINE
{
	CHANNEL = "threshold_2[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1455;
	TREE_LEVEL = 1;
	PARENT = 1449;
}

DISPLAY_LINE
{
	CHANNEL = "threshold_2[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1456;
	TREE_LEVEL = 1;
	PARENT = 1449;
}

DISPLAY_LINE
{
	CHANNEL = "threshold_2[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1457;
	TREE_LEVEL = 1;
	PARENT = 1449;
}

DISPLAY_LINE
{
	CHANNEL = "threshold_2[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1458;
	TREE_LEVEL = 1;
	PARENT = 1449;
}

DISPLAY_LINE
{
	CHANNEL = "threshold_2[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1459;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "threshold_2[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1460;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "threshold_2[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1461;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "threshold_2[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1462;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "threshold_2[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1463;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "threshold_2[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1464;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "threshold_2[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1465;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "threshold_2[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1466;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "threshold_2[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1467;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "unmodified_syndr_polyn_0";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1468;
	TREE_LEVEL = 0;
	CHILDREN = 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476;
}

DISPLAY_LINE
{
	CHANNEL = "unmodified_syndr_polyn_0[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1469;
	TREE_LEVEL = 1;
	PARENT = 1468;
}

DISPLAY_LINE
{
	CHANNEL = "unmodified_syndr_polyn_0[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1470;
	TREE_LEVEL = 1;
	PARENT = 1468;
}

DISPLAY_LINE
{
	CHANNEL = "unmodified_syndr_polyn_0[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1471;
	TREE_LEVEL = 1;
	PARENT = 1468;
}

DISPLAY_LINE
{
	CHANNEL = "unmodified_syndr_polyn_0[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1472;
	TREE_LEVEL = 1;
	PARENT = 1468;
}

DISPLAY_LINE
{
	CHANNEL = "unmodified_syndr_polyn_0[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1473;
	TREE_LEVEL = 1;
	PARENT = 1468;
}

DISPLAY_LINE
{
	CHANNEL = "unmodified_syndr_polyn_0[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1474;
	TREE_LEVEL = 1;
	PARENT = 1468;
}

DISPLAY_LINE
{
	CHANNEL = "unmodified_syndr_polyn_0[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1475;
	TREE_LEVEL = 1;
	PARENT = 1468;
}

DISPLAY_LINE
{
	CHANNEL = "unmodified_syndr_polyn_0[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1476;
	TREE_LEVEL = 1;
	PARENT = 1468;
}

DISPLAY_LINE
{
	CHANNEL = "unmodified_syndr_polyn_0[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1477;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "unmodified_syndr_polyn_0[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1478;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "unmodified_syndr_polyn_0[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1479;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "unmodified_syndr_polyn_0[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1480;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "unmodified_syndr_polyn_0[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1481;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "unmodified_syndr_polyn_0[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1482;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "unmodified_syndr_polyn_0[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1483;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "unmodified_syndr_polyn_0[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1484;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "unmodified_syndr_polyn_1";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1485;
	TREE_LEVEL = 0;
	CHILDREN = 1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493;
}

DISPLAY_LINE
{
	CHANNEL = "unmodified_syndr_polyn_1[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1486;
	TREE_LEVEL = 1;
	PARENT = 1485;
}

DISPLAY_LINE
{
	CHANNEL = "unmodified_syndr_polyn_1[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1487;
	TREE_LEVEL = 1;
	PARENT = 1485;
}

DISPLAY_LINE
{
	CHANNEL = "unmodified_syndr_polyn_1[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1488;
	TREE_LEVEL = 1;
	PARENT = 1485;
}

DISPLAY_LINE
{
	CHANNEL = "unmodified_syndr_polyn_1[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1489;
	TREE_LEVEL = 1;
	PARENT = 1485;
}

DISPLAY_LINE
{
	CHANNEL = "unmodified_syndr_polyn_1[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1490;
	TREE_LEVEL = 1;
	PARENT = 1485;
}

DISPLAY_LINE
{
	CHANNEL = "unmodified_syndr_polyn_1[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1491;
	TREE_LEVEL = 1;
	PARENT = 1485;
}

DISPLAY_LINE
{
	CHANNEL = "unmodified_syndr_polyn_1[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1492;
	TREE_LEVEL = 1;
	PARENT = 1485;
}

DISPLAY_LINE
{
	CHANNEL = "unmodified_syndr_polyn_1[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1493;
	TREE_LEVEL = 1;
	PARENT = 1485;
}

DISPLAY_LINE
{
	CHANNEL = "unmodified_syndr_polyn_1[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1494;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "unmodified_syndr_polyn_1[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1495;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "unmodified_syndr_polyn_1[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1496;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "unmodified_syndr_polyn_1[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1497;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "unmodified_syndr_polyn_1[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1498;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "unmodified_syndr_polyn_1[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1499;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "unmodified_syndr_polyn_1[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1500;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "unmodified_syndr_polyn_1[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1501;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "unmodified_syndr_polyn_2";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1502;
	TREE_LEVEL = 0;
	CHILDREN = 1503, 1504, 1505, 1506, 1507, 1508, 1509, 1510;
}

DISPLAY_LINE
{
	CHANNEL = "unmodified_syndr_polyn_2[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1503;
	TREE_LEVEL = 1;
	PARENT = 1502;
}

DISPLAY_LINE
{
	CHANNEL = "unmodified_syndr_polyn_2[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1504;
	TREE_LEVEL = 1;
	PARENT = 1502;
}

DISPLAY_LINE
{
	CHANNEL = "unmodified_syndr_polyn_2[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1505;
	TREE_LEVEL = 1;
	PARENT = 1502;
}

DISPLAY_LINE
{
	CHANNEL = "unmodified_syndr_polyn_2[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1506;
	TREE_LEVEL = 1;
	PARENT = 1502;
}

DISPLAY_LINE
{
	CHANNEL = "unmodified_syndr_polyn_2[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1507;
	TREE_LEVEL = 1;
	PARENT = 1502;
}

DISPLAY_LINE
{
	CHANNEL = "unmodified_syndr_polyn_2[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1508;
	TREE_LEVEL = 1;
	PARENT = 1502;
}

DISPLAY_LINE
{
	CHANNEL = "unmodified_syndr_polyn_2[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1509;
	TREE_LEVEL = 1;
	PARENT = 1502;
}

DISPLAY_LINE
{
	CHANNEL = "unmodified_syndr_polyn_2[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1510;
	TREE_LEVEL = 1;
	PARENT = 1502;
}

DISPLAY_LINE
{
	CHANNEL = "unmodified_syndr_polyn_2[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1511;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "unmodified_syndr_polyn_2[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1512;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "unmodified_syndr_polyn_2[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1513;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "unmodified_syndr_polyn_2[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1514;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "unmodified_syndr_polyn_2[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1515;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "unmodified_syndr_polyn_2[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1516;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "unmodified_syndr_polyn_2[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1517;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "unmodified_syndr_polyn_2[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1518;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "wren";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1519;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "wren_decoder_in_buffer";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1520;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "write_addr";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1521;
	TREE_LEVEL = 0;
	CHILDREN = 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529;
}

DISPLAY_LINE
{
	CHANNEL = "write_addr[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1522;
	TREE_LEVEL = 1;
	PARENT = 1521;
}

DISPLAY_LINE
{
	CHANNEL = "write_addr[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1523;
	TREE_LEVEL = 1;
	PARENT = 1521;
}

DISPLAY_LINE
{
	CHANNEL = "write_addr[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1524;
	TREE_LEVEL = 1;
	PARENT = 1521;
}

DISPLAY_LINE
{
	CHANNEL = "write_addr[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1525;
	TREE_LEVEL = 1;
	PARENT = 1521;
}

DISPLAY_LINE
{
	CHANNEL = "write_addr[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1526;
	TREE_LEVEL = 1;
	PARENT = 1521;
}

DISPLAY_LINE
{
	CHANNEL = "write_addr[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1527;
	TREE_LEVEL = 1;
	PARENT = 1521;
}

DISPLAY_LINE
{
	CHANNEL = "write_addr[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1528;
	TREE_LEVEL = 1;
	PARENT = 1521;
}

DISPLAY_LINE
{
	CHANNEL = "write_addr[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1529;
	TREE_LEVEL = 1;
	PARENT = 1521;
}

DISPLAY_LINE
{
	CHANNEL = "write_addr[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1530;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "write_addr[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1531;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "write_addr[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1532;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "write_addr[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1533;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "write_addr[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1534;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "write_addr[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1535;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "write_addr[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1536;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "write_addr[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1537;
	TREE_LEVEL = 0;
}

TIME_BAR
{
	TIME = 348706;
	MASTER = TRUE;
}
;
