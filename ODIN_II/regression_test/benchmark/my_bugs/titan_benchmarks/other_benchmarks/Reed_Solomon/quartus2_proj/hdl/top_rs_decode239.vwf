/*
WARNING: Do NOT edit the input and output ports in this file in a text
editor if you plan to continue editing the block that represents it in
the Block Editor! File corruption is VERY likely to occur.
*/

/*
Copyright (C) 1991-2005 Altera Corporation
Your use of Altera Corporation's design tools, logic functions 
and other software and tools, and its AMPP partner logic       
functions, and any output files any of the foregoing           
(including device programming or simulation files), and any    
associated documentation or information are expressly subject  
to the terms and conditions of the Altera Program License      
Subscription Agreement, Altera MegaCore Function License       
Agreement, or other applicable license agreement, including,   
without limitation, that your use is for the sole purpose of   
programming logic devices manufactured by Altera and sold by   
Altera or its authorized distributors.  Please refer to the    
applicable agreement for further details.
*/

HEADER
{
	VERSION = 1;
	TIME_UNIT = ns;
	SIMULATION_TIME = 100000.0;
	GRID_PHASE = 0.0;
	GRID_PERIOD = 10.0;
	GRID_DUTY_CYCLE = 50;
}

SIGNAL("k_value")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("k_value[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "k_value";
}

SIGNAL("k_value[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "k_value";
}

SIGNAL("k_value[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "k_value";
}

SIGNAL("k_value[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "k_value";
}

SIGNAL("k_value[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "k_value";
}

SIGNAL("k_value[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "k_value";
}

SIGNAL("k_value[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "k_value";
}

SIGNAL("k_value[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "k_value";
}

SIGNAL("sigma_value")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 5;
	LSB_INDEX = 0;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("sigma_value[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "sigma_value";
}

SIGNAL("sigma_value[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "sigma_value";
}

SIGNAL("sigma_value[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "sigma_value";
}

SIGNAL("sigma_value[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "sigma_value";
}

SIGNAL("sigma_value[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "sigma_value";
}

SIGNAL("reset")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("ext_clk")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("L_degree_0")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 5;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("L_degree_0[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "L_degree_0";
}

SIGNAL("L_degree_0[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "L_degree_0";
}

SIGNAL("L_degree_0[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "L_degree_0";
}

SIGNAL("L_degree_0[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "L_degree_0";
}

SIGNAL("L_degree_0[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "L_degree_0";
}

SIGNAL("L_degree_1")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 5;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("L_degree_1[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "L_degree_1";
}

SIGNAL("L_degree_1[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "L_degree_1";
}

SIGNAL("L_degree_1[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "L_degree_1";
}

SIGNAL("L_degree_1[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "L_degree_1";
}

SIGNAL("L_degree_1[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "L_degree_1";
}

SIGNAL("L_degree_2")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 5;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("L_degree_2[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "L_degree_2";
}

SIGNAL("L_degree_2[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "L_degree_2";
}

SIGNAL("L_degree_2[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "L_degree_2";
}

SIGNAL("L_degree_2[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "L_degree_2";
}

SIGNAL("L_degree_2[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "L_degree_2";
}

SIGNAL("MEA_compute_done_0")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("MEA_compute_done_1")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("MEA_compute_done_2")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("Q_degree_0")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 5;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("Q_degree_0[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Q_degree_0";
}

SIGNAL("Q_degree_0[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Q_degree_0";
}

SIGNAL("Q_degree_0[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Q_degree_0";
}

SIGNAL("Q_degree_0[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Q_degree_0";
}

SIGNAL("Q_degree_0[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Q_degree_0";
}

SIGNAL("Q_degree_1")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 5;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("Q_degree_1[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Q_degree_1";
}

SIGNAL("Q_degree_1[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Q_degree_1";
}

SIGNAL("Q_degree_1[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Q_degree_1";
}

SIGNAL("Q_degree_1[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Q_degree_1";
}

SIGNAL("Q_degree_1[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Q_degree_1";
}

SIGNAL("Q_degree_2")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 5;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("Q_degree_2[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Q_degree_2";
}

SIGNAL("Q_degree_2[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Q_degree_2";
}

SIGNAL("Q_degree_2[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Q_degree_2";
}

SIGNAL("Q_degree_2[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Q_degree_2";
}

SIGNAL("Q_degree_2[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Q_degree_2";
}

SIGNAL("R_degree_0")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 5;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("R_degree_0[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "R_degree_0";
}

SIGNAL("R_degree_0[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "R_degree_0";
}

SIGNAL("R_degree_0[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "R_degree_0";
}

SIGNAL("R_degree_0[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "R_degree_0";
}

SIGNAL("R_degree_0[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "R_degree_0";
}

SIGNAL("R_degree_1")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 5;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("R_degree_1[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "R_degree_1";
}

SIGNAL("R_degree_1[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "R_degree_1";
}

SIGNAL("R_degree_1[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "R_degree_1";
}

SIGNAL("R_degree_1[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "R_degree_1";
}

SIGNAL("R_degree_1[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "R_degree_1";
}

SIGNAL("R_degree_2")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 5;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("R_degree_2[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "R_degree_2";
}

SIGNAL("R_degree_2[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "R_degree_2";
}

SIGNAL("R_degree_2[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "R_degree_2";
}

SIGNAL("R_degree_2[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "R_degree_2";
}

SIGNAL("R_degree_2[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "R_degree_2";
}

SIGNAL("channel_char")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 15;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("channel_char[14]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "channel_char";
}

SIGNAL("channel_char[13]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "channel_char";
}

SIGNAL("channel_char[12]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "channel_char";
}

SIGNAL("channel_char[11]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "channel_char";
}

SIGNAL("channel_char[10]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "channel_char";
}

SIGNAL("channel_char[9]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "channel_char";
}

SIGNAL("channel_char[8]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "channel_char";
}

SIGNAL("channel_char[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "channel_char";
}

SIGNAL("channel_char[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "channel_char";
}

SIGNAL("channel_char[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "channel_char";
}

SIGNAL("channel_char[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "channel_char";
}

SIGNAL("channel_char[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "channel_char";
}

SIGNAL("channel_char[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "channel_char";
}

SIGNAL("channel_char[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "channel_char";
}

SIGNAL("channel_char[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "channel_char";
}

SIGNAL("corrected_cw")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("corrected_cw[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "corrected_cw";
}

SIGNAL("corrected_cw[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "corrected_cw";
}

SIGNAL("corrected_cw[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "corrected_cw";
}

SIGNAL("corrected_cw[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "corrected_cw";
}

SIGNAL("corrected_cw[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "corrected_cw";
}

SIGNAL("corrected_cw[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "corrected_cw";
}

SIGNAL("corrected_cw[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "corrected_cw";
}

SIGNAL("corrected_cw[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "corrected_cw";
}

SIGNAL("corrected_cword_ready")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("corrected_error_count")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("corrected_error_count[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "corrected_error_count";
}

SIGNAL("corrected_error_count[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "corrected_error_count";
}

SIGNAL("corrected_error_count[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "corrected_error_count";
}

SIGNAL("corrected_error_count[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "corrected_error_count";
}

SIGNAL("corrected_error_count[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "corrected_error_count";
}

SIGNAL("corrected_error_count[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "corrected_error_count";
}

SIGNAL("corrected_error_count[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "corrected_error_count";
}

SIGNAL("corrected_error_count[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "corrected_error_count";
}

SIGNAL("cutoff_threshold_0")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 24;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("cutoff_threshold_0[23]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "cutoff_threshold_0";
}

SIGNAL("cutoff_threshold_0[22]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "cutoff_threshold_0";
}

SIGNAL("cutoff_threshold_0[21]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "cutoff_threshold_0";
}

SIGNAL("cutoff_threshold_0[20]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "cutoff_threshold_0";
}

SIGNAL("cutoff_threshold_0[19]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "cutoff_threshold_0";
}

SIGNAL("cutoff_threshold_0[18]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "cutoff_threshold_0";
}

SIGNAL("cutoff_threshold_0[17]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "cutoff_threshold_0";
}

SIGNAL("cutoff_threshold_0[16]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "cutoff_threshold_0";
}

SIGNAL("cutoff_threshold_0[15]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "cutoff_threshold_0";
}

SIGNAL("cutoff_threshold_0[14]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "cutoff_threshold_0";
}

SIGNAL("cutoff_threshold_0[13]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "cutoff_threshold_0";
}

SIGNAL("cutoff_threshold_0[12]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "cutoff_threshold_0";
}

SIGNAL("cutoff_threshold_0[11]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "cutoff_threshold_0";
}

SIGNAL("cutoff_threshold_0[10]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "cutoff_threshold_0";
}

SIGNAL("cutoff_threshold_0[9]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "cutoff_threshold_0";
}

SIGNAL("cutoff_threshold_0[8]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "cutoff_threshold_0";
}

SIGNAL("cutoff_threshold_0[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "cutoff_threshold_0";
}

SIGNAL("cutoff_threshold_0[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "cutoff_threshold_0";
}

SIGNAL("cutoff_threshold_0[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "cutoff_threshold_0";
}

SIGNAL("cutoff_threshold_0[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "cutoff_threshold_0";
}

SIGNAL("cutoff_threshold_0[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "cutoff_threshold_0";
}

SIGNAL("cutoff_threshold_0[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "cutoff_threshold_0";
}

SIGNAL("cutoff_threshold_0[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "cutoff_threshold_0";
}

SIGNAL("cutoff_threshold_0[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "cutoff_threshold_0";
}

SIGNAL("cutoff_threshold_1")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 24;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("cutoff_threshold_1[23]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "cutoff_threshold_1";
}

SIGNAL("cutoff_threshold_1[22]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "cutoff_threshold_1";
}

SIGNAL("cutoff_threshold_1[21]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "cutoff_threshold_1";
}

SIGNAL("cutoff_threshold_1[20]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "cutoff_threshold_1";
}

SIGNAL("cutoff_threshold_1[19]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "cutoff_threshold_1";
}

SIGNAL("cutoff_threshold_1[18]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "cutoff_threshold_1";
}

SIGNAL("cutoff_threshold_1[17]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "cutoff_threshold_1";
}

SIGNAL("cutoff_threshold_1[16]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "cutoff_threshold_1";
}

SIGNAL("cutoff_threshold_1[15]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "cutoff_threshold_1";
}

SIGNAL("cutoff_threshold_1[14]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "cutoff_threshold_1";
}

SIGNAL("cutoff_threshold_1[13]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "cutoff_threshold_1";
}

SIGNAL("cutoff_threshold_1[12]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "cutoff_threshold_1";
}

SIGNAL("cutoff_threshold_1[11]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "cutoff_threshold_1";
}

SIGNAL("cutoff_threshold_1[10]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "cutoff_threshold_1";
}

SIGNAL("cutoff_threshold_1[9]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "cutoff_threshold_1";
}

SIGNAL("cutoff_threshold_1[8]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "cutoff_threshold_1";
}

SIGNAL("cutoff_threshold_1[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "cutoff_threshold_1";
}

SIGNAL("cutoff_threshold_1[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "cutoff_threshold_1";
}

SIGNAL("cutoff_threshold_1[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "cutoff_threshold_1";
}

SIGNAL("cutoff_threshold_1[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "cutoff_threshold_1";
}

SIGNAL("cutoff_threshold_1[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "cutoff_threshold_1";
}

SIGNAL("cutoff_threshold_1[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "cutoff_threshold_1";
}

SIGNAL("cutoff_threshold_1[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "cutoff_threshold_1";
}

SIGNAL("cutoff_threshold_1[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "cutoff_threshold_1";
}

SIGNAL("cutoff_threshold_2")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 24;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("cutoff_threshold_2[23]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "cutoff_threshold_2";
}

SIGNAL("cutoff_threshold_2[22]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "cutoff_threshold_2";
}

SIGNAL("cutoff_threshold_2[21]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "cutoff_threshold_2";
}

SIGNAL("cutoff_threshold_2[20]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "cutoff_threshold_2";
}

SIGNAL("cutoff_threshold_2[19]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "cutoff_threshold_2";
}

SIGNAL("cutoff_threshold_2[18]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "cutoff_threshold_2";
}

SIGNAL("cutoff_threshold_2[17]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "cutoff_threshold_2";
}

SIGNAL("cutoff_threshold_2[16]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "cutoff_threshold_2";
}

SIGNAL("cutoff_threshold_2[15]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "cutoff_threshold_2";
}

SIGNAL("cutoff_threshold_2[14]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "cutoff_threshold_2";
}

SIGNAL("cutoff_threshold_2[13]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "cutoff_threshold_2";
}

SIGNAL("cutoff_threshold_2[12]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "cutoff_threshold_2";
}

SIGNAL("cutoff_threshold_2[11]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "cutoff_threshold_2";
}

SIGNAL("cutoff_threshold_2[10]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "cutoff_threshold_2";
}

SIGNAL("cutoff_threshold_2[9]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "cutoff_threshold_2";
}

SIGNAL("cutoff_threshold_2[8]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "cutoff_threshold_2";
}

SIGNAL("cutoff_threshold_2[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "cutoff_threshold_2";
}

SIGNAL("cutoff_threshold_2[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "cutoff_threshold_2";
}

SIGNAL("cutoff_threshold_2[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "cutoff_threshold_2";
}

SIGNAL("cutoff_threshold_2[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "cutoff_threshold_2";
}

SIGNAL("cutoff_threshold_2[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "cutoff_threshold_2";
}

SIGNAL("cutoff_threshold_2[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "cutoff_threshold_2";
}

SIGNAL("cutoff_threshold_2[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "cutoff_threshold_2";
}

SIGNAL("cutoff_threshold_2[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "cutoff_threshold_2";
}

SIGNAL("cutoff_threshold_ready")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("cw_data")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("cw_data[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "cw_data";
}

SIGNAL("cw_data[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "cw_data";
}

SIGNAL("cw_data[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "cw_data";
}

SIGNAL("cw_data[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "cw_data";
}

SIGNAL("cw_data[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "cw_data";
}

SIGNAL("cw_data[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "cw_data";
}

SIGNAL("cw_data[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "cw_data";
}

SIGNAL("cw_data[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "cw_data";
}

SIGNAL("cycle")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 9;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("cycle[8]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "cycle";
}

SIGNAL("cycle[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "cycle";
}

SIGNAL("cycle[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "cycle";
}

SIGNAL("cycle[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "cycle";
}

SIGNAL("cycle[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "cycle";
}

SIGNAL("cycle[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "cycle";
}

SIGNAL("cycle[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "cycle";
}

SIGNAL("cycle[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "cycle";
}

SIGNAL("cycle[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "cycle";
}

SIGNAL("decode_strobe")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("decoder_rd_addr")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("decoder_rd_addr[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "decoder_rd_addr";
}

SIGNAL("decoder_rd_addr[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "decoder_rd_addr";
}

SIGNAL("decoder_rd_addr[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "decoder_rd_addr";
}

SIGNAL("decoder_rd_addr[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "decoder_rd_addr";
}

SIGNAL("decoder_rd_addr[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "decoder_rd_addr";
}

SIGNAL("decoder_rd_addr[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "decoder_rd_addr";
}

SIGNAL("decoder_rd_addr[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "decoder_rd_addr";
}

SIGNAL("decoder_rd_addr[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "decoder_rd_addr";
}

SIGNAL("derivative_error_location")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("derivative_error_location[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "derivative_error_location";
}

SIGNAL("derivative_error_location[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "derivative_error_location";
}

SIGNAL("derivative_error_location[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "derivative_error_location";
}

SIGNAL("derivative_error_location[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "derivative_error_location";
}

SIGNAL("derivative_error_location[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "derivative_error_location";
}

SIGNAL("derivative_error_location[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "derivative_error_location";
}

SIGNAL("derivative_error_location[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "derivative_error_location";
}

SIGNAL("derivative_error_location[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "derivative_error_location";
}

SIGNAL("erase_position_0")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("erase_position_0[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "erase_position_0";
}

SIGNAL("erase_position_0[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "erase_position_0";
}

SIGNAL("erase_position_0[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "erase_position_0";
}

SIGNAL("erase_position_0[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "erase_position_0";
}

SIGNAL("erase_position_0[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "erase_position_0";
}

SIGNAL("erase_position_0[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "erase_position_0";
}

SIGNAL("erase_position_0[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "erase_position_0";
}

SIGNAL("erase_position_0[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "erase_position_0";
}

SIGNAL("erase_position_1")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("erase_position_1[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "erase_position_1";
}

SIGNAL("erase_position_1[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "erase_position_1";
}

SIGNAL("erase_position_1[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "erase_position_1";
}

SIGNAL("erase_position_1[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "erase_position_1";
}

SIGNAL("erase_position_1[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "erase_position_1";
}

SIGNAL("erase_position_1[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "erase_position_1";
}

SIGNAL("erase_position_1[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "erase_position_1";
}

SIGNAL("erase_position_1[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "erase_position_1";
}

SIGNAL("erase_position_2")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("erase_position_2[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "erase_position_2";
}

SIGNAL("erase_position_2[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "erase_position_2";
}

SIGNAL("erase_position_2[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "erase_position_2";
}

SIGNAL("erase_position_2[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "erase_position_2";
}

SIGNAL("erase_position_2[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "erase_position_2";
}

SIGNAL("erase_position_2[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "erase_position_2";
}

SIGNAL("erase_position_2[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "erase_position_2";
}

SIGNAL("erase_position_2[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "erase_position_2";
}

SIGNAL("erasure")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("erasure_coef_ready_0")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("erasure_coef_ready_1")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("erasure_coef_ready_2")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("erasure_flag_0")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("erasure_flag_1")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("erasure_flag_2")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("erasure_polyn_0")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("erasure_polyn_0[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "erasure_polyn_0";
}

SIGNAL("erasure_polyn_0[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "erasure_polyn_0";
}

SIGNAL("erasure_polyn_0[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "erasure_polyn_0";
}

SIGNAL("erasure_polyn_0[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "erasure_polyn_0";
}

SIGNAL("erasure_polyn_0[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "erasure_polyn_0";
}

SIGNAL("erasure_polyn_0[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "erasure_polyn_0";
}

SIGNAL("erasure_polyn_0[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "erasure_polyn_0";
}

SIGNAL("erasure_polyn_0[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "erasure_polyn_0";
}

SIGNAL("erasure_polyn_1")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("erasure_polyn_1[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "erasure_polyn_1";
}

SIGNAL("erasure_polyn_1[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "erasure_polyn_1";
}

SIGNAL("erasure_polyn_1[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "erasure_polyn_1";
}

SIGNAL("erasure_polyn_1[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "erasure_polyn_1";
}

SIGNAL("erasure_polyn_1[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "erasure_polyn_1";
}

SIGNAL("erasure_polyn_1[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "erasure_polyn_1";
}

SIGNAL("erasure_polyn_1[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "erasure_polyn_1";
}

SIGNAL("erasure_polyn_1[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "erasure_polyn_1";
}

SIGNAL("erasure_polyn_2")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("erasure_polyn_2[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "erasure_polyn_2";
}

SIGNAL("erasure_polyn_2[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "erasure_polyn_2";
}

SIGNAL("erasure_polyn_2[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "erasure_polyn_2";
}

SIGNAL("erasure_polyn_2[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "erasure_polyn_2";
}

SIGNAL("erasure_polyn_2[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "erasure_polyn_2";
}

SIGNAL("erasure_polyn_2[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "erasure_polyn_2";
}

SIGNAL("erasure_polyn_2[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "erasure_polyn_2";
}

SIGNAL("erasure_polyn_2[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "erasure_polyn_2";
}

SIGNAL("erasures_absent_0")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("erasures_absent_1")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("erasures_absent_2")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("errata_loc_coefs_0")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("errata_loc_coefs_0[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "errata_loc_coefs_0";
}

SIGNAL("errata_loc_coefs_0[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "errata_loc_coefs_0";
}

SIGNAL("errata_loc_coefs_0[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "errata_loc_coefs_0";
}

SIGNAL("errata_loc_coefs_0[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "errata_loc_coefs_0";
}

SIGNAL("errata_loc_coefs_0[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "errata_loc_coefs_0";
}

SIGNAL("errata_loc_coefs_0[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "errata_loc_coefs_0";
}

SIGNAL("errata_loc_coefs_0[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "errata_loc_coefs_0";
}

SIGNAL("errata_loc_coefs_0[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "errata_loc_coefs_0";
}

SIGNAL("errata_loc_coefs_1")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("errata_loc_coefs_1[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "errata_loc_coefs_1";
}

SIGNAL("errata_loc_coefs_1[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "errata_loc_coefs_1";
}

SIGNAL("errata_loc_coefs_1[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "errata_loc_coefs_1";
}

SIGNAL("errata_loc_coefs_1[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "errata_loc_coefs_1";
}

SIGNAL("errata_loc_coefs_1[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "errata_loc_coefs_1";
}

SIGNAL("errata_loc_coefs_1[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "errata_loc_coefs_1";
}

SIGNAL("errata_loc_coefs_1[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "errata_loc_coefs_1";
}

SIGNAL("errata_loc_coefs_1[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "errata_loc_coefs_1";
}

SIGNAL("errata_loc_coefs_2")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("errata_loc_coefs_2[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "errata_loc_coefs_2";
}

SIGNAL("errata_loc_coefs_2[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "errata_loc_coefs_2";
}

SIGNAL("errata_loc_coefs_2[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "errata_loc_coefs_2";
}

SIGNAL("errata_loc_coefs_2[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "errata_loc_coefs_2";
}

SIGNAL("errata_loc_coefs_2[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "errata_loc_coefs_2";
}

SIGNAL("errata_loc_coefs_2[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "errata_loc_coefs_2";
}

SIGNAL("errata_loc_coefs_2[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "errata_loc_coefs_2";
}

SIGNAL("errata_loc_coefs_2[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "errata_loc_coefs_2";
}

SIGNAL("errata_magnitude_coefs_0")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("errata_magnitude_coefs_0[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "errata_magnitude_coefs_0";
}

SIGNAL("errata_magnitude_coefs_0[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "errata_magnitude_coefs_0";
}

SIGNAL("errata_magnitude_coefs_0[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "errata_magnitude_coefs_0";
}

SIGNAL("errata_magnitude_coefs_0[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "errata_magnitude_coefs_0";
}

SIGNAL("errata_magnitude_coefs_0[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "errata_magnitude_coefs_0";
}

SIGNAL("errata_magnitude_coefs_0[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "errata_magnitude_coefs_0";
}

SIGNAL("errata_magnitude_coefs_0[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "errata_magnitude_coefs_0";
}

SIGNAL("errata_magnitude_coefs_0[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "errata_magnitude_coefs_0";
}

SIGNAL("errata_magnitude_coefs_1")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("errata_magnitude_coefs_1[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "errata_magnitude_coefs_1";
}

SIGNAL("errata_magnitude_coefs_1[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "errata_magnitude_coefs_1";
}

SIGNAL("errata_magnitude_coefs_1[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "errata_magnitude_coefs_1";
}

SIGNAL("errata_magnitude_coefs_1[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "errata_magnitude_coefs_1";
}

SIGNAL("errata_magnitude_coefs_1[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "errata_magnitude_coefs_1";
}

SIGNAL("errata_magnitude_coefs_1[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "errata_magnitude_coefs_1";
}

SIGNAL("errata_magnitude_coefs_1[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "errata_magnitude_coefs_1";
}

SIGNAL("errata_magnitude_coefs_1[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "errata_magnitude_coefs_1";
}

SIGNAL("errata_magnitude_coefs_2")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("errata_magnitude_coefs_2[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "errata_magnitude_coefs_2";
}

SIGNAL("errata_magnitude_coefs_2[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "errata_magnitude_coefs_2";
}

SIGNAL("errata_magnitude_coefs_2[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "errata_magnitude_coefs_2";
}

SIGNAL("errata_magnitude_coefs_2[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "errata_magnitude_coefs_2";
}

SIGNAL("errata_magnitude_coefs_2[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "errata_magnitude_coefs_2";
}

SIGNAL("errata_magnitude_coefs_2[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "errata_magnitude_coefs_2";
}

SIGNAL("errata_magnitude_coefs_2[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "errata_magnitude_coefs_2";
}

SIGNAL("errata_magnitude_coefs_2[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "errata_magnitude_coefs_2";
}

SIGNAL("error_location_0")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("error_location_0[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "error_location_0";
}

SIGNAL("error_location_0[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "error_location_0";
}

SIGNAL("error_location_0[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "error_location_0";
}

SIGNAL("error_location_0[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "error_location_0";
}

SIGNAL("error_location_0[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "error_location_0";
}

SIGNAL("error_location_0[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "error_location_0";
}

SIGNAL("error_location_0[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "error_location_0";
}

SIGNAL("error_location_0[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "error_location_0";
}

SIGNAL("error_location_1")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("error_location_1[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "error_location_1";
}

SIGNAL("error_location_1[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "error_location_1";
}

SIGNAL("error_location_1[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "error_location_1";
}

SIGNAL("error_location_1[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "error_location_1";
}

SIGNAL("error_location_1[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "error_location_1";
}

SIGNAL("error_location_1[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "error_location_1";
}

SIGNAL("error_location_1[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "error_location_1";
}

SIGNAL("error_location_1[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "error_location_1";
}

SIGNAL("error_location_2")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("error_location_2[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "error_location_2";
}

SIGNAL("error_location_2[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "error_location_2";
}

SIGNAL("error_location_2[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "error_location_2";
}

SIGNAL("error_location_2[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "error_location_2";
}

SIGNAL("error_location_2[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "error_location_2";
}

SIGNAL("error_location_2[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "error_location_2";
}

SIGNAL("error_location_2[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "error_location_2";
}

SIGNAL("error_location_2[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "error_location_2";
}

SIGNAL("error_magnitude")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("error_magnitude[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "error_magnitude";
}

SIGNAL("error_magnitude[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "error_magnitude";
}

SIGNAL("error_magnitude[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "error_magnitude";
}

SIGNAL("error_magnitude[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "error_magnitude";
}

SIGNAL("error_magnitude[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "error_magnitude";
}

SIGNAL("error_magnitude[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "error_magnitude";
}

SIGNAL("error_magnitude[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "error_magnitude";
}

SIGNAL("error_magnitude[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "error_magnitude";
}

SIGNAL("exact_smallest")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 10;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("exact_smallest[9]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "exact_smallest";
}

SIGNAL("exact_smallest[8]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "exact_smallest";
}

SIGNAL("exact_smallest[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "exact_smallest";
}

SIGNAL("exact_smallest[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "exact_smallest";
}

SIGNAL("exact_smallest[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "exact_smallest";
}

SIGNAL("exact_smallest[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "exact_smallest";
}

SIGNAL("exact_smallest[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "exact_smallest";
}

SIGNAL("exact_smallest[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "exact_smallest";
}

SIGNAL("exact_smallest[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "exact_smallest";
}

SIGNAL("exact_smallest[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "exact_smallest";
}

SIGNAL("fade_value")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 10;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("fade_value[9]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "fade_value";
}

SIGNAL("fade_value[8]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "fade_value";
}

SIGNAL("fade_value[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "fade_value";
}

SIGNAL("fade_value[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "fade_value";
}

SIGNAL("fade_value[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "fade_value";
}

SIGNAL("fade_value[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "fade_value";
}

SIGNAL("fade_value[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "fade_value";
}

SIGNAL("fade_value[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "fade_value";
}

SIGNAL("fade_value[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "fade_value";
}

SIGNAL("fade_value[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "fade_value";
}

SIGNAL("load_non_zero_syndrome_done")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("locator_degree_0")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 5;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("locator_degree_0[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "locator_degree_0";
}

SIGNAL("locator_degree_0[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "locator_degree_0";
}

SIGNAL("locator_degree_0[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "locator_degree_0";
}

SIGNAL("locator_degree_0[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "locator_degree_0";
}

SIGNAL("locator_degree_0[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "locator_degree_0";
}

SIGNAL("locator_degree_1")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 5;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("locator_degree_1[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "locator_degree_1";
}

SIGNAL("locator_degree_1[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "locator_degree_1";
}

SIGNAL("locator_degree_1[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "locator_degree_1";
}

SIGNAL("locator_degree_1[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "locator_degree_1";
}

SIGNAL("locator_degree_1[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "locator_degree_1";
}

SIGNAL("locator_degree_2")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 5;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("locator_degree_2[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "locator_degree_2";
}

SIGNAL("locator_degree_2[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "locator_degree_2";
}

SIGNAL("locator_degree_2[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "locator_degree_2";
}

SIGNAL("locator_degree_2[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "locator_degree_2";
}

SIGNAL("locator_degree_2[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "locator_degree_2";
}

SIGNAL("locator_polyn_0")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("locator_polyn_0[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "locator_polyn_0";
}

SIGNAL("locator_polyn_0[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "locator_polyn_0";
}

SIGNAL("locator_polyn_0[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "locator_polyn_0";
}

SIGNAL("locator_polyn_0[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "locator_polyn_0";
}

SIGNAL("locator_polyn_0[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "locator_polyn_0";
}

SIGNAL("locator_polyn_0[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "locator_polyn_0";
}

SIGNAL("locator_polyn_0[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "locator_polyn_0";
}

SIGNAL("locator_polyn_0[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "locator_polyn_0";
}

SIGNAL("locator_polyn_1")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("locator_polyn_1[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "locator_polyn_1";
}

SIGNAL("locator_polyn_1[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "locator_polyn_1";
}

SIGNAL("locator_polyn_1[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "locator_polyn_1";
}

SIGNAL("locator_polyn_1[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "locator_polyn_1";
}

SIGNAL("locator_polyn_1[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "locator_polyn_1";
}

SIGNAL("locator_polyn_1[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "locator_polyn_1";
}

SIGNAL("locator_polyn_1[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "locator_polyn_1";
}

SIGNAL("locator_polyn_1[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "locator_polyn_1";
}

SIGNAL("locator_polyn_2")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("locator_polyn_2[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "locator_polyn_2";
}

SIGNAL("locator_polyn_2[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "locator_polyn_2";
}

SIGNAL("locator_polyn_2[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "locator_polyn_2";
}

SIGNAL("locator_polyn_2[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "locator_polyn_2";
}

SIGNAL("locator_polyn_2[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "locator_polyn_2";
}

SIGNAL("locator_polyn_2[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "locator_polyn_2";
}

SIGNAL("locator_polyn_2[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "locator_polyn_2";
}

SIGNAL("locator_polyn_2[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "locator_polyn_2";
}

SIGNAL("magnitue_polyn_0")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("magnitue_polyn_0[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "magnitue_polyn_0";
}

SIGNAL("magnitue_polyn_0[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "magnitue_polyn_0";
}

SIGNAL("magnitue_polyn_0[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "magnitue_polyn_0";
}

SIGNAL("magnitue_polyn_0[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "magnitue_polyn_0";
}

SIGNAL("magnitue_polyn_0[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "magnitue_polyn_0";
}

SIGNAL("magnitue_polyn_0[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "magnitue_polyn_0";
}

SIGNAL("magnitue_polyn_0[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "magnitue_polyn_0";
}

SIGNAL("magnitue_polyn_0[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "magnitue_polyn_0";
}

SIGNAL("magnitue_polyn_1")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("magnitue_polyn_1[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "magnitue_polyn_1";
}

SIGNAL("magnitue_polyn_1[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "magnitue_polyn_1";
}

SIGNAL("magnitue_polyn_1[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "magnitue_polyn_1";
}

SIGNAL("magnitue_polyn_1[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "magnitue_polyn_1";
}

SIGNAL("magnitue_polyn_1[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "magnitue_polyn_1";
}

SIGNAL("magnitue_polyn_1[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "magnitue_polyn_1";
}

SIGNAL("magnitue_polyn_1[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "magnitue_polyn_1";
}

SIGNAL("magnitue_polyn_1[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "magnitue_polyn_1";
}

SIGNAL("magnitue_polyn_2")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("magnitue_polyn_2[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "magnitue_polyn_2";
}

SIGNAL("magnitue_polyn_2[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "magnitue_polyn_2";
}

SIGNAL("magnitue_polyn_2[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "magnitue_polyn_2";
}

SIGNAL("magnitue_polyn_2[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "magnitue_polyn_2";
}

SIGNAL("magnitue_polyn_2[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "magnitue_polyn_2";
}

SIGNAL("magnitue_polyn_2[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "magnitue_polyn_2";
}

SIGNAL("magnitue_polyn_2[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "magnitue_polyn_2";
}

SIGNAL("magnitue_polyn_2[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "magnitue_polyn_2";
}

SIGNAL("modified_actual_distance")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 24;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("modified_actual_distance[23]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "modified_actual_distance";
}

SIGNAL("modified_actual_distance[22]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "modified_actual_distance";
}

SIGNAL("modified_actual_distance[21]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "modified_actual_distance";
}

SIGNAL("modified_actual_distance[20]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "modified_actual_distance";
}

SIGNAL("modified_actual_distance[19]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "modified_actual_distance";
}

SIGNAL("modified_actual_distance[18]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "modified_actual_distance";
}

SIGNAL("modified_actual_distance[17]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "modified_actual_distance";
}

SIGNAL("modified_actual_distance[16]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "modified_actual_distance";
}

SIGNAL("modified_actual_distance[15]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "modified_actual_distance";
}

SIGNAL("modified_actual_distance[14]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "modified_actual_distance";
}

SIGNAL("modified_actual_distance[13]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "modified_actual_distance";
}

SIGNAL("modified_actual_distance[12]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "modified_actual_distance";
}

SIGNAL("modified_actual_distance[11]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "modified_actual_distance";
}

SIGNAL("modified_actual_distance[10]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "modified_actual_distance";
}

SIGNAL("modified_actual_distance[9]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "modified_actual_distance";
}

SIGNAL("modified_actual_distance[8]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "modified_actual_distance";
}

SIGNAL("modified_actual_distance[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "modified_actual_distance";
}

SIGNAL("modified_actual_distance[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "modified_actual_distance";
}

SIGNAL("modified_actual_distance[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "modified_actual_distance";
}

SIGNAL("modified_actual_distance[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "modified_actual_distance";
}

SIGNAL("modified_actual_distance[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "modified_actual_distance";
}

SIGNAL("modified_actual_distance[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "modified_actual_distance";
}

SIGNAL("modified_actual_distance[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "modified_actual_distance";
}

SIGNAL("modified_actual_distance[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "modified_actual_distance";
}

SIGNAL("modified_syndr_polyn_0")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("modified_syndr_polyn_0[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "modified_syndr_polyn_0";
}

SIGNAL("modified_syndr_polyn_0[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "modified_syndr_polyn_0";
}

SIGNAL("modified_syndr_polyn_0[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "modified_syndr_polyn_0";
}

SIGNAL("modified_syndr_polyn_0[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "modified_syndr_polyn_0";
}

SIGNAL("modified_syndr_polyn_0[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "modified_syndr_polyn_0";
}

SIGNAL("modified_syndr_polyn_0[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "modified_syndr_polyn_0";
}

SIGNAL("modified_syndr_polyn_0[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "modified_syndr_polyn_0";
}

SIGNAL("modified_syndr_polyn_0[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "modified_syndr_polyn_0";
}

SIGNAL("modified_syndr_polyn_1")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("modified_syndr_polyn_1[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "modified_syndr_polyn_1";
}

SIGNAL("modified_syndr_polyn_1[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "modified_syndr_polyn_1";
}

SIGNAL("modified_syndr_polyn_1[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "modified_syndr_polyn_1";
}

SIGNAL("modified_syndr_polyn_1[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "modified_syndr_polyn_1";
}

SIGNAL("modified_syndr_polyn_1[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "modified_syndr_polyn_1";
}

SIGNAL("modified_syndr_polyn_1[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "modified_syndr_polyn_1";
}

SIGNAL("modified_syndr_polyn_1[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "modified_syndr_polyn_1";
}

SIGNAL("modified_syndr_polyn_1[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "modified_syndr_polyn_1";
}

SIGNAL("modified_syndr_polyn_2")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("modified_syndr_polyn_2[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "modified_syndr_polyn_2";
}

SIGNAL("modified_syndr_polyn_2[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "modified_syndr_polyn_2";
}

SIGNAL("modified_syndr_polyn_2[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "modified_syndr_polyn_2";
}

SIGNAL("modified_syndr_polyn_2[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "modified_syndr_polyn_2";
}

SIGNAL("modified_syndr_polyn_2[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "modified_syndr_polyn_2";
}

SIGNAL("modified_syndr_polyn_2[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "modified_syndr_polyn_2";
}

SIGNAL("modified_syndr_polyn_2[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "modified_syndr_polyn_2";
}

SIGNAL("modified_syndr_polyn_2[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "modified_syndr_polyn_2";
}

SIGNAL("new_channel_char")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("new_data")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("no_of_erasure_coefs_0")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 5;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("no_of_erasure_coefs_0[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "no_of_erasure_coefs_0";
}

SIGNAL("no_of_erasure_coefs_0[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "no_of_erasure_coefs_0";
}

SIGNAL("no_of_erasure_coefs_0[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "no_of_erasure_coefs_0";
}

SIGNAL("no_of_erasure_coefs_0[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "no_of_erasure_coefs_0";
}

SIGNAL("no_of_erasure_coefs_0[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "no_of_erasure_coefs_0";
}

SIGNAL("no_of_erasure_coefs_1")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 5;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("no_of_erasure_coefs_1[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "no_of_erasure_coefs_1";
}

SIGNAL("no_of_erasure_coefs_1[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "no_of_erasure_coefs_1";
}

SIGNAL("no_of_erasure_coefs_1[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "no_of_erasure_coefs_1";
}

SIGNAL("no_of_erasure_coefs_1[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "no_of_erasure_coefs_1";
}

SIGNAL("no_of_erasure_coefs_1[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "no_of_erasure_coefs_1";
}

SIGNAL("no_of_erasure_coefs_2")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 5;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("no_of_erasure_coefs_2[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "no_of_erasure_coefs_2";
}

SIGNAL("no_of_erasure_coefs_2[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "no_of_erasure_coefs_2";
}

SIGNAL("no_of_erasure_coefs_2[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "no_of_erasure_coefs_2";
}

SIGNAL("no_of_erasure_coefs_2[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "no_of_erasure_coefs_2";
}

SIGNAL("no_of_erasure_coefs_2[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "no_of_erasure_coefs_2";
}

SIGNAL("no_of_parity")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 5;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("no_of_parity[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "no_of_parity";
}

SIGNAL("no_of_parity[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "no_of_parity";
}

SIGNAL("no_of_parity[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "no_of_parity";
}

SIGNAL("no_of_parity[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "no_of_parity";
}

SIGNAL("no_of_parity[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "no_of_parity";
}

SIGNAL("norm_sigma_square")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 15;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("norm_sigma_square[14]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "norm_sigma_square";
}

SIGNAL("norm_sigma_square[13]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "norm_sigma_square";
}

SIGNAL("norm_sigma_square[12]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "norm_sigma_square";
}

SIGNAL("norm_sigma_square[11]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "norm_sigma_square";
}

SIGNAL("norm_sigma_square[10]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "norm_sigma_square";
}

SIGNAL("norm_sigma_square[9]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "norm_sigma_square";
}

SIGNAL("norm_sigma_square[8]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "norm_sigma_square";
}

SIGNAL("norm_sigma_square[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "norm_sigma_square";
}

SIGNAL("norm_sigma_square[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "norm_sigma_square";
}

SIGNAL("norm_sigma_square[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "norm_sigma_square";
}

SIGNAL("norm_sigma_square[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "norm_sigma_square";
}

SIGNAL("norm_sigma_square[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "norm_sigma_square";
}

SIGNAL("norm_sigma_square[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "norm_sigma_square";
}

SIGNAL("norm_sigma_square[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "norm_sigma_square";
}

SIGNAL("norm_sigma_square[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "norm_sigma_square";
}

SIGNAL("normalized_signal")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 15;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("normalized_signal[14]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "normalized_signal";
}

SIGNAL("normalized_signal[13]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "normalized_signal";
}

SIGNAL("normalized_signal[12]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "normalized_signal";
}

SIGNAL("normalized_signal[11]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "normalized_signal";
}

SIGNAL("normalized_signal[10]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "normalized_signal";
}

SIGNAL("normalized_signal[9]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "normalized_signal";
}

SIGNAL("normalized_signal[8]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "normalized_signal";
}

SIGNAL("normalized_signal[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "normalized_signal";
}

SIGNAL("normalized_signal[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "normalized_signal";
}

SIGNAL("normalized_signal[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "normalized_signal";
}

SIGNAL("normalized_signal[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "normalized_signal";
}

SIGNAL("normalized_signal[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "normalized_signal";
}

SIGNAL("normalized_signal[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "normalized_signal";
}

SIGNAL("normalized_signal[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "normalized_signal";
}

SIGNAL("normalized_signal[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "normalized_signal";
}

SIGNAL("number_of_erasures_0")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 5;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("number_of_erasures_0[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "number_of_erasures_0";
}

SIGNAL("number_of_erasures_0[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "number_of_erasures_0";
}

SIGNAL("number_of_erasures_0[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "number_of_erasures_0";
}

SIGNAL("number_of_erasures_0[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "number_of_erasures_0";
}

SIGNAL("number_of_erasures_0[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "number_of_erasures_0";
}

SIGNAL("number_of_erasures_1")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 5;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("number_of_erasures_1[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "number_of_erasures_1";
}

SIGNAL("number_of_erasures_1[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "number_of_erasures_1";
}

SIGNAL("number_of_erasures_1[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "number_of_erasures_1";
}

SIGNAL("number_of_erasures_1[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "number_of_erasures_1";
}

SIGNAL("number_of_erasures_1[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "number_of_erasures_1";
}

SIGNAL("number_of_erasures_2")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 5;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("number_of_erasures_2[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "number_of_erasures_2";
}

SIGNAL("number_of_erasures_2[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "number_of_erasures_2";
}

SIGNAL("number_of_erasures_2[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "number_of_erasures_2";
}

SIGNAL("number_of_erasures_2[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "number_of_erasures_2";
}

SIGNAL("number_of_erasures_2[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "number_of_erasures_2";
}

SIGNAL("q")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("q[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "q";
}

SIGNAL("q[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "q";
}

SIGNAL("q[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "q";
}

SIGNAL("q[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "q";
}

SIGNAL("q[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "q";
}

SIGNAL("q[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "q";
}

SIGNAL("q[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "q";
}

SIGNAL("q[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "q";
}

SIGNAL("q_fade")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 10;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("q_fade[9]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "q_fade";
}

SIGNAL("q_fade[8]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "q_fade";
}

SIGNAL("q_fade[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "q_fade";
}

SIGNAL("q_fade[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "q_fade";
}

SIGNAL("q_fade[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "q_fade";
}

SIGNAL("q_fade[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "q_fade";
}

SIGNAL("q_fade[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "q_fade";
}

SIGNAL("q_fade[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "q_fade";
}

SIGNAL("q_fade[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "q_fade";
}

SIGNAL("q_fade[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "q_fade";
}

SIGNAL("q_in")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 10;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("q_in[9]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "q_in";
}

SIGNAL("q_in[8]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "q_in";
}

SIGNAL("q_in[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "q_in";
}

SIGNAL("q_in[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "q_in";
}

SIGNAL("q_in[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "q_in";
}

SIGNAL("q_in[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "q_in";
}

SIGNAL("q_in[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "q_in";
}

SIGNAL("q_in[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "q_in";
}

SIGNAL("q_in[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "q_in";
}

SIGNAL("q_in[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "q_in";
}

SIGNAL("quotient")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 15;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("quotient[14]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "quotient";
}

SIGNAL("quotient[13]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "quotient";
}

SIGNAL("quotient[12]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "quotient";
}

SIGNAL("quotient[11]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "quotient";
}

SIGNAL("quotient[10]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "quotient";
}

SIGNAL("quotient[9]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "quotient";
}

SIGNAL("quotient[8]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "quotient";
}

SIGNAL("quotient[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "quotient";
}

SIGNAL("quotient[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "quotient";
}

SIGNAL("quotient[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "quotient";
}

SIGNAL("quotient[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "quotient";
}

SIGNAL("quotient[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "quotient";
}

SIGNAL("quotient[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "quotient";
}

SIGNAL("quotient[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "quotient";
}

SIGNAL("quotient[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "quotient";
}

SIGNAL("rd_enable")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("rdaddress")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("rdaddress[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "rdaddress";
}

SIGNAL("rdaddress[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "rdaddress";
}

SIGNAL("rdaddress[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "rdaddress";
}

SIGNAL("rdaddress[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "rdaddress";
}

SIGNAL("rdaddress[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "rdaddress";
}

SIGNAL("rdaddress[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "rdaddress";
}

SIGNAL("rdaddress[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "rdaddress";
}

SIGNAL("rdaddress[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "rdaddress";
}

SIGNAL("rdaddress_fade")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("rdaddress_fade[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "rdaddress_fade";
}

SIGNAL("rdaddress_fade[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "rdaddress_fade";
}

SIGNAL("rdaddress_fade[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "rdaddress_fade";
}

SIGNAL("rdaddress_fade[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "rdaddress_fade";
}

SIGNAL("rdaddress_fade[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "rdaddress_fade";
}

SIGNAL("rdaddress_fade[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "rdaddress_fade";
}

SIGNAL("rdaddress_fade[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "rdaddress_fade";
}

SIGNAL("rdaddress_fade[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "rdaddress_fade";
}

SIGNAL("rdaddress_in")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 11;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("rdaddress_in[10]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "rdaddress_in";
}

SIGNAL("rdaddress_in[9]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "rdaddress_in";
}

SIGNAL("rdaddress_in[8]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "rdaddress_in";
}

SIGNAL("rdaddress_in[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "rdaddress_in";
}

SIGNAL("rdaddress_in[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "rdaddress_in";
}

SIGNAL("rdaddress_in[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "rdaddress_in";
}

SIGNAL("rdaddress_in[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "rdaddress_in";
}

SIGNAL("rdaddress_in[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "rdaddress_in";
}

SIGNAL("rdaddress_in[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "rdaddress_in";
}

SIGNAL("rdaddress_in[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "rdaddress_in";
}

SIGNAL("rdaddress_in[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "rdaddress_in";
}

SIGNAL("recieved_codeword")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("recieved_codeword[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "recieved_codeword";
}

SIGNAL("recieved_codeword[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "recieved_codeword";
}

SIGNAL("recieved_codeword[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "recieved_codeword";
}

SIGNAL("recieved_codeword[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "recieved_codeword";
}

SIGNAL("recieved_codeword[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "recieved_codeword";
}

SIGNAL("recieved_codeword[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "recieved_codeword";
}

SIGNAL("recieved_codeword[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "recieved_codeword";
}

SIGNAL("recieved_codeword[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "recieved_codeword";
}

SIGNAL("recvd_codeword")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("recvd_codeword[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "recvd_codeword";
}

SIGNAL("recvd_codeword[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "recvd_codeword";
}

SIGNAL("recvd_codeword[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "recvd_codeword";
}

SIGNAL("recvd_codeword[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "recvd_codeword";
}

SIGNAL("recvd_codeword[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "recvd_codeword";
}

SIGNAL("recvd_codeword[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "recvd_codeword";
}

SIGNAL("recvd_codeword[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "recvd_codeword";
}

SIGNAL("recvd_codeword[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "recvd_codeword";
}

SIGNAL("recvd_erasure_flag_0")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("recvd_erasure_flag_1")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("recvd_erasure_flag_2")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("send_data")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("send_erasure_polyn_0")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("send_erasure_polyn_1")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("send_erasure_polyn_2")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("send_syndr_polyn_0")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("send_syndr_polyn_1")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("send_syndr_polyn_2")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("send_unmodified_syndr_polyn_0")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("send_unmodified_syndr_polyn_1")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("send_unmodified_syndr_polyn_2")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("sigma_square")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 10;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("sigma_square[9]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "sigma_square";
}

SIGNAL("sigma_square[8]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "sigma_square";
}

SIGNAL("sigma_square[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "sigma_square";
}

SIGNAL("sigma_square[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "sigma_square";
}

SIGNAL("sigma_square[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "sigma_square";
}

SIGNAL("sigma_square[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "sigma_square";
}

SIGNAL("sigma_square[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "sigma_square";
}

SIGNAL("sigma_square[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "sigma_square";
}

SIGNAL("sigma_square[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "sigma_square";
}

SIGNAL("sigma_square[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "sigma_square";
}

SIGNAL("signal_count")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 4;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("signal_count[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "signal_count";
}

SIGNAL("signal_count[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "signal_count";
}

SIGNAL("signal_count[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "signal_count";
}

SIGNAL("signal_count[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "signal_count";
}

SIGNAL("start_erasure_polyn_compute")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("start_modified_syndrome_polyn_compute")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("state_case_0")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 3;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("state_case_0[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "state_case_0";
}

SIGNAL("state_case_0[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "state_case_0";
}

SIGNAL("state_case_0[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "state_case_0";
}

SIGNAL("state_case_1")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 3;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("state_case_1[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "state_case_1";
}

SIGNAL("state_case_1[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "state_case_1";
}

SIGNAL("state_case_1[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "state_case_1";
}

SIGNAL("state_case_2")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 3;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("state_case_2[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "state_case_2";
}

SIGNAL("state_case_2[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "state_case_2";
}

SIGNAL("state_case_2[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "state_case_2";
}

SIGNAL("syndr_coef_ready_0")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("syndr_coef_ready_1")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("syndr_coef_ready_2")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("syndrome")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("syndrome[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "syndrome";
}

SIGNAL("syndrome[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "syndrome";
}

SIGNAL("syndrome[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "syndrome";
}

SIGNAL("syndrome[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "syndrome";
}

SIGNAL("syndrome[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "syndrome";
}

SIGNAL("syndrome[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "syndrome";
}

SIGNAL("syndrome[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "syndrome";
}

SIGNAL("syndrome[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "syndrome";
}

SIGNAL("threshold_0")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 9;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("threshold_0[8]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "threshold_0";
}

SIGNAL("threshold_0[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "threshold_0";
}

SIGNAL("threshold_0[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "threshold_0";
}

SIGNAL("threshold_0[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "threshold_0";
}

SIGNAL("threshold_0[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "threshold_0";
}

SIGNAL("threshold_0[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "threshold_0";
}

SIGNAL("threshold_0[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "threshold_0";
}

SIGNAL("threshold_0[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "threshold_0";
}

SIGNAL("threshold_0[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "threshold_0";
}

SIGNAL("threshold_1")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 9;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("threshold_1[8]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "threshold_1";
}

SIGNAL("threshold_1[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "threshold_1";
}

SIGNAL("threshold_1[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "threshold_1";
}

SIGNAL("threshold_1[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "threshold_1";
}

SIGNAL("threshold_1[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "threshold_1";
}

SIGNAL("threshold_1[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "threshold_1";
}

SIGNAL("threshold_1[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "threshold_1";
}

SIGNAL("threshold_1[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "threshold_1";
}

SIGNAL("threshold_1[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "threshold_1";
}

SIGNAL("threshold_2")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 9;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("threshold_2[8]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "threshold_2";
}

SIGNAL("threshold_2[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "threshold_2";
}

SIGNAL("threshold_2[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "threshold_2";
}

SIGNAL("threshold_2[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "threshold_2";
}

SIGNAL("threshold_2[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "threshold_2";
}

SIGNAL("threshold_2[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "threshold_2";
}

SIGNAL("threshold_2[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "threshold_2";
}

SIGNAL("threshold_2[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "threshold_2";
}

SIGNAL("threshold_2[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "threshold_2";
}

SIGNAL("unmodified_syndr_polyn_0")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("unmodified_syndr_polyn_0[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "unmodified_syndr_polyn_0";
}

SIGNAL("unmodified_syndr_polyn_0[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "unmodified_syndr_polyn_0";
}

SIGNAL("unmodified_syndr_polyn_0[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "unmodified_syndr_polyn_0";
}

SIGNAL("unmodified_syndr_polyn_0[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "unmodified_syndr_polyn_0";
}

SIGNAL("unmodified_syndr_polyn_0[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "unmodified_syndr_polyn_0";
}

SIGNAL("unmodified_syndr_polyn_0[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "unmodified_syndr_polyn_0";
}

SIGNAL("unmodified_syndr_polyn_0[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "unmodified_syndr_polyn_0";
}

SIGNAL("unmodified_syndr_polyn_0[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "unmodified_syndr_polyn_0";
}

SIGNAL("unmodified_syndr_polyn_1")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("unmodified_syndr_polyn_1[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "unmodified_syndr_polyn_1";
}

SIGNAL("unmodified_syndr_polyn_1[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "unmodified_syndr_polyn_1";
}

SIGNAL("unmodified_syndr_polyn_1[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "unmodified_syndr_polyn_1";
}

SIGNAL("unmodified_syndr_polyn_1[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "unmodified_syndr_polyn_1";
}

SIGNAL("unmodified_syndr_polyn_1[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "unmodified_syndr_polyn_1";
}

SIGNAL("unmodified_syndr_polyn_1[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "unmodified_syndr_polyn_1";
}

SIGNAL("unmodified_syndr_polyn_1[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "unmodified_syndr_polyn_1";
}

SIGNAL("unmodified_syndr_polyn_1[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "unmodified_syndr_polyn_1";
}

SIGNAL("unmodified_syndr_polyn_2")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("unmodified_syndr_polyn_2[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "unmodified_syndr_polyn_2";
}

SIGNAL("unmodified_syndr_polyn_2[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "unmodified_syndr_polyn_2";
}

SIGNAL("unmodified_syndr_polyn_2[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "unmodified_syndr_polyn_2";
}

SIGNAL("unmodified_syndr_polyn_2[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "unmodified_syndr_polyn_2";
}

SIGNAL("unmodified_syndr_polyn_2[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "unmodified_syndr_polyn_2";
}

SIGNAL("unmodified_syndr_polyn_2[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "unmodified_syndr_polyn_2";
}

SIGNAL("unmodified_syndr_polyn_2[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "unmodified_syndr_polyn_2";
}

SIGNAL("unmodified_syndr_polyn_2[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "unmodified_syndr_polyn_2";
}

SIGNAL("wren")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("wren_decoder_in_buffer")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("write_addr")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("write_addr[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "write_addr";
}

SIGNAL("write_addr[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "write_addr";
}

SIGNAL("write_addr[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "write_addr";
}

SIGNAL("write_addr[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "write_addr";
}

SIGNAL("write_addr[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "write_addr";
}

SIGNAL("write_addr[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "write_addr";
}

SIGNAL("write_addr[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "write_addr";
}

SIGNAL("write_addr[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "write_addr";
}

TRANSITION_LIST("k_value[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 100000.0;
	}
}

TRANSITION_LIST("k_value[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 100000.0;
	}
}

TRANSITION_LIST("k_value[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 100000.0;
	}
}

TRANSITION_LIST("k_value[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100000.0;
	}
}

TRANSITION_LIST("k_value[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 100000.0;
	}
}

TRANSITION_LIST("k_value[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 100000.0;
	}
}

TRANSITION_LIST("k_value[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 100000.0;
	}
}

TRANSITION_LIST("k_value[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 100000.0;
	}
}

TRANSITION_LIST("sigma_value[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100000.0;
	}
}

TRANSITION_LIST("sigma_value[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 100000.0;
	}
}

TRANSITION_LIST("sigma_value[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100000.0;
	}
}

TRANSITION_LIST("sigma_value[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 100000.0;
	}
}

TRANSITION_LIST("sigma_value[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 100000.0;
	}
}

TRANSITION_LIST("reset")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 99980.0;
	}
}

TRANSITION_LIST("ext_clk")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 5000;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
		}
	}
}

TRANSITION_LIST("L_degree_0[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 68218.088;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 840.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 60.0;
			LEVEL 0 FOR 860.0;
		}
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 28981.912;
	}
}

TRANSITION_LIST("L_degree_0[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 68277.751;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 740.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 160.0;
			LEVEL 0 FOR 760.0;
		}
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 28822.249;
	}
}

TRANSITION_LIST("L_degree_0[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 68278.084;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 680.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 60.0;
			LEVEL 1 FOR 80.0;
			LEVEL 0 FOR 80.0;
			LEVEL 1 FOR 700.0;
		}
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 28821.916;
	}
}

TRANSITION_LIST("L_degree_0[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 68278.07;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 40.0;
		}
		LEVEL 1 FOR 680.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 60.0;
			NODE
			{
				REPEAT = 2;
				LEVEL 1 FOR 40.0;
				LEVEL 0 FOR 40.0;
			}
			LEVEL 1 FOR 700.0;
		}
		LEVEL 0 FOR 60.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 40.0;
		}
		LEVEL 1 FOR 28821.93;
	}
}

TRANSITION_LIST("L_degree_0[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 68277.644;
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 720.0;
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 740.0;
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 700.0;
		LEVEL 0 FOR 60.0;
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 28822.356;
	}
}

TRANSITION_LIST("L_degree_1[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100000.0;
	}
}

TRANSITION_LIST("L_degree_1[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100000.0;
	}
}

TRANSITION_LIST("L_degree_1[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100000.0;
	}
}

TRANSITION_LIST("L_degree_1[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100000.0;
	}
}

TRANSITION_LIST("L_degree_1[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100000.0;
	}
}

TRANSITION_LIST("L_degree_2[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 68197.897;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 860.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 60.0;
			LEVEL 0 FOR 880.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 60.0;
			LEVEL 0 FOR 900.0;
		}
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 27022.103;
	}
}

TRANSITION_LIST("L_degree_2[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 68257.215;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 760.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 160.0;
			LEVEL 0 FOR 780.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 160.0;
			LEVEL 0 FOR 800.0;
		}
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 26862.785;
	}
}

TRANSITION_LIST("L_degree_2[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 68257.264;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 700.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 60.0;
			LEVEL 1 FOR 80.0;
			LEVEL 0 FOR 80.0;
			LEVEL 1 FOR 720.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 60.0;
			LEVEL 1 FOR 80.0;
			LEVEL 0 FOR 80.0;
			LEVEL 1 FOR 740.0;
		}
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 26862.736;
	}
}

TRANSITION_LIST("L_degree_2[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 68258.269;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 40.0;
		}
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 720.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 40.0;
		}
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 740.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 40.0;
		}
		LEVEL 1 FOR 720.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 60.0;
			NODE
			{
				REPEAT = 2;
				LEVEL 1 FOR 40.0;
				LEVEL 0 FOR 40.0;
			}
			LEVEL 1 FOR 740.0;
		}
		LEVEL 0 FOR 60.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 40.0;
		}
		LEVEL 1 FOR 26861.731;
	}
}

TRANSITION_LIST("L_degree_2[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 68258.217;
		NODE
		{
			REPEAT = 5;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 660.0;
		LEVEL 0 FOR 60.0;
		NODE
		{
			REPEAT = 5;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 680.0;
		LEVEL 0 FOR 60.0;
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 760.0;
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 780.0;
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 740.0;
		LEVEL 0 FOR 60.0;
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 26861.783;
	}
}

TRANSITION_LIST("MEA_compute_done_0")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 71538.285;
		LEVEL 1 FOR 28461.715;
	}
}

TRANSITION_LIST("MEA_compute_done_1")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 67959.066;
		LEVEL 1 FOR 32040.934;
	}
}

TRANSITION_LIST("MEA_compute_done_2")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 73518.081;
		LEVEL 1 FOR 26481.919;
	}
}

TRANSITION_LIST("Q_degree_0[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 68217.735;
		LEVEL 1 FOR 300.0;
		LEVEL 0 FOR 600.0;
		LEVEL 1 FOR 300.0;
		LEVEL 0 FOR 620.0;
		LEVEL 1 FOR 280.0;
		LEVEL 0 FOR 640.0;
		LEVEL 1 FOR 280.0;
		LEVEL 0 FOR 28762.265;
	}
}

TRANSITION_LIST("Q_degree_0[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 67597.645;
		LEVEL 1 FOR 620.0;
		LEVEL 0 FOR 300.0;
		LEVEL 1 FOR 600.0;
		LEVEL 0 FOR 300.0;
		LEVEL 1 FOR 620.0;
		LEVEL 0 FOR 280.0;
		LEVEL 1 FOR 640.0;
		LEVEL 0 FOR 280.0;
		LEVEL 1 FOR 28762.355;
	}
}

TRANSITION_LIST("Q_degree_0[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 67597.662;
		LEVEL 1 FOR 620.0;
		LEVEL 0 FOR 300.0;
		LEVEL 1 FOR 600.0;
		LEVEL 0 FOR 300.0;
		LEVEL 1 FOR 620.0;
		LEVEL 0 FOR 280.0;
		LEVEL 1 FOR 640.0;
		LEVEL 0 FOR 280.0;
		LEVEL 1 FOR 28762.338;
	}
}

TRANSITION_LIST("Q_degree_0[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 67597.767;
		LEVEL 1 FOR 620.0;
		LEVEL 0 FOR 300.0;
		LEVEL 1 FOR 600.0;
		LEVEL 0 FOR 300.0;
		LEVEL 1 FOR 620.0;
		LEVEL 0 FOR 280.0;
		LEVEL 1 FOR 640.0;
		LEVEL 0 FOR 280.0;
		LEVEL 1 FOR 28762.233;
	}
}

TRANSITION_LIST("Q_degree_0[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 67598.094;
		LEVEL 1 FOR 620.0;
		LEVEL 0 FOR 300.0;
		LEVEL 1 FOR 600.0;
		LEVEL 0 FOR 300.0;
		LEVEL 1 FOR 620.0;
		LEVEL 0 FOR 280.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 900.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 28741.906;
	}
}

TRANSITION_LIST("Q_degree_1[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100000.0;
	}
}

TRANSITION_LIST("Q_degree_1[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 67639.119;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 32120.881;
	}
}

TRANSITION_LIST("Q_degree_1[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 67638.371;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 32121.629;
	}
}

TRANSITION_LIST("Q_degree_1[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 67638.558;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 32121.442;
	}
}

TRANSITION_LIST("Q_degree_1[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 67638.94;
		LEVEL 1 FOR 100.0;
		NODE
		{
			REPEAT = 4;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 32101.06;
	}
}

TRANSITION_LIST("Q_degree_2[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 68198.096;
		LEVEL 1 FOR 320.0;
		LEVEL 0 FOR 600.0;
		LEVEL 1 FOR 320.0;
		LEVEL 0 FOR 620.0;
		LEVEL 1 FOR 300.0;
		LEVEL 0 FOR 640.0;
		LEVEL 1 FOR 300.0;
		LEVEL 0 FOR 660.0;
		LEVEL 1 FOR 280.0;
		LEVEL 0 FOR 680.0;
		LEVEL 1 FOR 280.0;
		LEVEL 0 FOR 26801.904;
	}
}

TRANSITION_LIST("Q_degree_2[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 67577.73;
		LEVEL 1 FOR 620.0;
		LEVEL 0 FOR 320.0;
		LEVEL 1 FOR 600.0;
		LEVEL 0 FOR 320.0;
		LEVEL 1 FOR 620.0;
		LEVEL 0 FOR 300.0;
		LEVEL 1 FOR 640.0;
		LEVEL 0 FOR 300.0;
		LEVEL 1 FOR 660.0;
		LEVEL 0 FOR 280.0;
		LEVEL 1 FOR 680.0;
		LEVEL 0 FOR 280.0;
		LEVEL 1 FOR 26802.27;
	}
}

TRANSITION_LIST("Q_degree_2[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 67578.05;
		LEVEL 1 FOR 620.0;
		LEVEL 0 FOR 320.0;
		LEVEL 1 FOR 600.0;
		LEVEL 0 FOR 320.0;
		LEVEL 1 FOR 620.0;
		LEVEL 0 FOR 300.0;
		LEVEL 1 FOR 640.0;
		LEVEL 0 FOR 300.0;
		LEVEL 1 FOR 660.0;
		LEVEL 0 FOR 280.0;
		LEVEL 1 FOR 680.0;
		LEVEL 0 FOR 280.0;
		LEVEL 1 FOR 26801.95;
	}
}

TRANSITION_LIST("Q_degree_2[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 67577.696;
		LEVEL 1 FOR 620.0;
		LEVEL 0 FOR 320.0;
		LEVEL 1 FOR 600.0;
		LEVEL 0 FOR 320.0;
		LEVEL 1 FOR 620.0;
		LEVEL 0 FOR 300.0;
		LEVEL 1 FOR 640.0;
		LEVEL 0 FOR 300.0;
		LEVEL 1 FOR 660.0;
		LEVEL 0 FOR 280.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 920.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 26762.304;
	}
}

TRANSITION_LIST("Q_degree_2[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 67577.727;
		LEVEL 1 FOR 620.0;
		LEVEL 0 FOR 320.0;
		LEVEL 1 FOR 600.0;
		LEVEL 0 FOR 320.0;
		LEVEL 1 FOR 620.0;
		LEVEL 0 FOR 300.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 920.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 640.0;
		LEVEL 0 FOR 280.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 26762.273;
	}
}

TRANSITION_LIST("R_degree_0[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 67598.207;
		LEVEL 1 FOR 980.0;
		LEVEL 0 FOR 540.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 360.0;
			LEVEL 0 FOR 560.0;
		}
		LEVEL 1 FOR 360.0;
		LEVEL 0 FOR 28681.793;
	}
}

TRANSITION_LIST("R_degree_0[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 68578.087;
		LEVEL 1 FOR 540.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 360.0;
			LEVEL 1 FOR 560.0;
		}
		LEVEL 0 FOR 360.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 28521.913;
	}
}

TRANSITION_LIST("R_degree_0[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 68578.648;
		LEVEL 1 FOR 540.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 360.0;
			LEVEL 1 FOR 560.0;
		}
		LEVEL 0 FOR 360.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 28521.352;
	}
}

TRANSITION_LIST("R_degree_0[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 68578.114;
		LEVEL 1 FOR 540.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 360.0;
			LEVEL 1 FOR 560.0;
		}
		LEVEL 0 FOR 360.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 40.0;
		}
		LEVEL 1 FOR 28521.886;
	}
}

TRANSITION_LIST("R_degree_0[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 68578.061;
		LEVEL 1 FOR 540.0;
		LEVEL 0 FOR 360.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 900.0;
		}
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 28501.939;
	}
}

TRANSITION_LIST("R_degree_1[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 67638.425;
		LEVEL 1 FOR 32361.575;
	}
}

TRANSITION_LIST("R_degree_1[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100000.0;
	}
}

TRANSITION_LIST("R_degree_1[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100000.0;
	}
}

TRANSITION_LIST("R_degree_1[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100000.0;
	}
}

TRANSITION_LIST("R_degree_1[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100000.0;
	}
}

TRANSITION_LIST("R_degree_2[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 67577.233;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 540.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 380.0;
			LEVEL 0 FOR 560.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 380.0;
			LEVEL 0 FOR 580.0;
		}
		LEVEL 1 FOR 380.0;
		LEVEL 0 FOR 26702.767;
	}
}

TRANSITION_LIST("R_degree_2[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 68577.738;
		LEVEL 1 FOR 540.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 380.0;
			LEVEL 1 FOR 560.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 380.0;
			LEVEL 1 FOR 580.0;
		}
		LEVEL 0 FOR 380.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 26542.262;
	}
}

TRANSITION_LIST("R_degree_2[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 68577.635;
		LEVEL 1 FOR 540.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 380.0;
			LEVEL 1 FOR 560.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 380.0;
			LEVEL 1 FOR 580.0;
		}
		LEVEL 0 FOR 380.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 26542.365;
	}
}

TRANSITION_LIST("R_degree_2[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 68577.222;
		LEVEL 1 FOR 540.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 380.0;
			LEVEL 1 FOR 560.0;
		}
		LEVEL 0 FOR 380.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 920.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 40.0;
		}
		LEVEL 1 FOR 26542.778;
	}
}

TRANSITION_LIST("R_degree_2[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 68577.226;
		LEVEL 1 FOR 540.0;
		LEVEL 0 FOR 380.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 920.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 540.0;
			LEVEL 0 FOR 380.0;
		}
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 26522.774;
	}
}

TRANSITION_LIST("channel_char[14]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 61477.209;
		LEVEL 1 FOR 38522.791;
	}
}

TRANSITION_LIST("channel_char[13]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 61477.713;
		LEVEL 1 FOR 38522.287;
	}
}

TRANSITION_LIST("channel_char[12]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 61478.233;
		LEVEL 1 FOR 38521.767;
	}
}

TRANSITION_LIST("channel_char[11]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 61477.641;
		LEVEL 1 FOR 38522.359;
	}
}

TRANSITION_LIST("channel_char[10]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 61477.734;
		LEVEL 1 FOR 38522.266;
	}
}

TRANSITION_LIST("channel_char[9]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 61478.499;
		LEVEL 1 FOR 38521.501;
	}
}

TRANSITION_LIST("channel_char[8]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 10597.627;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 8160.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 24960.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 12480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 2880.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 38522.373;
	}
}

TRANSITION_LIST("channel_char[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 3158.7;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 7440.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 2880.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 5040.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 4800.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 3120.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 2400.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 9840.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 3840.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 9120.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 4320.0;
		LEVEL 1 FOR 38521.3;
	}
}

TRANSITION_LIST("channel_char[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1717.628;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1920.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 2160.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1440.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1200.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 960.0;
		}
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 3840.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 4080.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1680.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 3120.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 480.0;
		}
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 3840.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1440.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 4560.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 2880.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 38522.372;
	}
}

TRANSITION_LIST("channel_char[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 517.887;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1440.0;
		LEVEL 1 FOR 1440.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 1440.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 2640.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1920.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 480.0;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 480.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 1680.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1440.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1680.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 720.0;
		}
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1440.0;
		LEVEL 0 FOR 1920.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 38762.113;
	}
}

TRANSITION_LIST("channel_char[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 277.727;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 2640.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 1920.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 720.0;
			LEVEL 0 FOR 480.0;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1440.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 960.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 480.0;
		}
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1680.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 720.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 3840.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1200.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 480.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 39002.273;
	}
}

TRANSITION_LIST("channel_char[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 277.596;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1440.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 480.0;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 720.0;
		}
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 480.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 480.0;
			LEVEL 1 FOR 720.0;
		}
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1200.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 480.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1440.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1920.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 1920.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1680.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1440.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 39002.404;
	}
}

TRANSITION_LIST("channel_char[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 518.029;
		LEVEL 1 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 1920.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 960.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 720.0;
		}
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 720.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 720.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 480.0;
		}
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1680.0;
		LEVEL 0 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1440.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 720.0;
		}
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 38521.971;
	}
}

TRANSITION_LIST("channel_char[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 518.509;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1440.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 480.0;
		}
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 1440.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1200.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 1920.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 1200.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 1440.0;
		LEVEL 1 FOR 240.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 480.0;
		}
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1680.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 1920.0;
		LEVEL 1 FOR 240.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 480.0;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 480.0;
		}
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 480.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 480.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 1200.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 39001.491;
	}
}

TRANSITION_LIST("channel_char[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 278.794;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 1920.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 720.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 480.0;
		}
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 480.0;
		}
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 960.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 720.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1440.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 960.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 480.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 1440.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 1680.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 2640.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 480.0;
			LEVEL 0 FOR 480.0;
		}
		LEVEL 1 FOR 1440.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 480.0;
			LEVEL 1 FOR 480.0;
		}
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 39481.206;
	}
}

TRANSITION_LIST("corrected_cw[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 78957.818;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 140.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 80.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 80.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 80.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 40.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 60.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 100.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 60.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 40.0;
		}
		LEVEL 1 FOR 5160.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 140.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 80.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 80.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 80.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 40.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 60.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 100.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 60.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 40.0;
		}
		LEVEL 1 FOR 5160.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 102.182;
	}
}

TRANSITION_LIST("corrected_cw[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 78957.68;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 60.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 100.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 40.0;
		}
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 5140.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 60.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 100.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 40.0;
		}
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 5140.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 2.32;
	}
}

TRANSITION_LIST("corrected_cw[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 78977.895;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 80.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 60.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 180.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 60.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 20.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		NODE
		{
			REPEAT = 5;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 40.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 5240.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 80.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 60.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 180.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 60.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 20.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		NODE
		{
			REPEAT = 5;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 40.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 5240.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 80.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 2.105;
	}
}

TRANSITION_LIST("corrected_cw[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 78958.015;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 60.0;
			LEVEL 1 FOR 20.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 20.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 80.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 60.0;
			LEVEL 1 FOR 60.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 40.0;
		}
		LEVEL 1 FOR 180.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 5160.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 60.0;
			LEVEL 1 FOR 20.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 20.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 80.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 60.0;
			LEVEL 1 FOR 60.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 40.0;
		}
		LEVEL 1 FOR 180.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 5160.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 41.985;
	}
}

TRANSITION_LIST("corrected_cw[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 78957.77;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 80.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 4;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 60.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 5160.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 80.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 4;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 60.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 5160.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 2.23;
	}
}

TRANSITION_LIST("corrected_cw[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 78977.704;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 80.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 180.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 180.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 5160.0;
		LEVEL 0 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 80.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 180.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 180.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 5160.0;
		LEVEL 0 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 2.296;
	}
}

TRANSITION_LIST("corrected_cw[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 78977.781;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 60.0;
		}
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 20.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 40.0;
		}
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 40.0;
		}
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 40.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 5200.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 60.0;
		}
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 20.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 40.0;
		}
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 40.0;
		}
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 40.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 5200.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 60.0;
		}
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 22.219;
	}
}

TRANSITION_LIST("corrected_cw[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 78978.036;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 80.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 60.0;
		}
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 140.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 80.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 5140.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 80.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 60.0;
		}
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 140.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 80.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 5140.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 80.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 41.964;
	}
}

TRANSITION_LIST("corrected_cword_ready")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100000.0;
	}
}

TRANSITION_LIST("corrected_error_count[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100000.0;
	}
}

TRANSITION_LIST("corrected_error_count[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100000.0;
	}
}

TRANSITION_LIST("corrected_error_count[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100000.0;
	}
}

TRANSITION_LIST("corrected_error_count[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100000.0;
	}
}

TRANSITION_LIST("corrected_error_count[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100000.0;
	}
}

TRANSITION_LIST("corrected_error_count[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100000.0;
	}
}

TRANSITION_LIST("corrected_error_count[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 74938.518;
		LEVEL 1 FOR 25061.482;
	}
}

TRANSITION_LIST("corrected_error_count[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 74658.006;
		LEVEL 1 FOR 280.0;
		LEVEL 0 FOR 25061.994;
	}
}

TRANSITION_LIST("cutoff_threshold_0[23]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 319.43;
		LEVEL 1 FOR 61200.0;
		LEVEL 0 FOR 38480.57;
	}
}

TRANSITION_LIST("cutoff_threshold_0[22]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 319.449;
		LEVEL 1 FOR 61200.0;
		LEVEL 0 FOR 38480.551;
	}
}

TRANSITION_LIST("cutoff_threshold_0[21]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 319.399;
		LEVEL 1 FOR 61200.0;
		LEVEL 0 FOR 38480.601;
	}
}

TRANSITION_LIST("cutoff_threshold_0[20]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 319.801;
		LEVEL 1 FOR 61200.0;
		LEVEL 0 FOR 38480.199;
	}
}

TRANSITION_LIST("cutoff_threshold_0[19]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 319.269;
		LEVEL 1 FOR 61200.0;
		LEVEL 0 FOR 38480.731;
	}
}

TRANSITION_LIST("cutoff_threshold_0[18]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 319.79;
		LEVEL 1 FOR 61200.0;
		LEVEL 0 FOR 38480.21;
	}
}

TRANSITION_LIST("cutoff_threshold_0[17]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 319.392;
		LEVEL 1 FOR 61200.0;
		LEVEL 0 FOR 38480.608;
	}
}

TRANSITION_LIST("cutoff_threshold_0[16]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 319.475;
		LEVEL 1 FOR 61200.0;
		LEVEL 0 FOR 38480.525;
	}
}

TRANSITION_LIST("cutoff_threshold_0[15]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 320.052;
		LEVEL 1 FOR 56640.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 4320.0;
		LEVEL 0 FOR 38479.948;
	}
}

TRANSITION_LIST("cutoff_threshold_0[14]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 319.077;
		LEVEL 1 FOR 2880.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 7200.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 3120.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 4800.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 24240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 3120.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 12240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 38480.923;
	}
}

TRANSITION_LIST("cutoff_threshold_0[13]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 319.849;
		LEVEL 1 FOR 2640.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1920.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 2160.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 7920.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 3360.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1920.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 2400.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 2640.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1680.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1920.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 6000.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1440.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 5280.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 2880.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 38480.151;
	}
}

TRANSITION_LIST("cutoff_threshold_0[12]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 319.808;
		LEVEL 1 FOR 1440.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 5280.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 2400.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1440.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 720.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 480.0;
		}
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 2160.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1440.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 720.0;
		}
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 3120.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 2160.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 960.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 1440.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 2880.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 960.0;
		}
		LEVEL 0 FOR 38720.192;
	}
}

TRANSITION_LIST("cutoff_threshold_0[11]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2239.992;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1680.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 480.0;
		}
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 960.0;
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1440.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 480.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1440.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 480.0;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 38480.008;
	}
}

TRANSITION_LIST("cutoff_threshold_0[10]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 319.482;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 480.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 240.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 480.0;
			LEVEL 1 FOR 480.0;
		}
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		NODE
		{
			REPEAT = 4;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1440.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 480.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 480.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 720.0;
		}
		LEVEL 0 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 720.0;
		}
		LEVEL 0 FOR 1680.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 38720.518;
	}
}

TRANSITION_LIST("cutoff_threshold_0[9]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 319.898;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 2400.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1440.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 480.0;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 960.0;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 720.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1680.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1200.0;
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1680.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 38480.102;
	}
}

TRANSITION_LIST("cutoff_threshold_0[8]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 800.4;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 1200.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 720.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 480.0;
			LEVEL 0 FOR 480.0;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 720.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 480.0;
			LEVEL 1 FOR 240.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 960.0;
			LEVEL 1 FOR 480.0;
		}
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 1440.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 960.0;
		}
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 960.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 720.0;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 480.0;
		}
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 720.0;
		}
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 960.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 480.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 720.0;
			LEVEL 1 FOR 240.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 480.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 39439.6;
	}
}

TRANSITION_LIST("cutoff_threshold_0[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 320.103;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 480.0;
		}
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 1440.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 1920.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 480.0;
		}
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 480.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1440.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 480.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 720.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 480.0;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 1440.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 39439.897;
	}
}

TRANSITION_LIST("cutoff_threshold_0[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 319.787;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 480.0;
		}
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1440.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1920.0;
		LEVEL 0 FOR 1440.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 720.0;
			LEVEL 0 FOR 480.0;
		}
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 720.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 240.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 480.0;
			LEVEL 0 FOR 480.0;
		}
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 480.0;
		}
		LEVEL 0 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 480.0;
		}
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 1920.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 38720.213;
	}
}

TRANSITION_LIST("cutoff_threshold_0[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 799.159;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 240.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 480.0;
		}
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 2400.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 720.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 1680.0;
		LEVEL 0 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 1680.0;
		LEVEL 0 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 720.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 1440.0;
		LEVEL 0 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 480.0;
			LEVEL 0 FOR 1440.0;
		}
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 38960.841;
	}
}

TRANSITION_LIST("cutoff_threshold_0[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 320.118;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1440.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 480.0;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 720.0;
		}
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 480.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 480.0;
			LEVEL 1 FOR 720.0;
		}
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1200.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 480.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1440.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1920.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 1920.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1680.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1440.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 38959.882;
	}
}

TRANSITION_LIST("cutoff_threshold_0[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 559.394;
		LEVEL 1 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 1920.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 960.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 720.0;
		}
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 720.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 720.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 480.0;
		}
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1680.0;
		LEVEL 0 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1440.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 720.0;
		}
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 38480.606;
	}
}

TRANSITION_LIST("cutoff_threshold_0[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 559.82;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1440.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 480.0;
		}
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 1440.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1200.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 1920.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 1200.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 1440.0;
		LEVEL 1 FOR 240.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 480.0;
		}
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1680.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 1920.0;
		LEVEL 1 FOR 240.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 480.0;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 480.0;
		}
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 480.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 480.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 1200.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 38960.18;
	}
}

TRANSITION_LIST("cutoff_threshold_0[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 319.707;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 1920.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 720.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 480.0;
		}
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 480.0;
		}
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 960.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 720.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1440.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 960.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 480.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 1440.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 1680.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 2640.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 480.0;
			LEVEL 0 FOR 480.0;
		}
		LEVEL 1 FOR 1440.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 480.0;
			LEVEL 1 FOR 480.0;
		}
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 39440.293;
	}
}

TRANSITION_LIST("cutoff_threshold_0[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100000.0;
	}
}

TRANSITION_LIST("cutoff_threshold_1[23]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 319.321;
		LEVEL 1 FOR 61200.0;
		LEVEL 0 FOR 38480.679;
	}
}

TRANSITION_LIST("cutoff_threshold_1[22]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 319.496;
		LEVEL 1 FOR 61200.0;
		LEVEL 0 FOR 38480.504;
	}
}

TRANSITION_LIST("cutoff_threshold_1[21]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 319.371;
		LEVEL 1 FOR 61200.0;
		LEVEL 0 FOR 38480.629;
	}
}

TRANSITION_LIST("cutoff_threshold_1[20]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 319.584;
		LEVEL 1 FOR 61200.0;
		LEVEL 0 FOR 38480.416;
	}
}

TRANSITION_LIST("cutoff_threshold_1[19]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 319.323;
		LEVEL 1 FOR 61200.0;
		LEVEL 0 FOR 38480.677;
	}
}

TRANSITION_LIST("cutoff_threshold_1[18]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 319.264;
		LEVEL 1 FOR 61200.0;
		LEVEL 0 FOR 38480.736;
	}
}

TRANSITION_LIST("cutoff_threshold_1[17]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 319.432;
		LEVEL 1 FOR 61200.0;
		LEVEL 0 FOR 38480.568;
	}
}

TRANSITION_LIST("cutoff_threshold_1[16]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 319.508;
		LEVEL 1 FOR 56640.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 4320.0;
		LEVEL 0 FOR 38480.492;
	}
}

TRANSITION_LIST("cutoff_threshold_1[15]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 319.408;
		LEVEL 1 FOR 10320.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 3120.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 4800.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 24240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 3120.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 12240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 38480.592;
	}
}

TRANSITION_LIST("cutoff_threshold_1[14]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 319.393;
		LEVEL 1 FOR 2640.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 1680.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 3360.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 7920.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 4800.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1920.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 2400.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 2640.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1680.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 9600.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1440.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 5280.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 2880.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 38480.607;
	}
}

TRANSITION_LIST("cutoff_threshold_1[13]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 318.58;
		LEVEL 1 FOR 1440.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 1680.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 4320.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 480.0;
			LEVEL 1 FOR 480.0;
		}
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 2400.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 2880.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 2160.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1440.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 4320.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1920.0;
		LEVEL 0 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 1440.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 3360.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 2160.0;
		LEVEL 0 FOR 38721.42;
	}
}

TRANSITION_LIST("cutoff_threshold_1[12]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2239.375;
		LEVEL 1 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 720.0;
			LEVEL 1 FOR 480.0;
			LEVEL 0 FOR 720.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 720.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 480.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 480.0;
		}
		LEVEL 1 FOR 960.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 480.0;
		}
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1920.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 2160.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1680.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 960.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 480.0;
		}
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 38480.625;
	}
}

TRANSITION_LIST("cutoff_threshold_1[11]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 318.438;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1920.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1440.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 1440.0;
		LEVEL 1 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 2160.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 720.0;
			LEVEL 1 FOR 240.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 1920.0;
		LEVEL 0 FOR 480.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1440.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 1680.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 38481.562;
	}
}

TRANSITION_LIST("cutoff_threshold_1[10]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 318.968;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 480.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 720.0;
		}
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 960.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 960.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 1200.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 480.0;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 960.0;
		}
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 2880.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1440.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1440.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1440.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1920.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 480.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 38721.032;
	}
}

TRANSITION_LIST("cutoff_threshold_1[9]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 318.58;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1440.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 480.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 960.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 480.0;
			LEVEL 1 FOR 1200.0;
		}
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 720.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1440.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 720.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 480.0;
			LEVEL 0 FOR 480.0;
		}
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 960.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 1440.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 480.0;
			LEVEL 1 FOR 480.0;
		}
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1440.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 480.0;
		}
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 1440.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 480.0;
			LEVEL 0 FOR 480.0;
		}
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1440.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 38961.42;
	}
}

TRANSITION_LIST("cutoff_threshold_1[8]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 319.624;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 960.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 480.0;
		}
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 1200.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 480.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 480.0;
		}
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 1440.0;
		LEVEL 0 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 480.0;
			LEVEL 1 FOR 480.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 480.0;
		}
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 38720.376;
	}
}

TRANSITION_LIST("cutoff_threshold_1[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1038.412;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 720.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 960.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 960.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 480.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 1920.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 720.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 1440.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 1920.0;
		LEVEL 1 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 480.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 480.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 480.0;
		}
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 38481.588;
	}
}

TRANSITION_LIST("cutoff_threshold_1[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 558.861;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 720.0;
		}
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 1440.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 1440.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 480.0;
			LEVEL 1 FOR 480.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 480.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 1440.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 720.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 960.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 1440.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 960.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1440.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 1440.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 38721.139;
	}
}

TRANSITION_LIST("cutoff_threshold_1[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2239.843;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 1200.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 960.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 480.0;
		}
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 1440.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 480.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 480.0;
		}
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 38720.157;
	}
}

TRANSITION_LIST("cutoff_threshold_1[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 319.868;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1920.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 1440.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 1440.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1920.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 1440.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1200.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 1920.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 1440.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 38960.132;
	}
}

TRANSITION_LIST("cutoff_threshold_1[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 318.447;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 720.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 480.0;
		}
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 480.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 1440.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1200.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 480.0;
		}
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 720.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 720.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 480.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 1440.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		NODE
		{
			REPEAT = 4;
			LEVEL 0 FOR 480.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 480.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 480.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 38481.553;
	}
}

TRANSITION_LIST("cutoff_threshold_1[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 799.571;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1920.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 1440.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1440.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 480.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 480.0;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 480.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 960.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 480.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 2160.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 1680.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 38480.429;
	}
}

TRANSITION_LIST("cutoff_threshold_1[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 319.373;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1440.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 960.0;
			LEVEL 1 FOR 720.0;
		}
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 1440.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 480.0;
		}
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 720.0;
		}
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 240.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 480.0;
		}
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 1200.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 1440.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 1440.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 1440.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 480.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1680.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 38960.627;
	}
}

TRANSITION_LIST("cutoff_threshold_1[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 319.321;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 1920.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 720.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 480.0;
		}
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 480.0;
		}
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 960.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 720.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1440.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 960.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 480.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 1440.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 1680.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 2640.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 480.0;
			LEVEL 0 FOR 480.0;
		}
		LEVEL 1 FOR 1440.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 480.0;
			LEVEL 1 FOR 480.0;
		}
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 39440.679;
	}
}

TRANSITION_LIST("cutoff_threshold_2[23]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 318.918;
		LEVEL 1 FOR 61200.0;
		LEVEL 0 FOR 38481.082;
	}
}

TRANSITION_LIST("cutoff_threshold_2[22]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 319.22;
		LEVEL 1 FOR 61200.0;
		LEVEL 0 FOR 38480.78;
	}
}

TRANSITION_LIST("cutoff_threshold_2[21]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 319.009;
		LEVEL 1 FOR 61200.0;
		LEVEL 0 FOR 38480.991;
	}
}

TRANSITION_LIST("cutoff_threshold_2[20]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 319.298;
		LEVEL 1 FOR 61200.0;
		LEVEL 0 FOR 38480.702;
	}
}

TRANSITION_LIST("cutoff_threshold_2[19]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 319.303;
		LEVEL 1 FOR 61200.0;
		LEVEL 0 FOR 38480.697;
	}
}

TRANSITION_LIST("cutoff_threshold_2[18]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 319.461;
		LEVEL 1 FOR 61200.0;
		LEVEL 0 FOR 38480.539;
	}
}

TRANSITION_LIST("cutoff_threshold_2[17]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 319.235;
		LEVEL 1 FOR 61200.0;
		LEVEL 0 FOR 38480.765;
	}
}

TRANSITION_LIST("cutoff_threshold_2[16]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 319.03;
		LEVEL 1 FOR 61200.0;
		LEVEL 0 FOR 38480.97;
	}
}

TRANSITION_LIST("cutoff_threshold_2[15]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 319.718;
		LEVEL 1 FOR 56640.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 4320.0;
		LEVEL 0 FOR 38480.282;
	}
}

TRANSITION_LIST("cutoff_threshold_2[14]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 319.257;
		LEVEL 1 FOR 10320.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 3120.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 4800.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 24960.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 3120.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 12240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 38480.743;
	}
}

TRANSITION_LIST("cutoff_threshold_2[13]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 319.464;
		LEVEL 1 FOR 2880.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1680.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 4800.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 8160.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 4800.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1920.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 2400.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 2640.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 3360.0;
		}
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 6000.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1440.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 9840.0;
		LEVEL 0 FOR 38480.536;
	}
}

TRANSITION_LIST("cutoff_threshold_2[12]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 319.295;
		LEVEL 1 FOR 1440.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1680.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 2160.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1680.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1440.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 6000.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1680.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 5520.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 480.0;
		}
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 240.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 480.0;
			LEVEL 0 FOR 480.0;
		}
		LEVEL 1 FOR 5040.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1920.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1440.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 3600.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 960.0;
		}
		LEVEL 0 FOR 38720.705;
	}
}

TRANSITION_LIST("cutoff_threshold_2[11]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 319.318;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 720.0;
		}
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 720.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 480.0;
		}
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 480.0;
			LEVEL 1 FOR 240.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 720.0;
		}
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 480.0;
		}
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 1440.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 480.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 38480.682;
	}
}

TRANSITION_LIST("cutoff_threshold_2[10]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 559.084;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 720.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 720.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 720.0;
		}
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 720.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 480.0;
			LEVEL 1 FOR 480.0;
		}
		LEVEL 0 FOR 480.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 2160.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1440.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 480.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 960.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 2400.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 38480.916;
	}
}

TRANSITION_LIST("cutoff_threshold_2[9]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 799.281;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 960.0;
		}
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 720.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 720.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 2160.0;
		LEVEL 0 FOR 720.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 720.0;
			LEVEL 0 FOR 240.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 480.0;
		}
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 720.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 960.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 1440.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 480.0;
		}
		LEVEL 0 FOR 720.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 480.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 38480.719;
	}
}

TRANSITION_LIST("cutoff_threshold_2[8]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 798.93;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1440.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 480.0;
		}
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 1920.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 960.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 1440.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 720.0;
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 480.0;
		}
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 480.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1440.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 1440.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 960.0;
		NODE
		{
			REPEAT = 4;
			LEVEL 0 FOR 480.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 720.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 480.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1680.0;
		LEVEL 0 FOR 38961.07;
	}
}

TRANSITION_LIST("cutoff_threshold_2[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 319.457;
		LEVEL 1 FOR 2400.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 960.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 480.0;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 1680.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 1200.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 480.0;
			LEVEL 0 FOR 720.0;
		}
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 960.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 480.0;
			LEVEL 0 FOR 240.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 480.0;
			LEVEL 0 FOR 720.0;
		}
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 38480.543;
	}
}

TRANSITION_LIST("cutoff_threshold_2[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 559.076;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 1440.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 480.0;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 720.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 480.0;
			LEVEL 1 FOR 480.0;
		}
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1920.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 480.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1680.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 1920.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1920.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 1440.0;
		LEVEL 1 FOR 38480.924;
	}
}

TRANSITION_LIST("cutoff_threshold_2[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 319.288;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 720.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1440.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 960.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 960.0;
			LEVEL 0 FOR 480.0;
		}
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1440.0;
		LEVEL 0 FOR 720.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 720.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1680.0;
		LEVEL 1 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1680.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 480.0;
		}
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 480.0;
		}
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 480.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1440.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 38480.712;
	}
}

TRANSITION_LIST("cutoff_threshold_2[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 559.482;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 720.0;
		}
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 480.0;
		}
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1440.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1680.0;
		LEVEL 0 FOR 1440.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1440.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 960.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 480.0;
			LEVEL 0 FOR 240.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 480.0;
		}
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 720.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 38480.518;
	}
}

TRANSITION_LIST("cutoff_threshold_2[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 319.436;
		LEVEL 1 FOR 1920.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 1920.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 720.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		NODE
		{
			REPEAT = 4;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 480.0;
		}
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 960.0;
			LEVEL 1 FOR 480.0;
		}
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1440.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 720.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 480.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 240.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 480.0;
		}
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 480.0;
			LEVEL 0 FOR 480.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 960.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 38480.564;
	}
}

TRANSITION_LIST("cutoff_threshold_2[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 319.503;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 1440.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 2160.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 2640.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 960.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 480.0;
		}
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1680.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 960.0;
		NODE
		{
			REPEAT = 4;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 480.0;
		}
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 960.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 480.0;
		}
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 2400.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 38480.497;
	}
}

TRANSITION_LIST("cutoff_threshold_2[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 558.855;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1440.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 480.0;
		}
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 1440.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1200.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 1920.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 1200.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 1440.0;
		LEVEL 1 FOR 240.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 480.0;
		}
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1680.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 1920.0;
		LEVEL 1 FOR 240.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 480.0;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 480.0;
		}
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 480.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 480.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 1200.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 38961.145;
	}
}

TRANSITION_LIST("cutoff_threshold_2[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 318.857;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 1920.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 720.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 480.0;
		}
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 480.0;
		}
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 960.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 720.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1440.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 960.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 480.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 1440.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 1680.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 2640.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 480.0;
			LEVEL 0 FOR 480.0;
		}
		LEVEL 1 FOR 1440.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 480.0;
			LEVEL 1 FOR 480.0;
		}
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 39441.143;
	}
}

TRANSITION_LIST("cutoff_threshold_ready")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100000.0;
	}
}

TRANSITION_LIST("cw_data[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 278.874;
		LEVEL 1 FOR 1440.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 1920.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 1680.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 960.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 960.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 960.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 480.0;
		}
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 720.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 480.0;
		}
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1440.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 480.0;
			LEVEL 1 FOR 480.0;
		}
		LEVEL 0 FOR 1200.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 720.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 480.0;
		}
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 1440.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1680.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 720.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 720.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1680.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 480.0;
		}
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 38521.126;
	}
}

TRANSITION_LIST("cw_data[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 278.828;
		LEVEL 1 FOR 1440.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 1440.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1680.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 1440.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 720.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 1200.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 480.0;
		}
		LEVEL 0 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 480.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 720.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 480.0;
		}
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 38521.172;
	}
}

TRANSITION_LIST("cw_data[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 518.395;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 960.0;
		}
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1440.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 720.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1920.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 2160.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 720.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 480.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1440.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 480.0;
			LEVEL 1 FOR 240.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 480.0;
		}
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1440.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		NODE
		{
			REPEAT = 5;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 480.0;
		}
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 39481.605;
	}
}

TRANSITION_LIST("cw_data[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 277.876;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 1440.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 720.0;
			LEVEL 1 FOR 240.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 480.0;
			LEVEL 1 FOR 240.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1440.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1440.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1920.0;
		LEVEL 1 FOR 960.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 720.0;
			LEVEL 1 FOR 720.0;
			LEVEL 0 FOR 480.0;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 240.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 480.0;
		}
		LEVEL 1 FOR 2160.0;
		LEVEL 0 FOR 1680.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1680.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 38762.124;
	}
}

TRANSITION_LIST("cw_data[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 279.308;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 960.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 480.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 480.0;
		NODE
		{
			REPEAT = 4;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 1440.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 1920.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 480.0;
		}
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 720.0;
		}
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 38760.692;
	}
}

TRANSITION_LIST("cw_data[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 518.231;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1680.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1440.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 960.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 480.0;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 2160.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 1440.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1440.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 2160.0;
		LEVEL 1 FOR 1440.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 38521.769;
	}
}

TRANSITION_LIST("cw_data[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 518.889;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 480.0;
			LEVEL 0 FOR 720.0;
		}
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 1440.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 240.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 480.0;
		}
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 720.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 480.0;
		}
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 480.0;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 480.0;
		}
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 1440.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 39001.111;
	}
}

TRANSITION_LIST("cw_data[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 518.141;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 960.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 480.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1440.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 720.0;
		}
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1680.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 960.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1440.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 480.0;
		}
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 480.0;
		}
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 1440.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 38521.859;
	}
}

TRANSITION_LIST("cycle[8]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100000.0;
	}
}

TRANSITION_LIST("cycle[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100000.0;
	}
}

TRANSITION_LIST("cycle[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100000.0;
	}
}

TRANSITION_LIST("cycle[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100000.0;
	}
}

TRANSITION_LIST("cycle[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100000.0;
	}
}

TRANSITION_LIST("cycle[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100000.0;
	}
}

TRANSITION_LIST("cycle[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100000.0;
	}
}

TRANSITION_LIST("cycle[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100000.0;
	}
}

TRANSITION_LIST("cycle[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100000.0;
	}
}

TRANSITION_LIST("decode_strobe")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 100000.0;
	}
}

TRANSITION_LIST("decoder_rd_addr[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 64057.8;
		LEVEL 1 FOR 35942.2;
	}
}

TRANSITION_LIST("decoder_rd_addr[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 62777.991;
		LEVEL 1 FOR 1280.0;
		LEVEL 0 FOR 1280.0;
		LEVEL 1 FOR 34662.009;
	}
}

TRANSITION_LIST("decoder_rd_addr[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 62137.514;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 640.0;
			LEVEL 0 FOR 640.0;
		}
		LEVEL 1 FOR 34022.486;
	}
}

TRANSITION_LIST("decoder_rd_addr[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 61817.362;
		NODE
		{
			REPEAT = 7;
			LEVEL 1 FOR 320.0;
			LEVEL 0 FOR 320.0;
		}
		LEVEL 1 FOR 33702.638;
	}
}

TRANSITION_LIST("decoder_rd_addr[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 61658.089;
		NODE
		{
			REPEAT = 15;
			LEVEL 1 FOR 160.0;
			LEVEL 0 FOR 160.0;
		}
		LEVEL 1 FOR 33541.911;
	}
}

TRANSITION_LIST("decoder_rd_addr[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 61578.646;
		NODE
		{
			REPEAT = 31;
			LEVEL 1 FOR 80.0;
			LEVEL 0 FOR 80.0;
		}
		LEVEL 1 FOR 33461.354;
	}
}

TRANSITION_LIST("decoder_rd_addr[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 61539.106;
		NODE
		{
			REPEAT = 63;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 40.0;
		}
		LEVEL 1 FOR 33420.894;
	}
}

TRANSITION_LIST("decoder_rd_addr[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 61519.118;
		NODE
		{
			REPEAT = 127;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 33400.882;
	}
}

TRANSITION_LIST("derivative_error_location[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100000.0;
	}
}

TRANSITION_LIST("derivative_error_location[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100000.0;
	}
}

TRANSITION_LIST("derivative_error_location[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100000.0;
	}
}

TRANSITION_LIST("derivative_error_location[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100000.0;
	}
}

TRANSITION_LIST("derivative_error_location[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100000.0;
	}
}

TRANSITION_LIST("derivative_error_location[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100000.0;
	}
}

TRANSITION_LIST("derivative_error_location[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100000.0;
	}
}

TRANSITION_LIST("derivative_error_location[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100000.0;
	}
}

TRANSITION_LIST("erase_position_0[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 67061.332;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 32878.668;
	}
}

TRANSITION_LIST("erase_position_0[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 67058.876;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 32921.124;
	}
}

TRANSITION_LIST("erase_position_0[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 67058.881;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 32841.119;
	}
}

TRANSITION_LIST("erase_position_0[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 67078.856;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 32881.144;
	}
}

TRANSITION_LIST("erase_position_0[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 67078.881;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 32861.119;
	}
}

TRANSITION_LIST("erase_position_0[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 67078.816;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 32861.184;
	}
}

TRANSITION_LIST("erase_position_0[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 67059.163;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 32880.837;
	}
}

TRANSITION_LIST("erase_position_0[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 67059.552;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 32860.448;
	}
}

TRANSITION_LIST("erase_position_1[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 67058.536;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 32841.464;
	}
}

TRANSITION_LIST("erase_position_1[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 67098.687;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 32881.313;
	}
}

TRANSITION_LIST("erase_position_1[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 67058.616;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 32801.384;
	}
}

TRANSITION_LIST("erase_position_1[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 67059.116;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 32840.884;
	}
}

TRANSITION_LIST("erase_position_1[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 67078.495;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 32821.505;
	}
}

TRANSITION_LIST("erase_position_1[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 67078.55;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 32821.45;
	}
}

TRANSITION_LIST("erase_position_1[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 67058.713;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 32841.287;
	}
}

TRANSITION_LIST("erase_position_1[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 67079.304;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 32820.696;
	}
}

TRANSITION_LIST("erase_position_2[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 67059.314;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 32900.686;
	}
}

TRANSITION_LIST("erase_position_2[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 67059.064;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 32920.936;
	}
}

TRANSITION_LIST("erase_position_2[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 67057.84;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 32862.16;
	}
}

TRANSITION_LIST("erase_position_2[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 67079.302;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 32900.698;
	}
}

TRANSITION_LIST("erase_position_2[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 67079.128;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 32880.872;
	}
}

TRANSITION_LIST("erase_position_2[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 67078.576;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 32881.424;
	}
}

TRANSITION_LIST("erase_position_2[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 67058.843;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 32921.157;
	}
}

TRANSITION_LIST("erase_position_2[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 67058.983;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 32881.017;
	}
}

TRANSITION_LIST("erasure")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100000.0;
	}
}

TRANSITION_LIST("erasure_coef_ready_0")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 67198.035;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 32681.965;
	}
}

TRANSITION_LIST("erasure_coef_ready_1")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 67238.475;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 32601.525;
	}
}

TRANSITION_LIST("erasure_coef_ready_2")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 67178.039;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 32721.961;
	}
}

TRANSITION_LIST("erasure_flag_0")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 19238.312;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 24960.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 3120.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 9120.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 2880.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 39481.688;
	}
}

TRANSITION_LIST("erasure_flag_1")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 10838.342;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 3120.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 4800.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 24960.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 3120.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 9120.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 2880.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 39481.658;
	}
}

TRANSITION_LIST("erasure_flag_2")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 19238.272;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 24960.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 12480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 2880.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 39481.728;
	}
}

TRANSITION_LIST("erasure_polyn_0[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 67198.589;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 32741.411;
	}
}

TRANSITION_LIST("erasure_polyn_0[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 67199.722;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 32700.278;
	}
}

TRANSITION_LIST("erasure_polyn_0[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 67198.559;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 32701.441;
	}
}

TRANSITION_LIST("erasure_polyn_0[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 67218.495;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 32721.505;
	}
}

TRANSITION_LIST("erasure_polyn_0[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 67198.697;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 32721.303;
	}
}

TRANSITION_LIST("erasure_polyn_0[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 67259.467;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 32700.533;
	}
}

TRANSITION_LIST("erasure_polyn_0[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 67238.289;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 32741.711;
	}
}

TRANSITION_LIST("erasure_polyn_0[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 67218.993;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 32701.007;
	}
}

TRANSITION_LIST("erasure_polyn_1[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 67237.346;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 32662.654;
	}
}

TRANSITION_LIST("erasure_polyn_1[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 67237.657;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 32642.343;
	}
}

TRANSITION_LIST("erasure_polyn_1[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 67297.625;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 32622.375;
	}
}

TRANSITION_LIST("erasure_polyn_1[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 67237.749;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 32662.251;
	}
}

TRANSITION_LIST("erasure_polyn_1[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 67257.629;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 32642.371;
	}
}

TRANSITION_LIST("erasure_polyn_1[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 67237.659;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 32622.341;
	}
}

TRANSITION_LIST("erasure_polyn_1[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 67237.623;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 32662.377;
	}
}

TRANSITION_LIST("erasure_polyn_1[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 67237.65;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 32662.35;
	}
}

TRANSITION_LIST("erasure_polyn_2[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 67198.093;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 32761.907;
	}
}

TRANSITION_LIST("erasure_polyn_2[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 67177.978;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 32802.022;
	}
}

TRANSITION_LIST("erasure_polyn_2[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 67197.788;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 32742.212;
	}
}

TRANSITION_LIST("erasure_polyn_2[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 67177.731;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 32782.269;
	}
}

TRANSITION_LIST("erasure_polyn_2[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100000.0;
	}
}

TRANSITION_LIST("erasure_polyn_2[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 67198.087;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 32741.913;
	}
}

TRANSITION_LIST("erasure_polyn_2[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 67178.49;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 32741.51;
	}
}

TRANSITION_LIST("erasure_polyn_2[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100000.0;
	}
}

TRANSITION_LIST("erasures_absent_0")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100000.0;
	}
}

TRANSITION_LIST("erasures_absent_1")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100000.0;
	}
}

TRANSITION_LIST("erasures_absent_2")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100000.0;
	}
}

TRANSITION_LIST("errata_loc_coefs_0[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 71697.786;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 28242.214;
	}
}

TRANSITION_LIST("errata_loc_coefs_0[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 71638.043;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 28241.957;
	}
}

TRANSITION_LIST("errata_loc_coefs_0[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 71618.03;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 28241.97;
	}
}

TRANSITION_LIST("errata_loc_coefs_0[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 71617.553;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 28242.447;
	}
}

TRANSITION_LIST("errata_loc_coefs_0[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 71617.42;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 28262.58;
	}
}

TRANSITION_LIST("errata_loc_coefs_0[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 71677.802;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 28262.198;
	}
}

TRANSITION_LIST("errata_loc_coefs_0[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 71618.277;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 28301.723;
	}
}

TRANSITION_LIST("errata_loc_coefs_0[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 71617.795;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 28262.205;
	}
}

TRANSITION_LIST("errata_loc_coefs_1[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 68039.424;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 31860.576;
	}
}

TRANSITION_LIST("errata_loc_coefs_1[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 68039.59;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 31840.41;
	}
}

TRANSITION_LIST("errata_loc_coefs_1[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 68099.219;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 31820.781;
	}
}

TRANSITION_LIST("errata_loc_coefs_1[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 68038.737;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 31861.263;
	}
}

TRANSITION_LIST("errata_loc_coefs_1[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 68059.732;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 31840.268;
	}
}

TRANSITION_LIST("errata_loc_coefs_1[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 68039.764;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 31820.236;
	}
}

TRANSITION_LIST("errata_loc_coefs_1[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 68039.238;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 31860.762;
	}
}

TRANSITION_LIST("errata_loc_coefs_1[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 68039.636;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 31860.364;
	}
}

TRANSITION_LIST("errata_loc_coefs_2[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 73658.546;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 26261.454;
	}
}

TRANSITION_LIST("errata_loc_coefs_2[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 73598.921;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 26261.079;
	}
}

TRANSITION_LIST("errata_loc_coefs_2[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100000.0;
	}
}

TRANSITION_LIST("errata_loc_coefs_2[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 73658.386;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 26321.614;
	}
}

TRANSITION_LIST("errata_loc_coefs_2[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 73598.471;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 26261.529;
	}
}

TRANSITION_LIST("errata_loc_coefs_2[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 73598.237;
		LEVEL 1 FOR 60.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 26261.763;
	}
}

TRANSITION_LIST("errata_loc_coefs_2[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 73598.568;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 26261.432;
	}
}

TRANSITION_LIST("errata_loc_coefs_2[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 73658.086;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 26281.914;
	}
}

TRANSITION_LIST("errata_magnitude_coefs_0[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 71577.59;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 28262.41;
	}
}

TRANSITION_LIST("errata_magnitude_coefs_0[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 71677.619;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 28262.381;
	}
}

TRANSITION_LIST("errata_magnitude_coefs_0[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 71577.869;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 28282.131;
	}
}

TRANSITION_LIST("errata_magnitude_coefs_0[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 71578.298;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 28261.702;
	}
}

TRANSITION_LIST("errata_magnitude_coefs_0[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 71577.901;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 28262.099;
	}
}

TRANSITION_LIST("errata_magnitude_coefs_0[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 71577.424;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 28342.576;
	}
}

TRANSITION_LIST("errata_magnitude_coefs_0[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 71617.834;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 28262.166;
	}
}

TRANSITION_LIST("errata_magnitude_coefs_0[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 71577.594;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 28262.406;
	}
}

TRANSITION_LIST("errata_magnitude_coefs_1[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 68098.99;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 31841.01;
	}
}

TRANSITION_LIST("errata_magnitude_coefs_1[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 68039.52;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 31880.48;
	}
}

TRANSITION_LIST("errata_magnitude_coefs_1[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 68059.229;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 31880.771;
	}
}

TRANSITION_LIST("errata_magnitude_coefs_1[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 68059.002;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 31840.998;
	}
}

TRANSITION_LIST("errata_magnitude_coefs_1[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 68039.032;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 31840.968;
	}
}

TRANSITION_LIST("errata_magnitude_coefs_1[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 68039.042;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 31940.958;
	}
}

TRANSITION_LIST("errata_magnitude_coefs_1[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 68059.258;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 31880.742;
	}
}

TRANSITION_LIST("errata_magnitude_coefs_1[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 67999.33;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 31840.67;
	}
}

TRANSITION_LIST("errata_magnitude_coefs_2[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 73598.582;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 26281.418;
	}
}

TRANSITION_LIST("errata_magnitude_coefs_2[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 73598.295;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 26301.705;
	}
}

TRANSITION_LIST("errata_magnitude_coefs_2[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 73619.059;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 26280.941;
	}
}

TRANSITION_LIST("errata_magnitude_coefs_2[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 73557.998;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 26302.002;
	}
}

TRANSITION_LIST("errata_magnitude_coefs_2[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 73618.802;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 26321.198;
	}
}

TRANSITION_LIST("errata_magnitude_coefs_2[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 73557.827;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 26322.173;
	}
}

TRANSITION_LIST("errata_magnitude_coefs_2[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 73638.602;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 26281.398;
	}
}

TRANSITION_LIST("errata_magnitude_coefs_2[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 73558.61;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 26341.39;
	}
}

TRANSITION_LIST("error_location_0[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 73778.921;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 60.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 180.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 80.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 60.0;
		}
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 40.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 21121.079;
	}
}

TRANSITION_LIST("error_location_0[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 73778.448;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 40.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 140.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 180.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 21121.552;
	}
}

TRANSITION_LIST("error_location_0[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 73779.358;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 100.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 180.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 100.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 20.0;
		}
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 40.0;
		}
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 21120.642;
	}
}

TRANSITION_LIST("error_location_0[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 73777.654;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 20.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 40.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 100.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 40.0;
		}
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 260.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 21162.346;
	}
}

TRANSITION_LIST("error_location_0[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 73798.296;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 60.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 160.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 100.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 40.0;
		}
		LEVEL 1 FOR 20.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 40.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 80.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 100.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 21181.704;
	}
}

TRANSITION_LIST("error_location_0[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 73799.052;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 40.0;
		}
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 60.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 80.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 60.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 21120.948;
	}
}

TRANSITION_LIST("error_location_0[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 73778.26;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 100.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 60.0;
		}
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 80.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 40.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 21121.74;
	}
}

TRANSITION_LIST("error_location_0[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 73778.919;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 80.0;
		}
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 20.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 80.0;
		NODE
		{
			REPEAT = 4;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 60.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 60.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 20.0;
		}
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 21161.081;
	}
}

TRANSITION_LIST("error_location_1[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 73839.092;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 100.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 40.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 80.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 80.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 21120.908;
	}
}

TRANSITION_LIST("error_location_1[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 73798.298;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 40.0;
		}
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 20.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 40.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 80.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 120.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 20.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 20.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 40.0;
		}
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 220.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 60.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 21181.702;
	}
}

TRANSITION_LIST("error_location_1[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 73778.891;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 100.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 40.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 60.0;
		}
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 80.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 80.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 60.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 120.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 40.0;
		}
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 21141.109;
	}
}

TRANSITION_LIST("error_location_1[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 73778.916;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 40.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 80.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 20.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 20.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 20.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 60.0;
			LEVEL 0 FOR 40.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 180.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 60.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 21121.084;
	}
}

TRANSITION_LIST("error_location_1[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 73778.531;
		LEVEL 1 FOR 80.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 60.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 140.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 60.0;
		}
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 20.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 60.0;
		}
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 140.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 20.0;
		}
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 140.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 60.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 40.0;
		}
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 21121.469;
	}
}

TRANSITION_LIST("error_location_1[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 73818.047;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 120.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 60.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 60.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 21121.953;
	}
}

TRANSITION_LIST("error_location_1[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 73778.547;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 120.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 120.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 5;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 100.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 60.0;
			LEVEL 0 FOR 40.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 21141.453;
	}
}

TRANSITION_LIST("error_location_1[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 73898.801;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 140.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 100.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 100.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 80.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 21141.199;
	}
}

TRANSITION_LIST("error_location_2[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 73797.987;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 60.0;
			LEVEL 0 FOR 40.0;
		}
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 80.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 100.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 80.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 100.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 21122.013;
	}
}

TRANSITION_LIST("error_location_2[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 73817.397;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 80.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 60.0;
		}
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 21142.603;
	}
}

TRANSITION_LIST("error_location_2[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 73798.151;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 80.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 300.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 40.0;
		}
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 60.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 60.0;
			LEVEL 0 FOR 20.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 21121.849;
	}
}

TRANSITION_LIST("error_location_2[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 73778.564;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 40.0;
		}
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 140.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 21121.436;
	}
}

TRANSITION_LIST("error_location_2[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 73898.16;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 40.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 60.0;
			LEVEL 1 FOR 60.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 100.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 80.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 40.0;
		}
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 200.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 140.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 21141.84;
	}
}

TRANSITION_LIST("error_location_2[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 73778.793;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 80.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 180.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 100.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 60.0;
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 80.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 80.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 60.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 100.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 21141.207;
	}
}

TRANSITION_LIST("error_location_2[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 73778.166;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 80.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 40.0;
		}
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 80.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 20.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 60.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 21121.834;
	}
}

TRANSITION_LIST("error_location_2[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 73778.082;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 60.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 80.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 60.0;
		}
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 40.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 21141.918;
	}
}

TRANSITION_LIST("error_magnitude[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100000.0;
	}
}

TRANSITION_LIST("error_magnitude[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100000.0;
	}
}

TRANSITION_LIST("error_magnitude[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100000.0;
	}
}

TRANSITION_LIST("error_magnitude[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100000.0;
	}
}

TRANSITION_LIST("error_magnitude[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100000.0;
	}
}

TRANSITION_LIST("error_magnitude[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100000.0;
	}
}

TRANSITION_LIST("error_magnitude[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100000.0;
	}
}

TRANSITION_LIST("error_magnitude[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100000.0;
	}
}

TRANSITION_LIST("exact_smallest[9]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100000.0;
	}
}

TRANSITION_LIST("exact_smallest[8]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 8678.62;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 2160.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 22080.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 6000.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 1680.0;
		}
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 56281.38;
	}
}

TRANSITION_LIST("exact_smallest[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 278.154;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1440.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 1920.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 1440.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 2160.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 480.0;
			LEVEL 0 FOR 480.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 480.0;
		}
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 1680.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 2400.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 480.0;
			LEVEL 0 FOR 480.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 480.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 3360.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 38761.846;
	}
}

TRANSITION_LIST("exact_smallest[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 518.357;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 480.0;
		}
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 2400.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 2400.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1440.0;
		LEVEL 1 FOR 1440.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 720.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1920.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 2400.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 240.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 480.0;
		}
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1440.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 480.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 39001.643;
	}
}

TRANSITION_LIST("exact_smallest[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 758.533;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1440.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1680.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 960.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 960.0;
			LEVEL 1 FOR 480.0;
		}
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 960.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 480.0;
		}
		LEVEL 0 FOR 1680.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 2160.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 720.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 1200.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 1440.0;
		LEVEL 1 FOR 1920.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1680.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 2400.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 38521.467;
	}
}

TRANSITION_LIST("exact_smallest[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 278.282;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 2640.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1680.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 720.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 1440.0;
		LEVEL 1 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 480.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1920.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 720.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 960.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 480.0;
		}
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 480.0;
		}
		LEVEL 0 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 39001.718;
	}
}

TRANSITION_LIST("exact_smallest[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 518.249;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 960.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 1440.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 2400.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 1680.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 2160.0;
		LEVEL 1 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 480.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1440.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 960.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 480.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 720.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 480.0;
		}
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 480.0;
		}
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 1440.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 39001.751;
	}
}

TRANSITION_LIST("exact_smallest[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 278.556;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1920.0;
		LEVEL 1 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1680.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1680.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 1440.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1680.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 960.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 480.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1680.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 480.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 720.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 720.0;
		}
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 39001.444;
	}
}

TRANSITION_LIST("exact_smallest[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 998.531;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 480.0;
			LEVEL 1 FOR 720.0;
		}
		LEVEL 0 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 480.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 960.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1200.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 960.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 720.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 480.0;
		}
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 38761.469;
	}
}

TRANSITION_LIST("exact_smallest[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 278.233;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 480.0;
			LEVEL 0 FOR 480.0;
		}
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 480.0;
		NODE
		{
			REPEAT = 5;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 480.0;
			LEVEL 1 FOR 480.0;
		}
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 960.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 480.0;
		}
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 720.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1440.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 720.0;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 480.0;
		}
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 480.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 720.0;
		}
		NODE
		{
			REPEAT = 4;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1680.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 39001.767;
	}
}

TRANSITION_LIST("fade_value[9]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100000.0;
	}
}

TRANSITION_LIST("fade_value[8]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100000.0;
	}
}

TRANSITION_LIST("fade_value[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100000.0;
	}
}

TRANSITION_LIST("fade_value[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100000.0;
	}
}

TRANSITION_LIST("fade_value[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100000.0;
	}
}

TRANSITION_LIST("fade_value[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100000.0;
	}
}

TRANSITION_LIST("fade_value[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100000.0;
	}
}

TRANSITION_LIST("fade_value[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100000.0;
	}
}

TRANSITION_LIST("fade_value[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100000.0;
	}
}

TRANSITION_LIST("fade_value[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100000.0;
	}
}

TRANSITION_LIST("load_non_zero_syndrome_done")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 66998.013;
		LEVEL 1 FOR 33001.987;
	}
}

TRANSITION_LIST("locator_degree_0[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100000.0;
	}
}

TRANSITION_LIST("locator_degree_0[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100000.0;
	}
}

TRANSITION_LIST("locator_degree_0[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 71538.216;
		LEVEL 1 FOR 28461.784;
	}
}

TRANSITION_LIST("locator_degree_0[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 71537.746;
		LEVEL 1 FOR 28462.254;
	}
}

TRANSITION_LIST("locator_degree_0[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 71538.304;
		LEVEL 1 FOR 28461.696;
	}
}

TRANSITION_LIST("locator_degree_1[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100000.0;
	}
}

TRANSITION_LIST("locator_degree_1[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100000.0;
	}
}

TRANSITION_LIST("locator_degree_1[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 67958.215;
		LEVEL 1 FOR 32041.785;
	}
}

TRANSITION_LIST("locator_degree_1[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 67959.451;
		LEVEL 1 FOR 32040.549;
	}
}

TRANSITION_LIST("locator_degree_1[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 67959.641;
		LEVEL 1 FOR 32040.359;
	}
}

TRANSITION_LIST("locator_degree_2[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100000.0;
	}
}

TRANSITION_LIST("locator_degree_2[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100000.0;
	}
}

TRANSITION_LIST("locator_degree_2[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 73518.739;
		LEVEL 1 FOR 26481.261;
	}
}

TRANSITION_LIST("locator_degree_2[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 73518.09;
		LEVEL 1 FOR 26481.91;
	}
}

TRANSITION_LIST("locator_degree_2[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 73518.896;
		LEVEL 1 FOR 26481.104;
	}
}

TRANSITION_LIST("locator_polyn_0[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 67897.373;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 820.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 820.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 860.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 29242.627;
	}
}

TRANSITION_LIST("locator_polyn_0[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 67898.406;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 780.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 880.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 800.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 29241.594;
	}
}

TRANSITION_LIST("locator_polyn_0[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 67897.774;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 800.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 820.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 860.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 29242.226;
	}
}

TRANSITION_LIST("locator_polyn_0[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 67918.213;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 820.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 820.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 780.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 29241.787;
	}
}

TRANSITION_LIST("locator_polyn_0[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 67898.004;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 840.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 840.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 780.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 29261.996;
	}
}

TRANSITION_LIST("locator_polyn_0[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 67958.052;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 780.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 800.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 840.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 29261.948;
	}
}

TRANSITION_LIST("locator_polyn_0[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 67938.628;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 860.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 820.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 800.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 29301.372;
	}
}

TRANSITION_LIST("locator_polyn_0[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 67918.09;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 780.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 820.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 800.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 29261.91;
	}
}

TRANSITION_LIST("locator_polyn_1[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100000.0;
	}
}

TRANSITION_LIST("locator_polyn_1[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100000.0;
	}
}

TRANSITION_LIST("locator_polyn_1[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100000.0;
	}
}

TRANSITION_LIST("locator_polyn_1[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100000.0;
	}
}

TRANSITION_LIST("locator_polyn_1[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100000.0;
	}
}

TRANSITION_LIST("locator_polyn_1[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100000.0;
	}
}

TRANSITION_LIST("locator_polyn_1[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100000.0;
	}
}

TRANSITION_LIST("locator_polyn_1[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100000.0;
	}
}

TRANSITION_LIST("locator_polyn_2[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 67897.747;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 840.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 920.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 820.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 860.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 900.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 27282.253;
	}
}

TRANSITION_LIST("locator_polyn_2[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 67878.216;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 880.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 860.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 900.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 900.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 840.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 27281.784;
	}
}

TRANSITION_LIST("locator_polyn_2[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 67898.146;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 840.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 920.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 940.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 840.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 28261.854;
	}
}

TRANSITION_LIST("locator_polyn_2[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 67878.237;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 860.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 880.0;
		}
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 880.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 900.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 27341.763;
	}
}

TRANSITION_LIST("locator_polyn_2[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 68858.041;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 860.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 860.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 900.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 820.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 27281.959;
	}
}

TRANSITION_LIST("locator_polyn_2[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 67898.01;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 840.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 840.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 980.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 860.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 860.0;
		LEVEL 1 FOR 60.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 27281.99;
	}
}

TRANSITION_LIST("locator_polyn_2[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 67878.234;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 820.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 880.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 820.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 840.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 920.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 27281.766;
	}
}

TRANSITION_LIST("locator_polyn_2[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 68778.089;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 900.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 820.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 860.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 900.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 27301.911;
	}
}

TRANSITION_LIST("magnitue_polyn_0[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 67917.824;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 580.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 660.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 40.0;
		}
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 620.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 29262.176;
	}
}

TRANSITION_LIST("magnitue_polyn_0[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 67898.013;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 740.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 680.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 700.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 29261.987;
	}
}

TRANSITION_LIST("magnitue_polyn_0[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 67897.646;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 620.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 620.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 660.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 29282.354;
	}
}

TRANSITION_LIST("magnitue_polyn_0[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 67897.605;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 640.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 760.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 640.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 29262.395;
	}
}

TRANSITION_LIST("magnitue_polyn_0[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 68038.083;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 620.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 60.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 620.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 80.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 620.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 29261.917;
	}
}

TRANSITION_LIST("magnitue_polyn_0[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 67917.83;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 640.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 660.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 620.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 29342.17;
	}
}

TRANSITION_LIST("magnitue_polyn_0[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 67898.047;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 620.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 660.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 640.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 29261.953;
	}
}

TRANSITION_LIST("magnitue_polyn_0[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 67558.075;
		LEVEL 1 FOR 300.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 60.0;
		}
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 580.0;
		LEVEL 1 FOR 80.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 620.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 620.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 29261.925;
	}
}

TRANSITION_LIST("magnitue_polyn_1[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100000.0;
	}
}

TRANSITION_LIST("magnitue_polyn_1[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100000.0;
	}
}

TRANSITION_LIST("magnitue_polyn_1[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100000.0;
	}
}

TRANSITION_LIST("magnitue_polyn_1[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100000.0;
	}
}

TRANSITION_LIST("magnitue_polyn_1[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100000.0;
	}
}

TRANSITION_LIST("magnitue_polyn_1[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100000.0;
	}
}

TRANSITION_LIST("magnitue_polyn_1[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100000.0;
	}
}

TRANSITION_LIST("magnitue_polyn_1[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 67598.516;
		LEVEL 1 FOR 32401.484;
	}
}

TRANSITION_LIST("magnitue_polyn_2[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 67878.224;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 680.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 680.0;
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 700.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 680.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 27301.776;
	}
}

TRANSITION_LIST("magnitue_polyn_2[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 67878.24;
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 60.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 600.0;
		LEVEL 1 FOR 20.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 100.0;
		}
		LEVEL 0 FOR 640.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 660.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 700.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 700.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 27321.76;
	}
}

TRANSITION_LIST("magnitue_polyn_2[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 67917.799;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 740.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 640.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 680.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 700.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 27302.201;
	}
}

TRANSITION_LIST("magnitue_polyn_2[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 67918.088;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 600.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 640.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 680.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 700.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 27321.912;
	}
}

TRANSITION_LIST("magnitue_polyn_2[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 67878.161;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 660.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 640.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 660.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 80.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 760.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 27341.839;
	}
}

TRANSITION_LIST("magnitue_polyn_2[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 67918.023;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 600.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 80.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 40.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 640.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 640.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 700.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 680.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 27341.977;
	}
}

TRANSITION_LIST("magnitue_polyn_2[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 67898.138;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 600.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 700.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 700.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 740.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 800.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 27301.862;
	}
}

TRANSITION_LIST("magnitue_polyn_2[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 67537.836;
		LEVEL 1 FOR 300.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 600.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 640.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 40.0;
		}
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 640.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 740.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 680.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 27362.164;
	}
}

TRANSITION_LIST("modified_actual_distance[23]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 318.867;
		LEVEL 1 FOR 59760.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 38481.133;
	}
}

TRANSITION_LIST("modified_actual_distance[22]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 319.095;
		LEVEL 1 FOR 59760.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 38480.905;
	}
}

TRANSITION_LIST("modified_actual_distance[21]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 319.468;
		LEVEL 1 FOR 59760.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 38480.532;
	}
}

TRANSITION_LIST("modified_actual_distance[20]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 319.386;
		LEVEL 1 FOR 5280.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1680.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1920.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 1680.0;
		}
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 3840.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1440.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 1200.0;
		}
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 3360.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1440.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1680.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1680.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1680.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 3840.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1440.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 3120.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 38480.614;
	}
}

TRANSITION_LIST("modified_actual_distance[19]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1759.342;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1440.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 1440.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 1920.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 2160.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 1440.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 720.0;
		}
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 720.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 720.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 480.0;
			LEVEL 1 FOR 480.0;
		}
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1440.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 1440.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1440.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 38480.658;
	}
}

TRANSITION_LIST("modified_actual_distance[18]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 559.271;
		LEVEL 1 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 1440.0;
		LEVEL 1 FOR 1680.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 1440.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 720.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 480.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 720.0;
			NODE
			{
				REPEAT = 2;
				LEVEL 0 FOR 240.0;
				LEVEL 1 FOR 240.0;
			}
			LEVEL 0 FOR 480.0;
			LEVEL 1 FOR 720.0;
			LEVEL 0 FOR 720.0;
		}
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 480.0;
		}
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 720.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 480.0;
		}
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1680.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 480.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 1440.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 1440.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 38480.729;
	}
}

TRANSITION_LIST("modified_actual_distance[17]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 559.481;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1440.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1440.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 480.0;
			LEVEL 0 FOR 480.0;
		}
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 2640.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 960.0;
			LEVEL 1 FOR 480.0;
		}
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1920.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 38720.519;
	}
}

TRANSITION_LIST("modified_actual_distance[16]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 318.872;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 480.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 1680.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 720.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1440.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 720.0;
		}
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 960.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 480.0;
			LEVEL 1 FOR 240.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 480.0;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 720.0;
		}
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 960.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 480.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 720.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1920.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 480.0;
			LEVEL 0 FOR 720.0;
		}
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 1680.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 38721.128;
	}
}

TRANSITION_LIST("modified_actual_distance[15]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1279.183;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 1440.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 480.0;
			LEVEL 0 FOR 720.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 480.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 1920.0;
		LEVEL 0 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 1440.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1680.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 720.0;
		NODE
		{
			REPEAT = 5;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 38480.817;
	}
}

TRANSITION_LIST("modified_actual_distance[14]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 320.051;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 720.0;
			LEVEL 1 FOR 720.0;
		}
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 240.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 720.0;
		}
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 1680.0;
		LEVEL 1 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 1200.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 720.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 1440.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 720.0;
			LEVEL 1 FOR 480.0;
		}
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1920.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 480.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 720.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 720.0;
		NODE
		{
			REPEAT = 4;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 38479.949;
	}
}

TRANSITION_LIST("modified_actual_distance[13]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 319.23;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 1680.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 480.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 480.0;
			LEVEL 1 FOR 240.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 720.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 960.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 720.0;
		}
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 1440.0;
		LEVEL 0 FOR 240.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 480.0;
		}
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 480.0;
			LEVEL 1 FOR 480.0;
		}
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 1680.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 38480.77;
	}
}

TRANSITION_LIST("modified_actual_distance[12]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 319.466;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 2160.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 1440.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 2160.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 1440.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 720.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 960.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 38960.534;
	}
}

TRANSITION_LIST("modified_actual_distance[11]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 559.56;
		LEVEL 1 FOR 1680.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1920.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 960.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 480.0;
		}
		LEVEL 0 FOR 1200.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 720.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1440.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 1440.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1440.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 480.0;
			LEVEL 1 FOR 480.0;
			LEVEL 0 FOR 720.0;
		}
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 1440.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1440.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 480.0;
		}
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 38720.44;
	}
}

TRANSITION_LIST("modified_actual_distance[10]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 559.463;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1680.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 480.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 720.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 720.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 480.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 1680.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1440.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 1440.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1440.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 1440.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 1440.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 480.0;
		}
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 480.0;
		}
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 38720.537;
	}
}

TRANSITION_LIST("modified_actual_distance[9]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 319.255;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 720.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 1440.0;
		LEVEL 1 FOR 2880.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 480.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1680.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 3120.0;
		LEVEL 0 FOR 2880.0;
		LEVEL 1 FOR 2400.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 960.0;
		}
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1920.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 38720.745;
	}
}

TRANSITION_LIST("modified_actual_distance[8]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 319.346;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 480.0;
			LEVEL 0 FOR 480.0;
		}
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 480.0;
		NODE
		{
			REPEAT = 5;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 480.0;
			LEVEL 1 FOR 480.0;
		}
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 960.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 480.0;
		}
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 720.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1440.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 720.0;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 480.0;
		}
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 480.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 720.0;
		}
		NODE
		{
			REPEAT = 4;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1680.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 38960.654;
	}
}

TRANSITION_LIST("modified_actual_distance[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100000.0;
	}
}

TRANSITION_LIST("modified_actual_distance[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100000.0;
	}
}

TRANSITION_LIST("modified_actual_distance[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100000.0;
	}
}

TRANSITION_LIST("modified_actual_distance[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100000.0;
	}
}

TRANSITION_LIST("modified_actual_distance[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100000.0;
	}
}

TRANSITION_LIST("modified_actual_distance[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100000.0;
	}
}

TRANSITION_LIST("modified_actual_distance[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100000.0;
	}
}

TRANSITION_LIST("modified_actual_distance[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100000.0;
	}
}

TRANSITION_LIST("modified_syndr_polyn_0[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 67278.091;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 32461.909;
	}
}

TRANSITION_LIST("modified_syndr_polyn_0[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 67258.803;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 32601.197;
	}
}

TRANSITION_LIST("modified_syndr_polyn_0[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 67258.035;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 32441.965;
	}
}

TRANSITION_LIST("modified_syndr_polyn_0[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 67258.316;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 32441.684;
	}
}

TRANSITION_LIST("modified_syndr_polyn_0[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 67398.52;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 32481.48;
	}
}

TRANSITION_LIST("modified_syndr_polyn_0[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 67279.08;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 32440.92;
	}
}

TRANSITION_LIST("modified_syndr_polyn_0[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 67258.64;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 32441.36;
	}
}

TRANSITION_LIST("modified_syndr_polyn_0[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 67238.575;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 32441.425;
	}
}

TRANSITION_LIST("modified_syndr_polyn_1[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 67358.582;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 32581.418;
	}
}

TRANSITION_LIST("modified_syndr_polyn_1[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 67298.152;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 32621.848;
	}
}

TRANSITION_LIST("modified_syndr_polyn_1[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 67318.335;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 32621.665;
	}
}

TRANSITION_LIST("modified_syndr_polyn_1[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 67318.309;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 32581.691;
	}
}

TRANSITION_LIST("modified_syndr_polyn_1[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 67298.702;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 32581.298;
	}
}

TRANSITION_LIST("modified_syndr_polyn_1[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 67298.248;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 32681.752;
	}
}

TRANSITION_LIST("modified_syndr_polyn_1[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 67318.748;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 32621.252;
	}
}

TRANSITION_LIST("modified_syndr_polyn_1[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 67278.52;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 32581.48;
	}
}

TRANSITION_LIST("modified_syndr_polyn_2[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 67239.729;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 32460.271;
	}
}

TRANSITION_LIST("modified_syndr_polyn_2[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 67238.626;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 32461.374;
	}
}

TRANSITION_LIST("modified_syndr_polyn_2[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 67278.678;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 32461.322;
	}
}

TRANSITION_LIST("modified_syndr_polyn_2[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 67280.555;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 32459.445;
	}
}

TRANSITION_LIST("modified_syndr_polyn_2[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 67238.927;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 32461.073;
	}
}

TRANSITION_LIST("modified_syndr_polyn_2[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 67278.43;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 32481.57;
	}
}

TRANSITION_LIST("modified_syndr_polyn_2[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 67258.598;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 32481.402;
	}
}

TRANSITION_LIST("modified_syndr_polyn_2[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 67218.644;
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 32481.356;
	}
}

TRANSITION_LIST("new_channel_char")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 259.446;
		NODE
		{
			REPEAT = 255;
			LEVEL 1 FOR 60.0;
			LEVEL 0 FOR 180.0;
		}
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 38480.554;
	}
}

TRANSITION_LIST("new_data")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 61498.524;
		LEVEL 1 FOR 38501.476;
	}
}

TRANSITION_LIST("no_of_erasure_coefs_0[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100000.0;
	}
}

TRANSITION_LIST("no_of_erasure_coefs_0[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100000.0;
	}
}

TRANSITION_LIST("no_of_erasure_coefs_0[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 67158.204;
		LEVEL 1 FOR 32841.796;
	}
}

TRANSITION_LIST("no_of_erasure_coefs_0[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100000.0;
	}
}

TRANSITION_LIST("no_of_erasure_coefs_0[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 67158.956;
		LEVEL 1 FOR 32841.044;
	}
}

TRANSITION_LIST("no_of_erasure_coefs_1[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100000.0;
	}
}

TRANSITION_LIST("no_of_erasure_coefs_1[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100000.0;
	}
}

TRANSITION_LIST("no_of_erasure_coefs_1[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 67198.388;
		LEVEL 1 FOR 32801.612;
	}
}

TRANSITION_LIST("no_of_erasure_coefs_1[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 67198.647;
		LEVEL 1 FOR 32801.353;
	}
}

TRANSITION_LIST("no_of_erasure_coefs_1[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 67198.484;
		LEVEL 1 FOR 32801.516;
	}
}

TRANSITION_LIST("no_of_erasure_coefs_2[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100000.0;
	}
}

TRANSITION_LIST("no_of_erasure_coefs_2[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100000.0;
	}
}

TRANSITION_LIST("no_of_erasure_coefs_2[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 67138.251;
		LEVEL 1 FOR 32861.749;
	}
}

TRANSITION_LIST("no_of_erasure_coefs_2[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100000.0;
	}
}

TRANSITION_LIST("no_of_erasure_coefs_2[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100000.0;
	}
}

TRANSITION_LIST("no_of_parity[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 38.879;
		LEVEL 1 FOR 99961.121;
	}
}

TRANSITION_LIST("no_of_parity[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100000.0;
	}
}

TRANSITION_LIST("no_of_parity[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100000.0;
	}
}

TRANSITION_LIST("no_of_parity[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100000.0;
	}
}

TRANSITION_LIST("no_of_parity[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100000.0;
	}
}

TRANSITION_LIST("norm_sigma_square[14]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100000.0;
	}
}

TRANSITION_LIST("norm_sigma_square[13]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100000.0;
	}
}

TRANSITION_LIST("norm_sigma_square[12]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100000.0;
	}
}

TRANSITION_LIST("norm_sigma_square[11]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 102.318;
		LEVEL 1 FOR 99897.682;
	}
}

TRANSITION_LIST("norm_sigma_square[10]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 101.611;
		LEVEL 1 FOR 99898.389;
	}
}

TRANSITION_LIST("norm_sigma_square[9]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 102.054;
		LEVEL 1 FOR 99897.946;
	}
}

TRANSITION_LIST("norm_sigma_square[8]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 102.082;
		LEVEL 1 FOR 99897.918;
	}
}

TRANSITION_LIST("norm_sigma_square[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100000.0;
	}
}

TRANSITION_LIST("norm_sigma_square[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100000.0;
	}
}

TRANSITION_LIST("norm_sigma_square[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 101.618;
		LEVEL 1 FOR 99898.382;
	}
}

TRANSITION_LIST("norm_sigma_square[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100000.0;
	}
}

TRANSITION_LIST("norm_sigma_square[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100000.0;
	}
}

TRANSITION_LIST("norm_sigma_square[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100000.0;
	}
}

TRANSITION_LIST("norm_sigma_square[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100000.0;
	}
}

TRANSITION_LIST("norm_sigma_square[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100000.0;
	}
}

TRANSITION_LIST("normalized_signal[14]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 524.376;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 720.0;
		}
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 720.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 480.0;
		}
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 720.0;
		}
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 480.0;
		}
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 960.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 480.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 240.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 480.0;
			LEVEL 0 FOR 480.0;
		}
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 38755.624;
	}
}

TRANSITION_LIST("normalized_signal[13]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 524.382;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 720.0;
		}
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 720.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 480.0;
		}
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 720.0;
		}
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 480.0;
		}
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 480.0;
		}
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 38755.618;
	}
}

TRANSITION_LIST("normalized_signal[12]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 284.602;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1440.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 1200.0;
		NODE
		{
			REPEAT = 4;
			LEVEL 0 FOR 480.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 2160.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 1680.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 1440.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 720.0;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 720.0;
		}
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 1440.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1440.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 38995.398;
	}
}

TRANSITION_LIST("normalized_signal[11]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 764.397;
		LEVEL 1 FOR 240.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 480.0;
		}
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 720.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 1440.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 480.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 1680.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 2880.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 720.0;
		}
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 480.0;
		}
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 1440.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1680.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 480.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 38755.603;
	}
}

TRANSITION_LIST("normalized_signal[10]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 524.363;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 480.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1920.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1920.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1440.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 1200.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 480.0;
		}
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 720.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 720.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 480.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1200.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 480.0;
			LEVEL 0 FOR 960.0;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 38515.637;
	}
}

TRANSITION_LIST("normalized_signal[9]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 285.053;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1680.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 960.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 1440.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 2160.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 480.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 720.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 480.0;
			LEVEL 1 FOR 480.0;
		}
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 720.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 480.0;
		}
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 1680.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 38754.947;
	}
}

TRANSITION_LIST("normalized_signal[8]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 764.526;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 720.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 480.0;
			LEVEL 1 FOR 480.0;
		}
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1920.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 1680.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 480.0;
		}
		LEVEL 1 FOR 960.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 720.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 2160.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 1440.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1440.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 960.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 480.0;
			LEVEL 1 FOR 480.0;
		}
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 480.0;
		}
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 38755.474;
	}
}

TRANSITION_LIST("normalized_signal[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 284.734;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 720.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 720.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 1440.0;
		LEVEL 1 FOR 240.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 480.0;
		}
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 1200.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 1200.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 480.0;
			LEVEL 0 FOR 240.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1680.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 720.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 2160.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 38755.266;
	}
}

TRANSITION_LIST("normalized_signal[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 524.248;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 1440.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 480.0;
		}
		LEVEL 0 FOR 1440.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 1440.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 480.0;
		}
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 720.0;
		}
		LEVEL 0 FOR 720.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 1200.0;
		}
		LEVEL 1 FOR 2400.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 720.0;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1440.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 480.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 240.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 480.0;
		}
		LEVEL 1 FOR 480.0;
		NODE
		{
			REPEAT = 4;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 960.0;
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 38755.752;
	}
}

TRANSITION_LIST("normalized_signal[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 284.126;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 480.0;
			LEVEL 0 FOR 480.0;
		}
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 480.0;
		NODE
		{
			REPEAT = 5;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 480.0;
			LEVEL 1 FOR 480.0;
		}
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 960.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 480.0;
		}
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 720.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1440.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 720.0;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 480.0;
		}
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 480.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 720.0;
		}
		NODE
		{
			REPEAT = 4;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1680.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 38995.874;
	}
}

TRANSITION_LIST("normalized_signal[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100000.0;
	}
}

TRANSITION_LIST("normalized_signal[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100000.0;
	}
}

TRANSITION_LIST("normalized_signal[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100000.0;
	}
}

TRANSITION_LIST("normalized_signal[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100000.0;
	}
}

TRANSITION_LIST("normalized_signal[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100000.0;
	}
}

TRANSITION_LIST("number_of_erasures_0[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100000.0;
	}
}

TRANSITION_LIST("number_of_erasures_0[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100000.0;
	}
}

TRANSITION_LIST("number_of_erasures_0[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 66258.965;
		LEVEL 1 FOR 33741.035;
	}
}

TRANSITION_LIST("number_of_erasures_0[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 65198.462;
		LEVEL 1 FOR 1060.0;
		LEVEL 0 FOR 33741.538;
	}
}

TRANSITION_LIST("number_of_erasures_0[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 63098.345;
		LEVEL 1 FOR 2100.0;
		LEVEL 0 FOR 280.0;
		LEVEL 1 FOR 780.0;
		LEVEL 0 FOR 260.0;
		LEVEL 1 FOR 33481.655;
	}
}

TRANSITION_LIST("number_of_erasures_1[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100000.0;
	}
}

TRANSITION_LIST("number_of_erasures_1[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100000.0;
	}
}

TRANSITION_LIST("number_of_erasures_1[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 65198.0;
		LEVEL 1 FOR 34802.0;
	}
}

TRANSITION_LIST("number_of_erasures_1[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 62678.547;
		LEVEL 1 FOR 2520.0;
		LEVEL 0 FOR 1060.0;
		LEVEL 1 FOR 33741.453;
	}
}

TRANSITION_LIST("number_of_erasures_1[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 62398.496;
		LEVEL 1 FOR 280.0;
		LEVEL 0 FOR 420.0;
		LEVEL 1 FOR 2100.0;
		LEVEL 0 FOR 280.0;
		LEVEL 1 FOR 780.0;
		LEVEL 0 FOR 260.0;
		LEVEL 1 FOR 33481.504;
	}
}

TRANSITION_LIST("number_of_erasures_2[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100000.0;
	}
}

TRANSITION_LIST("number_of_erasures_2[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100000.0;
	}
}

TRANSITION_LIST("number_of_erasures_2[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 66518.702;
		LEVEL 1 FOR 33481.298;
	}
}

TRANSITION_LIST("number_of_erasures_2[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 65198.698;
		LEVEL 1 FOR 1320.0;
		LEVEL 0 FOR 33481.302;
	}
}

TRANSITION_LIST("number_of_erasures_2[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 63098.873;
		LEVEL 1 FOR 2100.0;
		LEVEL 0 FOR 1060.0;
		LEVEL 1 FOR 260.0;
		LEVEL 0 FOR 33481.127;
	}
}

TRANSITION_LIST("q[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 78940.958;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 140.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 80.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 80.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 80.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 40.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 60.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 100.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 60.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 40.0;
		}
		LEVEL 1 FOR 5160.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 140.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 80.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 80.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 80.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 40.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 60.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 100.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 60.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 40.0;
		}
		LEVEL 1 FOR 5160.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 119.042;
	}
}

TRANSITION_LIST("q[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 78941.147;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 60.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 100.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 40.0;
		}
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 5140.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 60.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 100.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 40.0;
		}
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 5140.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 18.853;
	}
}

TRANSITION_LIST("q[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 78961.146;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 80.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 60.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 180.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 60.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 20.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		NODE
		{
			REPEAT = 5;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 40.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 5240.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 80.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 60.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 180.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 60.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 20.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		NODE
		{
			REPEAT = 5;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 40.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 5240.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 80.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 18.854;
	}
}

TRANSITION_LIST("q[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 78941.678;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 60.0;
			LEVEL 1 FOR 20.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 20.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 80.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 60.0;
			LEVEL 1 FOR 60.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 40.0;
		}
		LEVEL 1 FOR 180.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 5160.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 60.0;
			LEVEL 1 FOR 20.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 20.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 80.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 60.0;
			LEVEL 1 FOR 60.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 40.0;
		}
		LEVEL 1 FOR 180.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 5160.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 58.322;
	}
}

TRANSITION_LIST("q[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 78941.713;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 80.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 4;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 60.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 5160.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 80.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 4;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 60.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 5160.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 18.287;
	}
}

TRANSITION_LIST("q[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 78961.668;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 80.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 180.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 180.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 5160.0;
		LEVEL 0 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 80.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 180.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 180.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 5160.0;
		LEVEL 0 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 18.332;
	}
}

TRANSITION_LIST("q[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 78961.198;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 60.0;
		}
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 20.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 40.0;
		}
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 40.0;
		}
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 40.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 5200.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 60.0;
		}
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 20.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 40.0;
		}
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 40.0;
		}
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 40.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 5200.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 60.0;
		}
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 38.802;
	}
}

TRANSITION_LIST("q[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 78961.283;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 80.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 60.0;
		}
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 140.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 80.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 5140.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 80.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 60.0;
		}
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 140.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 80.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 5140.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 80.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 58.717;
	}
}

TRANSITION_LIST("q_fade[9]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100000.0;
	}
}

TRANSITION_LIST("q_fade[8]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 8500.792;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 2160.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 16320.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 5520.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 6000.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 1680.0;
		}
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 56459.208;
	}
}

TRANSITION_LIST("q_fade[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 60.81;
		LEVEL 1 FOR 280.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 1440.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 720.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 1920.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1440.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 480.0;
			LEVEL 0 FOR 480.0;
		}
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 960.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 480.0;
			LEVEL 0 FOR 480.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 480.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 240.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 480.0;
		}
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 2400.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 38939.19;
	}
}

TRANSITION_LIST("q_fade[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 340.791;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 480.0;
		}
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 480.0;
			LEVEL 1 FOR 240.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 3600.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1440.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 480.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1440.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 960.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 480.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 2400.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 480.0;
			LEVEL 0 FOR 480.0;
		}
		LEVEL 1 FOR 480.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1440.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 38699.209;
	}
}

TRANSITION_LIST("q_fade[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 341.15;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 960.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 960.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 1920.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 1440.0;
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 2880.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 39178.85;
	}
}

TRANSITION_LIST("q_fade[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 60.803;
		LEVEL 1 FOR 280.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 720.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1440.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 2160.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 720.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 2160.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 1440.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 1200.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 39419.197;
	}
}

TRANSITION_LIST("q_fade[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 60.873;
		LEVEL 1 FOR 280.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 480.0;
		}
		LEVEL 0 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 480.0;
		}
		LEVEL 1 FOR 1200.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 1440.0;
		LEVEL 1 FOR 1680.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 720.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 480.0;
		}
		LEVEL 0 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 720.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 1680.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 720.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1440.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 2160.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 720.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 480.0;
		}
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 38939.127;
	}
}

TRANSITION_LIST("q_fade[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 340.777;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 1440.0;
		LEVEL 1 FOR 1680.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1440.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 480.0;
			LEVEL 1 FOR 480.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 1200.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 1680.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 38939.223;
	}
}

TRANSITION_LIST("q_fade[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 60.8;
		LEVEL 1 FOR 280.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 480.0;
			LEVEL 0 FOR 720.0;
		}
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 720.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 480.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 1440.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 2400.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 960.0;
			LEVEL 1 FOR 480.0;
		}
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 1920.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 960.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 480.0;
			LEVEL 1 FOR 480.0;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 2400.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 1680.0;
		LEVEL 0 FOR 720.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 720.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 1440.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 39179.2;
	}
}

TRANSITION_LIST("q_fade[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 340.849;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1680.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1920.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 240.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 480.0;
		}
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 480.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 720.0;
		}
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 4320.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 480.0;
		}
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 480.0;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 1680.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 480.0;
		}
		LEVEL 0 FOR 38699.151;
	}
}

TRANSITION_LIST("q_in[9]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 120.673;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 180.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 180.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 180.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 120.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 180.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 220.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 180.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 180.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 180.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 180.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 60.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 140.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 220.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 180.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 260.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 180.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 180.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 180.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 120.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 220.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 120.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 180.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 260.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 180.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 120.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 180.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 180.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 180.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 60.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 200.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 40.0;
		}
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 120.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 180.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 120.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 40.0;
		}
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 180.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 180.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 180.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 180.0;
			LEVEL 0 FOR 40.0;
		}
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 180.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 180.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 180.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 160.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 220.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 140.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 180.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 20.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 180.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 240.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 180.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 180.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 180.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 120.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 180.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 180.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 180.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 220.0;
		LEVEL 0 FOR 220.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 38739.327;
	}
}

TRANSITION_LIST("q_in[8]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 120.695;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 180.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 180.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 180.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 120.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 180.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 220.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 180.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 180.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 100.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 180.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 180.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 60.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 140.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 220.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 180.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 260.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 180.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 180.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 120.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 220.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 120.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 180.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 180.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 260.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 180.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 220.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 120.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 180.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 180.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 180.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 60.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 200.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 40.0;
		}
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 80.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 60.0;
			LEVEL 1 FOR 100.0;
			NODE
			{
				REPEAT = 2;
				LEVEL 0 FOR 20.0;
				LEVEL 1 FOR 20.0;
			}
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 180.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 120.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 40.0;
		}
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 180.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 180.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 300.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 180.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 180.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 180.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 100.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 180.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 160.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 220.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 140.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 180.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 20.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 180.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 240.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 180.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 180.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 180.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 120.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 180.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 180.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 180.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 220.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 180.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 38739.305;
	}
}

TRANSITION_LIST("q_in[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 60.499;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 140.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 180.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 220.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 60.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 180.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 180.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 100.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 360.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 180.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 180.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 160.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 220.0;
		LEVEL 0 FOR 180.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 180.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 180.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 60.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 120.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 120.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 220.0;
		LEVEL 0 FOR 180.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 140.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 40.0;
		}
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 220.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 180.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 120.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 180.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 180.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 60.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 180.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 120.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 180.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 120.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 40.0;
		}
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 220.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 180.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 220.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 360.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 260.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 180.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 180.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 60.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 180.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 180.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 20.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 40.0;
		}
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 180.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 120.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 240.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 180.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 80.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 140.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 180.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 120.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 180.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 220.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 220.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 38499.501;
	}
}

TRANSITION_LIST("q_in[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 120.51;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 180.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 120.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 60.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 140.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 160.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 180.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 180.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 60.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 200.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 140.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 180.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 220.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 140.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 140.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 180.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 180.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 100.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 160.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 120.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 180.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 60.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 180.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 60.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 140.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 220.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 180.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 180.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 220.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 180.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 360.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 260.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 180.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 180.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 60.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 100.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 220.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 180.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 120.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 180.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 220.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 180.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 180.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 180.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 120.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 180.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 180.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 38839.49;
	}
}

TRANSITION_LIST("q_in[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100.668;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 140.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 180.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 220.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 220.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 140.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 100.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 160.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 180.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 140.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 180.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 160.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 220.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 220.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 180.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 220.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 180.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 160.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 140.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 180.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 180.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 180.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 180.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 180.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 220.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 100.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 120.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 240.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 180.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 180.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 180.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 180.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 120.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 220.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 180.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 160.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 100.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 220.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 180.0;
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 120.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 80.0;
		}
		LEVEL 0 FOR 220.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 180.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 140.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 220.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 180.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 38739.332;
	}
}

TRANSITION_LIST("q_in[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 60.448;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 100.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 140.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 180.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 180.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 140.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 180.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 140.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 100.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 180.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 280.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 180.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 100.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 180.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 180.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 100.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 140.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 40.0;
		}
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 260.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 100.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 180.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 260.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 220.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 220.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 20.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 140.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 60.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 200.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 100.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 120.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 320.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 180.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 300.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 220.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 100.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 180.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 180.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 180.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 160.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 40.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 180.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 260.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 180.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 140.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 220.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 140.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 120.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 280.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 180.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 180.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 120.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 180.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 180.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 120.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 38499.552;
	}
}

TRANSITION_LIST("q_in[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 60.506;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 180.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 220.0;
		LEVEL 0 FOR 260.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 220.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 180.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 340.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 180.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 140.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 100.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 120.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 40.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 340.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 180.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 180.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 180.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 160.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 120.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 180.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 180.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 100.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 180.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 100.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 140.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 140.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 180.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 180.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 220.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 20.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 180.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 120.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 180.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 320.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 120.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 140.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 440.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 60.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 180.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 220.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 140.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 220.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 180.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 180.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 140.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 20.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 40.0;
		}
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 180.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 140.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 40.0;
		}
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 340.0;
		LEVEL 1 FOR 38499.494;
	}
}

TRANSITION_LIST("q_in[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 61.616;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 20.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 40.0;
		}
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 380.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 220.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 180.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 140.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 220.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 180.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 180.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 220.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 160.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 220.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 260.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 20.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 60.0;
			LEVEL 0 FOR 120.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 220.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 180.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 180.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 120.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 180.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 220.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 120.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 180.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 180.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 260.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 340.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 180.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 100.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 40.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 100.0;
		}
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 180.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 180.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 140.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 180.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 100.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 100.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 260.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 180.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 180.0;
		LEVEL 0 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 340.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 40.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 180.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 120.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 60.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 120.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 180.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 140.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 100.0;
		}
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 220.0;
		LEVEL 0 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 200.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 160.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 180.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 180.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 120.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 40.0;
		}
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 220.0;
		LEVEL 0 FOR 180.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 100.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 100.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 220.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 160.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 140.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 220.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 360.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 38478.384;
	}
}

TRANSITION_LIST("q_in[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100.49;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 120.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 100.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 140.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 200.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 220.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 100.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 360.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 180.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 100.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 100.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 160.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 120.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 120.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 220.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 180.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 220.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 180.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 180.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 180.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 220.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 200.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 220.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 180.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 220.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 100.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 40.0;
		}
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 180.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 300.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 260.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 60.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 160.0;
		}
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 320.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 180.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 60.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 100.0;
		}
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 220.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 220.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 20.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 120.0;
			LEVEL 0 FOR 60.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 120.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 180.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 160.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 140.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 220.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 120.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 40.0;
		}
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 280.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 180.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 180.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 220.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 160.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 180.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 120.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 120.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 180.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 100.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 38739.51;
	}
}

TRANSITION_LIST("q_in[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 80.537;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 120.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 100.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 40.0;
		}
		LEVEL 1 FOR 140.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 220.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 220.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 180.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 100.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 100.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 100.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 460.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 180.0;
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 60.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 100.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 180.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 220.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 140.0;
		}
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 220.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 60.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 120.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 120.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 180.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 180.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 60.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 180.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 160.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 60.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 60.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 220.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 200.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 180.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 160.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 220.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 140.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 180.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 100.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 180.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 180.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 180.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 260.0;
		LEVEL 1 FOR 38479.463;
	}
}

TRANSITION_LIST("quotient[14]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100000.0;
	}
}

TRANSITION_LIST("quotient[13]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100000.0;
	}
}

TRANSITION_LIST("quotient[12]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100000.0;
	}
}

TRANSITION_LIST("quotient[11]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100000.0;
	}
}

TRANSITION_LIST("quotient[10]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100000.0;
	}
}

TRANSITION_LIST("quotient[9]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100000.0;
	}
}

TRANSITION_LIST("quotient[8]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100000.0;
	}
}

TRANSITION_LIST("quotient[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100000.0;
	}
}

TRANSITION_LIST("quotient[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100000.0;
	}
}

TRANSITION_LIST("quotient[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100000.0;
	}
}

TRANSITION_LIST("quotient[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100000.0;
	}
}

TRANSITION_LIST("quotient[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100000.0;
	}
}

TRANSITION_LIST("quotient[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100000.0;
	}
}

TRANSITION_LIST("quotient[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100000.0;
	}
}

TRANSITION_LIST("quotient[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100000.0;
	}
}

TRANSITION_LIST("rd_enable")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 61498.743;
		LEVEL 1 FOR 5120.0;
		LEVEL 0 FOR 33381.257;
	}
}

TRANSITION_LIST("rdaddress[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 81457.43;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 2560.0;
			LEVEL 0 FOR 2560.0;
		}
		LEVEL 1 FOR 2560.0;
		LEVEL 0 FOR 622.57;
	}
}

TRANSITION_LIST("rdaddress[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 80177.562;
		NODE
		{
			REPEAT = 7;
			LEVEL 1 FOR 1280.0;
			LEVEL 0 FOR 1280.0;
		}
		LEVEL 1 FOR 1280.0;
		LEVEL 0 FOR 622.438;
	}
}

TRANSITION_LIST("rdaddress[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 79537.407;
		NODE
		{
			REPEAT = 15;
			LEVEL 1 FOR 640.0;
			LEVEL 0 FOR 640.0;
		}
		LEVEL 1 FOR 640.0;
		LEVEL 0 FOR 622.593;
	}
}

TRANSITION_LIST("rdaddress[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 79217.568;
		NODE
		{
			REPEAT = 32;
			LEVEL 1 FOR 320.0;
			LEVEL 0 FOR 320.0;
		}
		LEVEL 1 FOR 302.432;
	}
}

TRANSITION_LIST("rdaddress[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 79057.396;
		NODE
		{
			REPEAT = 65;
			LEVEL 1 FOR 160.0;
			LEVEL 0 FOR 160.0;
		}
		LEVEL 1 FOR 142.604;
	}
}

TRANSITION_LIST("rdaddress[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 78977.796;
		NODE
		{
			REPEAT = 131;
			LEVEL 1 FOR 80.0;
			LEVEL 0 FOR 80.0;
		}
		LEVEL 1 FOR 62.204;
	}
}

TRANSITION_LIST("rdaddress[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 78937.572;
		NODE
		{
			REPEAT = 263;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 40.0;
		}
		LEVEL 1 FOR 22.428;
	}
}

TRANSITION_LIST("rdaddress[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 78917.15;
		NODE
		{
			REPEAT = 527;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 2.85;
	}
}

TRANSITION_LIST("rdaddress_fade[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 30799.145;
		LEVEL 1 FOR 69200.855;
	}
}

TRANSITION_LIST("rdaddress_fade[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 15439.081;
		LEVEL 1 FOR 15360.0;
		LEVEL 0 FOR 15360.0;
		LEVEL 1 FOR 53840.919;
	}
}

TRANSITION_LIST("rdaddress_fade[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 7759.393;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 7680.0;
			LEVEL 0 FOR 7680.0;
		}
		LEVEL 1 FOR 46160.607;
	}
}

TRANSITION_LIST("rdaddress_fade[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 3919.934;
		NODE
		{
			REPEAT = 7;
			LEVEL 1 FOR 3840.0;
			LEVEL 0 FOR 3840.0;
		}
		LEVEL 1 FOR 42320.066;
	}
}

TRANSITION_LIST("rdaddress_fade[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1999.307;
		NODE
		{
			REPEAT = 15;
			LEVEL 1 FOR 1920.0;
			LEVEL 0 FOR 1920.0;
		}
		LEVEL 1 FOR 40400.693;
	}
}

TRANSITION_LIST("rdaddress_fade[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1038.848;
		NODE
		{
			REPEAT = 31;
			LEVEL 1 FOR 960.0;
			LEVEL 0 FOR 960.0;
		}
		LEVEL 1 FOR 39441.152;
	}
}

TRANSITION_LIST("rdaddress_fade[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 559.636;
		NODE
		{
			REPEAT = 63;
			LEVEL 1 FOR 480.0;
			LEVEL 0 FOR 480.0;
		}
		LEVEL 1 FOR 38960.364;
	}
}

TRANSITION_LIST("rdaddress_fade[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 319.223;
		NODE
		{
			REPEAT = 127;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 38720.777;
	}
}

TRANSITION_LIST("rdaddress_in[10]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 30757.786;
		LEVEL 1 FOR 30720.0;
		LEVEL 0 FOR 38522.214;
	}
}

TRANSITION_LIST("rdaddress_in[9]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 15398.566;
		LEVEL 1 FOR 15360.0;
		LEVEL 0 FOR 15360.0;
		LEVEL 1 FOR 15360.0;
		LEVEL 0 FOR 38521.434;
	}
}

TRANSITION_LIST("rdaddress_in[8]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 7718.304;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 7680.0;
			LEVEL 0 FOR 7680.0;
		}
		LEVEL 1 FOR 7680.0;
		LEVEL 0 FOR 38521.696;
	}
}

TRANSITION_LIST("rdaddress_in[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 3878.339;
		NODE
		{
			REPEAT = 7;
			LEVEL 1 FOR 3840.0;
			LEVEL 0 FOR 3840.0;
		}
		LEVEL 1 FOR 3840.0;
		LEVEL 0 FOR 38521.661;
	}
}

TRANSITION_LIST("rdaddress_in[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1957.955;
		NODE
		{
			REPEAT = 15;
			LEVEL 1 FOR 1920.0;
			LEVEL 0 FOR 1920.0;
		}
		LEVEL 1 FOR 1920.0;
		LEVEL 0 FOR 38522.045;
	}
}

TRANSITION_LIST("rdaddress_in[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 997.964;
		NODE
		{
			REPEAT = 31;
			LEVEL 1 FOR 960.0;
			LEVEL 0 FOR 960.0;
		}
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 38522.036;
	}
}

TRANSITION_LIST("rdaddress_in[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 518.912;
		NODE
		{
			REPEAT = 63;
			LEVEL 1 FOR 480.0;
			LEVEL 0 FOR 480.0;
		}
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 38521.088;
	}
}

TRANSITION_LIST("rdaddress_in[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 278.753;
		NODE
		{
			REPEAT = 127;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 38521.247;
	}
}

TRANSITION_LIST("rdaddress_in[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 118.137;
		NODE
		{
			REPEAT = 255;
			LEVEL 1 FOR 160.0;
			LEVEL 0 FOR 80.0;
		}
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 38521.863;
	}
}

TRANSITION_LIST("rdaddress_in[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 78.328;
		NODE
		{
			REPEAT = 255;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 120.0;
			LEVEL 0 FOR 40.0;
		}
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 38521.672;
	}
}

TRANSITION_LIST("rdaddress_in[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 58.297;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		NODE
		{
			REPEAT = 254;
			LEVEL 1 FOR 100.0;
			NODE
			{
				REPEAT = 3;
				LEVEL 0 FOR 20.0;
				LEVEL 1 FOR 20.0;
			}
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 100.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 38501.703;
	}
}

TRANSITION_LIST("recieved_codeword[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 498.375;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 960.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 480.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1440.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 720.0;
		}
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1680.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 960.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1440.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 480.0;
		}
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 480.0;
		}
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 1440.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 38541.625;
	}
}

TRANSITION_LIST("recieved_codeword[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 498.445;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 480.0;
			LEVEL 0 FOR 720.0;
		}
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 1440.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 240.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 480.0;
		}
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 720.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 480.0;
		}
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 480.0;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 480.0;
		}
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 1440.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 39021.555;
	}
}

TRANSITION_LIST("recieved_codeword[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 498.492;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1680.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1440.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 960.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 480.0;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 2160.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 1440.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1440.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 2160.0;
		LEVEL 1 FOR 1440.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 38541.508;
	}
}

TRANSITION_LIST("recieved_codeword[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 258.888;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 960.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 480.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 480.0;
		NODE
		{
			REPEAT = 4;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 1440.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 1920.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 480.0;
		}
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 720.0;
		}
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 38781.112;
	}
}

TRANSITION_LIST("recieved_codeword[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 258.639;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 1440.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 720.0;
			LEVEL 1 FOR 240.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 480.0;
			LEVEL 1 FOR 240.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1440.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1440.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1920.0;
		LEVEL 1 FOR 960.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 720.0;
			LEVEL 1 FOR 720.0;
			LEVEL 0 FOR 480.0;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 240.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 480.0;
		}
		LEVEL 1 FOR 2160.0;
		LEVEL 0 FOR 1680.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1680.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 38781.361;
	}
}

TRANSITION_LIST("recieved_codeword[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 497.816;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 960.0;
		}
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1440.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 720.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1920.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 2160.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 720.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 480.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1440.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 480.0;
			LEVEL 1 FOR 240.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 480.0;
		}
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1440.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		NODE
		{
			REPEAT = 5;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 480.0;
		}
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 39502.184;
	}
}

TRANSITION_LIST("recieved_codeword[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 258.172;
		LEVEL 1 FOR 1440.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 1440.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1680.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 1440.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 720.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 1200.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 480.0;
		}
		LEVEL 0 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 480.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 720.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 480.0;
		}
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 38541.828;
	}
}

TRANSITION_LIST("recieved_codeword[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 259.2;
		LEVEL 1 FOR 1440.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 1920.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 1680.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 960.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 960.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 960.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 480.0;
		}
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 720.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 480.0;
		}
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1440.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 480.0;
			LEVEL 1 FOR 480.0;
		}
		LEVEL 0 FOR 1200.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 720.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 480.0;
		}
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 1440.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1680.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 720.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 720.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1680.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 480.0;
		}
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 38540.8;
	}
}

TRANSITION_LIST("recvd_codeword[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 61522.139;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 140.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 80.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 80.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 80.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 40.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 60.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 100.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 60.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 40.0;
		}
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 33377.861;
	}
}

TRANSITION_LIST("recvd_codeword[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 61522.387;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 60.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 100.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 40.0;
		}
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 33377.613;
	}
}

TRANSITION_LIST("recvd_codeword[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 61542.718;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 80.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 60.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 180.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 60.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 20.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		NODE
		{
			REPEAT = 5;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 40.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 33457.282;
	}
}

TRANSITION_LIST("recvd_codeword[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 61522.487;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 60.0;
			LEVEL 1 FOR 20.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 20.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 80.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 60.0;
			LEVEL 1 FOR 60.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 40.0;
		}
		LEVEL 1 FOR 180.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 33397.513;
	}
}

TRANSITION_LIST("recvd_codeword[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 61522.072;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 80.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 4;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 60.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 33397.928;
	}
}

TRANSITION_LIST("recvd_codeword[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 61542.044;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 80.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 180.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 180.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 33377.956;
	}
}

TRANSITION_LIST("recvd_codeword[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 61543.15;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 60.0;
		}
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 20.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 40.0;
		}
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 40.0;
		}
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 40.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 33416.85;
	}
}

TRANSITION_LIST("recvd_codeword[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 61542.623;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 80.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 60.0;
		}
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 140.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 80.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 33377.377;
	}
}

TRANSITION_LIST("recvd_erasure_flag_0")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 63082.812;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 2080.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 260.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 760.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 33477.188;
	}
}

TRANSITION_LIST("recvd_erasure_flag_1")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 62381.65;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 260.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 400.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 2080.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 260.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 760.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 33478.35;
	}
}

TRANSITION_LIST("recvd_erasure_flag_2")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 63081.82;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 2080.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 1040.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 33478.18;
	}
}

TRANSITION_LIST("send_data")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 61500.163;
		LEVEL 1 FOR 38499.837;
	}
}

TRANSITION_LIST("send_erasure_polyn_0")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 67177.696;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 32702.304;
	}
}

TRANSITION_LIST("send_erasure_polyn_1")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 67219.277;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 32620.723;
	}
}

TRANSITION_LIST("send_erasure_polyn_2")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 67159.728;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 32740.272;
	}
}

TRANSITION_LIST("send_syndr_polyn_0")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 67217.597;
		LEVEL 1 FOR 360.0;
		LEVEL 0 FOR 32422.403;
	}
}

TRANSITION_LIST("send_syndr_polyn_1")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 67258.823;
		LEVEL 1 FOR 360.0;
		LEVEL 0 FOR 32381.177;
	}
}

TRANSITION_LIST("send_syndr_polyn_2")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 67198.65;
		LEVEL 1 FOR 360.0;
		LEVEL 0 FOR 32441.35;
	}
}

TRANSITION_LIST("send_unmodified_syndr_polyn_0")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100000.0;
	}
}

TRANSITION_LIST("send_unmodified_syndr_polyn_1")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100000.0;
	}
}

TRANSITION_LIST("send_unmodified_syndr_polyn_2")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100000.0;
	}
}

TRANSITION_LIST("sigma_square[9]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100000.0;
	}
}

TRANSITION_LIST("sigma_square[8]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100000.0;
	}
}

TRANSITION_LIST("sigma_square[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100000.0;
	}
}

TRANSITION_LIST("sigma_square[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 100000.0;
	}
}

TRANSITION_LIST("sigma_square[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 100000.0;
	}
}

TRANSITION_LIST("sigma_square[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 100000.0;
	}
}

TRANSITION_LIST("sigma_square[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 100000.0;
	}
}

TRANSITION_LIST("sigma_square[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100000.0;
	}
}

TRANSITION_LIST("sigma_square[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100000.0;
	}
}

TRANSITION_LIST("sigma_square[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 100000.0;
	}
}

TRANSITION_LIST("signal_count[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 177.871;
		NODE
		{
			REPEAT = 255;
			LEVEL 1 FOR 80.0;
			LEVEL 0 FOR 160.0;
		}
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 38542.129;
	}
}

TRANSITION_LIST("signal_count[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 98.912;
		NODE
		{
			REPEAT = 255;
			LEVEL 1 FOR 80.0;
			LEVEL 0 FOR 160.0;
		}
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 38621.088;
	}
}

TRANSITION_LIST("signal_count[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 57.748;
		NODE
		{
			REPEAT = 768;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 40.0;
		}
		LEVEL 1 FOR 38502.252;
	}
}

TRANSITION_LIST("signal_count[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 37.928;
		NODE
		{
			REPEAT = 1536;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 38502.072;
	}
}

TRANSITION_LIST("start_erasure_polyn_compute")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 67018.547;
		LEVEL 1 FOR 32981.453;
	}
}

TRANSITION_LIST("start_modified_syndrome_polyn_compute")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 67018.547;
		LEVEL 1 FOR 32981.453;
	}
}

TRANSITION_LIST("state_case_0[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 67697.888;
		LEVEL 1 FOR 520.0;
		LEVEL 0 FOR 380.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 520.0;
			LEVEL 0 FOR 400.0;
		}
		LEVEL 1 FOR 520.0;
		LEVEL 0 FOR 560.0;
		LEVEL 1 FOR 28482.112;
	}
}

TRANSITION_LIST("state_case_0[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 67657.941;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 260.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 260.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 320.0;
		LEVEL 0 FOR 28482.059;
	}
}

TRANSITION_LIST("state_case_0[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 67637.729;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 460.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 460.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 60.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 80.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 460.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 220.0;
			LEVEL 0 FOR 80.0;
		}
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 28482.271;
	}
}

TRANSITION_LIST("state_case_1[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 67938.646;
		LEVEL 1 FOR 32061.354;
	}
}

TRANSITION_LIST("state_case_1[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 67699.285;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 32060.715;
	}
}

TRANSITION_LIST("state_case_1[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 67678.766;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 220.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 32061.234;
	}
}

TRANSITION_LIST("state_case_2[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 67677.921;
		LEVEL 1 FOR 520.0;
		LEVEL 0 FOR 400.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 520.0;
			LEVEL 0 FOR 420.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 520.0;
			LEVEL 0 FOR 440.0;
		}
		LEVEL 1 FOR 520.0;
		LEVEL 0 FOR 580.0;
		LEVEL 1 FOR 26502.079;
	}
}

TRANSITION_LIST("state_case_2[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 67637.517;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 280.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 280.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 260.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 260.0;
		LEVEL 1 FOR 180.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 340.0;
		LEVEL 0 FOR 26502.483;
	}
}

TRANSITION_LIST("state_case_2[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 67617.956;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 460.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 260.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 460.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 260.0;
		LEVEL 0 FOR 60.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 80.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 460.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 80.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 100.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 460.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 220.0;
			LEVEL 0 FOR 100.0;
		}
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 26502.044;
	}
}

TRANSITION_LIST("syndr_coef_ready_0")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 67238.531;
		LEVEL 1 FOR 360.0;
		LEVEL 0 FOR 32401.469;
	}
}

TRANSITION_LIST("syndr_coef_ready_1")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 67278.297;
		LEVEL 1 FOR 360.0;
		LEVEL 0 FOR 32361.703;
	}
}

TRANSITION_LIST("syndr_coef_ready_2")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 67217.815;
		LEVEL 1 FOR 360.0;
		LEVEL 0 FOR 32422.185;
	}
}

TRANSITION_LIST("syndrome[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 66679.182;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 33000.818;
	}
}

TRANSITION_LIST("syndrome[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 66719.338;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 33160.662;
	}
}

TRANSITION_LIST("syndrome[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 66798.755;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 33081.245;
	}
}

TRANSITION_LIST("syndrome[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 66679.251;
		LEVEL 1 FOR 60.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 33000.749;
	}
}

TRANSITION_LIST("syndrome[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 66679.441;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 33000.559;
	}
}

TRANSITION_LIST("syndrome[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 66719.287;
		LEVEL 1 FOR 100.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 33020.713;
	}
}

TRANSITION_LIST("syndrome[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 66678.58;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 33001.42;
	}
}

TRANSITION_LIST("syndrome[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 66659.76;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 33040.24;
	}
}

TRANSITION_LIST("threshold_0[8]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 100000.0;
	}
}

TRANSITION_LIST("threshold_0[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 100000.0;
	}
}

TRANSITION_LIST("threshold_0[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100000.0;
	}
}

TRANSITION_LIST("threshold_0[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 100000.0;
	}
}

TRANSITION_LIST("threshold_0[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100000.0;
	}
}

TRANSITION_LIST("threshold_0[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100000.0;
	}
}

TRANSITION_LIST("threshold_0[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100000.0;
	}
}

TRANSITION_LIST("threshold_0[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 100000.0;
	}
}

TRANSITION_LIST("threshold_0[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100000.0;
	}
}

TRANSITION_LIST("threshold_1[8]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 100000.0;
	}
}

TRANSITION_LIST("threshold_1[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100000.0;
	}
}

TRANSITION_LIST("threshold_1[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 100000.0;
	}
}

TRANSITION_LIST("threshold_1[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100000.0;
	}
}

TRANSITION_LIST("threshold_1[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 100000.0;
	}
}

TRANSITION_LIST("threshold_1[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100000.0;
	}
}

TRANSITION_LIST("threshold_1[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100000.0;
	}
}

TRANSITION_LIST("threshold_1[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 100000.0;
	}
}

TRANSITION_LIST("threshold_1[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 100000.0;
	}
}

TRANSITION_LIST("threshold_2[8]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 100000.0;
	}
}

TRANSITION_LIST("threshold_2[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 100000.0;
	}
}

TRANSITION_LIST("threshold_2[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100000.0;
	}
}

TRANSITION_LIST("threshold_2[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 100000.0;
	}
}

TRANSITION_LIST("threshold_2[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 100000.0;
	}
}

TRANSITION_LIST("threshold_2[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100000.0;
	}
}

TRANSITION_LIST("threshold_2[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 100000.0;
	}
}

TRANSITION_LIST("threshold_2[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100000.0;
	}
}

TRANSITION_LIST("threshold_2[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 100000.0;
	}
}

TRANSITION_LIST("unmodified_syndr_polyn_0[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100000.0;
	}
}

TRANSITION_LIST("unmodified_syndr_polyn_0[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100000.0;
	}
}

TRANSITION_LIST("unmodified_syndr_polyn_0[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100000.0;
	}
}

TRANSITION_LIST("unmodified_syndr_polyn_0[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100000.0;
	}
}

TRANSITION_LIST("unmodified_syndr_polyn_0[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100000.0;
	}
}

TRANSITION_LIST("unmodified_syndr_polyn_0[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100000.0;
	}
}

TRANSITION_LIST("unmodified_syndr_polyn_0[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100000.0;
	}
}

TRANSITION_LIST("unmodified_syndr_polyn_0[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100000.0;
	}
}

TRANSITION_LIST("unmodified_syndr_polyn_1[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100000.0;
	}
}

TRANSITION_LIST("unmodified_syndr_polyn_1[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100000.0;
	}
}

TRANSITION_LIST("unmodified_syndr_polyn_1[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100000.0;
	}
}

TRANSITION_LIST("unmodified_syndr_polyn_1[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100000.0;
	}
}

TRANSITION_LIST("unmodified_syndr_polyn_1[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100000.0;
	}
}

TRANSITION_LIST("unmodified_syndr_polyn_1[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100000.0;
	}
}

TRANSITION_LIST("unmodified_syndr_polyn_1[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100000.0;
	}
}

TRANSITION_LIST("unmodified_syndr_polyn_1[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100000.0;
	}
}

TRANSITION_LIST("unmodified_syndr_polyn_2[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100000.0;
	}
}

TRANSITION_LIST("unmodified_syndr_polyn_2[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100000.0;
	}
}

TRANSITION_LIST("unmodified_syndr_polyn_2[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100000.0;
	}
}

TRANSITION_LIST("unmodified_syndr_polyn_2[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100000.0;
	}
}

TRANSITION_LIST("unmodified_syndr_polyn_2[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100000.0;
	}
}

TRANSITION_LIST("unmodified_syndr_polyn_2[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100000.0;
	}
}

TRANSITION_LIST("unmodified_syndr_polyn_2[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100000.0;
	}
}

TRANSITION_LIST("unmodified_syndr_polyn_2[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100000.0;
	}
}

TRANSITION_LIST("wren")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 61498.743;
		LEVEL 1 FOR 5120.0;
		LEVEL 0 FOR 33381.257;
	}
}

TRANSITION_LIST("wren_decoder_in_buffer")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 278.347;
		LEVEL 1 FOR 99721.653;
	}
}

TRANSITION_LIST("write_addr[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 30999.098;
		LEVEL 1 FOR 69000.902;
	}
}

TRANSITION_LIST("write_addr[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 15639.343;
		LEVEL 1 FOR 15360.0;
		LEVEL 0 FOR 15360.0;
		LEVEL 1 FOR 53640.657;
	}
}

TRANSITION_LIST("write_addr[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 7958.601;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 7680.0;
			LEVEL 0 FOR 7680.0;
		}
		LEVEL 1 FOR 45961.399;
	}
}

TRANSITION_LIST("write_addr[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 4117.828;
		NODE
		{
			REPEAT = 7;
			LEVEL 1 FOR 3840.0;
			LEVEL 0 FOR 3840.0;
		}
		LEVEL 1 FOR 42122.172;
	}
}

TRANSITION_LIST("write_addr[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2198.705;
		NODE
		{
			REPEAT = 15;
			LEVEL 1 FOR 1920.0;
			LEVEL 0 FOR 1920.0;
		}
		LEVEL 1 FOR 40201.295;
	}
}

TRANSITION_LIST("write_addr[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1238.266;
		NODE
		{
			REPEAT = 31;
			LEVEL 1 FOR 960.0;
			LEVEL 0 FOR 960.0;
		}
		LEVEL 1 FOR 39241.734;
	}
}

TRANSITION_LIST("write_addr[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 758.233;
		NODE
		{
			REPEAT = 63;
			LEVEL 1 FOR 480.0;
			LEVEL 0 FOR 480.0;
		}
		LEVEL 1 FOR 38761.767;
	}
}

TRANSITION_LIST("write_addr[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 519.106;
		NODE
		{
			REPEAT = 127;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 38520.894;
	}
}

DISPLAY_LINE
{
	CHANNEL = "ext_clk";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 0;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "k_value";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 1;
	TREE_LEVEL = 0;
	CHILDREN = 2, 3, 4, 5, 6, 7, 8, 9;
}

DISPLAY_LINE
{
	CHANNEL = "k_value[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 2;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "k_value[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 3;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "k_value[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 4;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "k_value[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 5;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "k_value[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 6;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "k_value[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 7;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "k_value[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 8;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "k_value[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 9;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "reset";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 10;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "sigma_value";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 11;
	TREE_LEVEL = 0;
	CHILDREN = 12, 13, 14, 15, 16;
}

DISPLAY_LINE
{
	CHANNEL = "sigma_value[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 12;
	TREE_LEVEL = 1;
	PARENT = 11;
}

DISPLAY_LINE
{
	CHANNEL = "sigma_value[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 13;
	TREE_LEVEL = 1;
	PARENT = 11;
}

DISPLAY_LINE
{
	CHANNEL = "sigma_value[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 14;
	TREE_LEVEL = 1;
	PARENT = 11;
}

DISPLAY_LINE
{
	CHANNEL = "sigma_value[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 15;
	TREE_LEVEL = 1;
	PARENT = 11;
}

DISPLAY_LINE
{
	CHANNEL = "sigma_value[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 16;
	TREE_LEVEL = 1;
	PARENT = 11;
}

DISPLAY_LINE
{
	CHANNEL = "L_degree_0";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 17;
	TREE_LEVEL = 0;
	CHILDREN = 18, 19, 20, 21, 22;
}

DISPLAY_LINE
{
	CHANNEL = "L_degree_0[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 18;
	TREE_LEVEL = 1;
	PARENT = 17;
}

DISPLAY_LINE
{
	CHANNEL = "L_degree_0[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 19;
	TREE_LEVEL = 1;
	PARENT = 17;
}

DISPLAY_LINE
{
	CHANNEL = "L_degree_0[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 20;
	TREE_LEVEL = 1;
	PARENT = 17;
}

DISPLAY_LINE
{
	CHANNEL = "L_degree_0[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 21;
	TREE_LEVEL = 1;
	PARENT = 17;
}

DISPLAY_LINE
{
	CHANNEL = "L_degree_0[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 22;
	TREE_LEVEL = 1;
	PARENT = 17;
}

DISPLAY_LINE
{
	CHANNEL = "L_degree_0[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 23;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "L_degree_0[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 24;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "L_degree_0[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 25;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "L_degree_0[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 26;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "L_degree_0[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 27;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "L_degree_1";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 28;
	TREE_LEVEL = 0;
	CHILDREN = 29, 30, 31, 32, 33;
}

DISPLAY_LINE
{
	CHANNEL = "L_degree_1[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 29;
	TREE_LEVEL = 1;
	PARENT = 28;
}

DISPLAY_LINE
{
	CHANNEL = "L_degree_1[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 30;
	TREE_LEVEL = 1;
	PARENT = 28;
}

DISPLAY_LINE
{
	CHANNEL = "L_degree_1[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 31;
	TREE_LEVEL = 1;
	PARENT = 28;
}

DISPLAY_LINE
{
	CHANNEL = "L_degree_1[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 32;
	TREE_LEVEL = 1;
	PARENT = 28;
}

DISPLAY_LINE
{
	CHANNEL = "L_degree_1[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 33;
	TREE_LEVEL = 1;
	PARENT = 28;
}

DISPLAY_LINE
{
	CHANNEL = "L_degree_1[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 34;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "L_degree_1[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 35;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "L_degree_1[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 36;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "L_degree_1[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 37;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "L_degree_1[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 38;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "L_degree_2";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 39;
	TREE_LEVEL = 0;
	CHILDREN = 40, 41, 42, 43, 44;
}

DISPLAY_LINE
{
	CHANNEL = "L_degree_2[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 40;
	TREE_LEVEL = 1;
	PARENT = 39;
}

DISPLAY_LINE
{
	CHANNEL = "L_degree_2[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 41;
	TREE_LEVEL = 1;
	PARENT = 39;
}

DISPLAY_LINE
{
	CHANNEL = "L_degree_2[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 42;
	TREE_LEVEL = 1;
	PARENT = 39;
}

DISPLAY_LINE
{
	CHANNEL = "L_degree_2[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 43;
	TREE_LEVEL = 1;
	PARENT = 39;
}

DISPLAY_LINE
{
	CHANNEL = "L_degree_2[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 44;
	TREE_LEVEL = 1;
	PARENT = 39;
}

DISPLAY_LINE
{
	CHANNEL = "L_degree_2[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 45;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "L_degree_2[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 46;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "L_degree_2[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 47;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "L_degree_2[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 48;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "L_degree_2[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 49;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "MEA_compute_done_0";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 50;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "MEA_compute_done_1";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 51;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "MEA_compute_done_2";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 52;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Q_degree_0";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 53;
	TREE_LEVEL = 0;
	CHILDREN = 54, 55, 56, 57, 58;
}

DISPLAY_LINE
{
	CHANNEL = "Q_degree_0[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 54;
	TREE_LEVEL = 1;
	PARENT = 53;
}

DISPLAY_LINE
{
	CHANNEL = "Q_degree_0[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 55;
	TREE_LEVEL = 1;
	PARENT = 53;
}

DISPLAY_LINE
{
	CHANNEL = "Q_degree_0[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 56;
	TREE_LEVEL = 1;
	PARENT = 53;
}

DISPLAY_LINE
{
	CHANNEL = "Q_degree_0[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 57;
	TREE_LEVEL = 1;
	PARENT = 53;
}

DISPLAY_LINE
{
	CHANNEL = "Q_degree_0[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 58;
	TREE_LEVEL = 1;
	PARENT = 53;
}

DISPLAY_LINE
{
	CHANNEL = "Q_degree_0[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 59;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Q_degree_0[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 60;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Q_degree_0[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 61;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Q_degree_0[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 62;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Q_degree_0[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 63;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Q_degree_1";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 64;
	TREE_LEVEL = 0;
	CHILDREN = 65, 66, 67, 68, 69;
}

DISPLAY_LINE
{
	CHANNEL = "Q_degree_1[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 65;
	TREE_LEVEL = 1;
	PARENT = 64;
}

DISPLAY_LINE
{
	CHANNEL = "Q_degree_1[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 66;
	TREE_LEVEL = 1;
	PARENT = 64;
}

DISPLAY_LINE
{
	CHANNEL = "Q_degree_1[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 67;
	TREE_LEVEL = 1;
	PARENT = 64;
}

DISPLAY_LINE
{
	CHANNEL = "Q_degree_1[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 68;
	TREE_LEVEL = 1;
	PARENT = 64;
}

DISPLAY_LINE
{
	CHANNEL = "Q_degree_1[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 69;
	TREE_LEVEL = 1;
	PARENT = 64;
}

DISPLAY_LINE
{
	CHANNEL = "Q_degree_1[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 70;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Q_degree_1[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 71;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Q_degree_1[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 72;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Q_degree_1[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 73;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Q_degree_1[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 74;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Q_degree_2";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 75;
	TREE_LEVEL = 0;
	CHILDREN = 76, 77, 78, 79, 80;
}

DISPLAY_LINE
{
	CHANNEL = "Q_degree_2[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 76;
	TREE_LEVEL = 1;
	PARENT = 75;
}

DISPLAY_LINE
{
	CHANNEL = "Q_degree_2[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 77;
	TREE_LEVEL = 1;
	PARENT = 75;
}

DISPLAY_LINE
{
	CHANNEL = "Q_degree_2[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 78;
	TREE_LEVEL = 1;
	PARENT = 75;
}

DISPLAY_LINE
{
	CHANNEL = "Q_degree_2[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 79;
	TREE_LEVEL = 1;
	PARENT = 75;
}

DISPLAY_LINE
{
	CHANNEL = "Q_degree_2[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 80;
	TREE_LEVEL = 1;
	PARENT = 75;
}

DISPLAY_LINE
{
	CHANNEL = "Q_degree_2[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 81;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Q_degree_2[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 82;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Q_degree_2[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 83;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Q_degree_2[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 84;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Q_degree_2[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 85;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "R_degree_0";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 86;
	TREE_LEVEL = 0;
	CHILDREN = 87, 88, 89, 90, 91;
}

DISPLAY_LINE
{
	CHANNEL = "R_degree_0[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 87;
	TREE_LEVEL = 1;
	PARENT = 86;
}

DISPLAY_LINE
{
	CHANNEL = "R_degree_0[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 88;
	TREE_LEVEL = 1;
	PARENT = 86;
}

DISPLAY_LINE
{
	CHANNEL = "R_degree_0[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 89;
	TREE_LEVEL = 1;
	PARENT = 86;
}

DISPLAY_LINE
{
	CHANNEL = "R_degree_0[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 90;
	TREE_LEVEL = 1;
	PARENT = 86;
}

DISPLAY_LINE
{
	CHANNEL = "R_degree_0[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 91;
	TREE_LEVEL = 1;
	PARENT = 86;
}

DISPLAY_LINE
{
	CHANNEL = "R_degree_0[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 92;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "R_degree_0[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 93;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "R_degree_0[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 94;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "R_degree_0[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 95;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "R_degree_0[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 96;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "R_degree_1";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 97;
	TREE_LEVEL = 0;
	CHILDREN = 98, 99, 100, 101, 102;
}

DISPLAY_LINE
{
	CHANNEL = "R_degree_1[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 98;
	TREE_LEVEL = 1;
	PARENT = 97;
}

DISPLAY_LINE
{
	CHANNEL = "R_degree_1[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 99;
	TREE_LEVEL = 1;
	PARENT = 97;
}

DISPLAY_LINE
{
	CHANNEL = "R_degree_1[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 100;
	TREE_LEVEL = 1;
	PARENT = 97;
}

DISPLAY_LINE
{
	CHANNEL = "R_degree_1[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 101;
	TREE_LEVEL = 1;
	PARENT = 97;
}

DISPLAY_LINE
{
	CHANNEL = "R_degree_1[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 102;
	TREE_LEVEL = 1;
	PARENT = 97;
}

DISPLAY_LINE
{
	CHANNEL = "R_degree_1[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 103;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "R_degree_1[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 104;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "R_degree_1[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 105;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "R_degree_1[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 106;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "R_degree_1[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 107;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "R_degree_2";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 108;
	TREE_LEVEL = 0;
	CHILDREN = 109, 110, 111, 112, 113;
}

DISPLAY_LINE
{
	CHANNEL = "R_degree_2[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 109;
	TREE_LEVEL = 1;
	PARENT = 108;
}

DISPLAY_LINE
{
	CHANNEL = "R_degree_2[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 110;
	TREE_LEVEL = 1;
	PARENT = 108;
}

DISPLAY_LINE
{
	CHANNEL = "R_degree_2[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 111;
	TREE_LEVEL = 1;
	PARENT = 108;
}

DISPLAY_LINE
{
	CHANNEL = "R_degree_2[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 112;
	TREE_LEVEL = 1;
	PARENT = 108;
}

DISPLAY_LINE
{
	CHANNEL = "R_degree_2[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 113;
	TREE_LEVEL = 1;
	PARENT = 108;
}

DISPLAY_LINE
{
	CHANNEL = "R_degree_2[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 114;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "R_degree_2[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 115;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "R_degree_2[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 116;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "R_degree_2[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 117;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "R_degree_2[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 118;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "channel_char";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 119;
	TREE_LEVEL = 0;
	CHILDREN = 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134;
}

DISPLAY_LINE
{
	CHANNEL = "channel_char[14]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 120;
	TREE_LEVEL = 1;
	PARENT = 119;
}

DISPLAY_LINE
{
	CHANNEL = "channel_char[13]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 121;
	TREE_LEVEL = 1;
	PARENT = 119;
}

DISPLAY_LINE
{
	CHANNEL = "channel_char[12]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 122;
	TREE_LEVEL = 1;
	PARENT = 119;
}

DISPLAY_LINE
{
	CHANNEL = "channel_char[11]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 123;
	TREE_LEVEL = 1;
	PARENT = 119;
}

DISPLAY_LINE
{
	CHANNEL = "channel_char[10]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 124;
	TREE_LEVEL = 1;
	PARENT = 119;
}

DISPLAY_LINE
{
	CHANNEL = "channel_char[9]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 125;
	TREE_LEVEL = 1;
	PARENT = 119;
}

DISPLAY_LINE
{
	CHANNEL = "channel_char[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 126;
	TREE_LEVEL = 1;
	PARENT = 119;
}

DISPLAY_LINE
{
	CHANNEL = "channel_char[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 127;
	TREE_LEVEL = 1;
	PARENT = 119;
}

DISPLAY_LINE
{
	CHANNEL = "channel_char[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 128;
	TREE_LEVEL = 1;
	PARENT = 119;
}

DISPLAY_LINE
{
	CHANNEL = "channel_char[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 129;
	TREE_LEVEL = 1;
	PARENT = 119;
}

DISPLAY_LINE
{
	CHANNEL = "channel_char[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 130;
	TREE_LEVEL = 1;
	PARENT = 119;
}

DISPLAY_LINE
{
	CHANNEL = "channel_char[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 131;
	TREE_LEVEL = 1;
	PARENT = 119;
}

DISPLAY_LINE
{
	CHANNEL = "channel_char[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 132;
	TREE_LEVEL = 1;
	PARENT = 119;
}

DISPLAY_LINE
{
	CHANNEL = "channel_char[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 133;
	TREE_LEVEL = 1;
	PARENT = 119;
}

DISPLAY_LINE
{
	CHANNEL = "channel_char[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 134;
	TREE_LEVEL = 1;
	PARENT = 119;
}

DISPLAY_LINE
{
	CHANNEL = "channel_char[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 135;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "channel_char[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 136;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "channel_char[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 137;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "channel_char[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 138;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "channel_char[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 139;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "channel_char[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 140;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "channel_char[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 141;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "channel_char[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 142;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "channel_char[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 143;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "channel_char[9]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 144;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "channel_char[10]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 145;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "channel_char[11]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 146;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "channel_char[12]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 147;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "channel_char[13]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 148;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "channel_char[14]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 149;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "corrected_cw";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 150;
	TREE_LEVEL = 0;
	CHILDREN = 151, 152, 153, 154, 155, 156, 157, 158;
}

DISPLAY_LINE
{
	CHANNEL = "corrected_cw[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 151;
	TREE_LEVEL = 1;
	PARENT = 150;
}

DISPLAY_LINE
{
	CHANNEL = "corrected_cw[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 152;
	TREE_LEVEL = 1;
	PARENT = 150;
}

DISPLAY_LINE
{
	CHANNEL = "corrected_cw[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 153;
	TREE_LEVEL = 1;
	PARENT = 150;
}

DISPLAY_LINE
{
	CHANNEL = "corrected_cw[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 154;
	TREE_LEVEL = 1;
	PARENT = 150;
}

DISPLAY_LINE
{
	CHANNEL = "corrected_cw[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 155;
	TREE_LEVEL = 1;
	PARENT = 150;
}

DISPLAY_LINE
{
	CHANNEL = "corrected_cw[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 156;
	TREE_LEVEL = 1;
	PARENT = 150;
}

DISPLAY_LINE
{
	CHANNEL = "corrected_cw[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 157;
	TREE_LEVEL = 1;
	PARENT = 150;
}

DISPLAY_LINE
{
	CHANNEL = "corrected_cw[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 158;
	TREE_LEVEL = 1;
	PARENT = 150;
}

DISPLAY_LINE
{
	CHANNEL = "corrected_cw[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 159;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "corrected_cw[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 160;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "corrected_cw[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 161;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "corrected_cw[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 162;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "corrected_cw[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 163;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "corrected_cw[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 164;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "corrected_cw[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 165;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "corrected_cw[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 166;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "corrected_cword_ready";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 167;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "corrected_error_count";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 168;
	TREE_LEVEL = 0;
	CHILDREN = 169, 170, 171, 172, 173, 174, 175, 176;
}

DISPLAY_LINE
{
	CHANNEL = "corrected_error_count[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 169;
	TREE_LEVEL = 1;
	PARENT = 168;
}

DISPLAY_LINE
{
	CHANNEL = "corrected_error_count[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 170;
	TREE_LEVEL = 1;
	PARENT = 168;
}

DISPLAY_LINE
{
	CHANNEL = "corrected_error_count[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 171;
	TREE_LEVEL = 1;
	PARENT = 168;
}

DISPLAY_LINE
{
	CHANNEL = "corrected_error_count[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 172;
	TREE_LEVEL = 1;
	PARENT = 168;
}

DISPLAY_LINE
{
	CHANNEL = "corrected_error_count[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 173;
	TREE_LEVEL = 1;
	PARENT = 168;
}

DISPLAY_LINE
{
	CHANNEL = "corrected_error_count[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 174;
	TREE_LEVEL = 1;
	PARENT = 168;
}

DISPLAY_LINE
{
	CHANNEL = "corrected_error_count[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 175;
	TREE_LEVEL = 1;
	PARENT = 168;
}

DISPLAY_LINE
{
	CHANNEL = "corrected_error_count[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 176;
	TREE_LEVEL = 1;
	PARENT = 168;
}

DISPLAY_LINE
{
	CHANNEL = "corrected_error_count[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 177;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "corrected_error_count[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 178;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "corrected_error_count[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 179;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "corrected_error_count[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 180;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "corrected_error_count[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 181;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "corrected_error_count[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 182;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "corrected_error_count[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 183;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "corrected_error_count[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 184;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "cutoff_threshold_0";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 185;
	TREE_LEVEL = 0;
	CHILDREN = 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209;
}

DISPLAY_LINE
{
	CHANNEL = "cutoff_threshold_0[23]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 186;
	TREE_LEVEL = 1;
	PARENT = 185;
}

DISPLAY_LINE
{
	CHANNEL = "cutoff_threshold_0[22]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 187;
	TREE_LEVEL = 1;
	PARENT = 185;
}

DISPLAY_LINE
{
	CHANNEL = "cutoff_threshold_0[21]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 188;
	TREE_LEVEL = 1;
	PARENT = 185;
}

DISPLAY_LINE
{
	CHANNEL = "cutoff_threshold_0[20]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 189;
	TREE_LEVEL = 1;
	PARENT = 185;
}

DISPLAY_LINE
{
	CHANNEL = "cutoff_threshold_0[19]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 190;
	TREE_LEVEL = 1;
	PARENT = 185;
}

DISPLAY_LINE
{
	CHANNEL = "cutoff_threshold_0[18]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 191;
	TREE_LEVEL = 1;
	PARENT = 185;
}

DISPLAY_LINE
{
	CHANNEL = "cutoff_threshold_0[17]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 192;
	TREE_LEVEL = 1;
	PARENT = 185;
}

DISPLAY_LINE
{
	CHANNEL = "cutoff_threshold_0[16]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 193;
	TREE_LEVEL = 1;
	PARENT = 185;
}

DISPLAY_LINE
{
	CHANNEL = "cutoff_threshold_0[15]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 194;
	TREE_LEVEL = 1;
	PARENT = 185;
}

DISPLAY_LINE
{
	CHANNEL = "cutoff_threshold_0[14]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 195;
	TREE_LEVEL = 1;
	PARENT = 185;
}

DISPLAY_LINE
{
	CHANNEL = "cutoff_threshold_0[13]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 196;
	TREE_LEVEL = 1;
	PARENT = 185;
}

DISPLAY_LINE
{
	CHANNEL = "cutoff_threshold_0[12]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 197;
	TREE_LEVEL = 1;
	PARENT = 185;
}

DISPLAY_LINE
{
	CHANNEL = "cutoff_threshold_0[11]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 198;
	TREE_LEVEL = 1;
	PARENT = 185;
}

DISPLAY_LINE
{
	CHANNEL = "cutoff_threshold_0[10]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 199;
	TREE_LEVEL = 1;
	PARENT = 185;
}

DISPLAY_LINE
{
	CHANNEL = "cutoff_threshold_0[9]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 200;
	TREE_LEVEL = 1;
	PARENT = 185;
}

DISPLAY_LINE
{
	CHANNEL = "cutoff_threshold_0[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 201;
	TREE_LEVEL = 1;
	PARENT = 185;
}

DISPLAY_LINE
{
	CHANNEL = "cutoff_threshold_0[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 202;
	TREE_LEVEL = 1;
	PARENT = 185;
}

DISPLAY_LINE
{
	CHANNEL = "cutoff_threshold_0[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 203;
	TREE_LEVEL = 1;
	PARENT = 185;
}

DISPLAY_LINE
{
	CHANNEL = "cutoff_threshold_0[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 204;
	TREE_LEVEL = 1;
	PARENT = 185;
}

DISPLAY_LINE
{
	CHANNEL = "cutoff_threshold_0[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 205;
	TREE_LEVEL = 1;
	PARENT = 185;
}

DISPLAY_LINE
{
	CHANNEL = "cutoff_threshold_0[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 206;
	TREE_LEVEL = 1;
	PARENT = 185;
}

DISPLAY_LINE
{
	CHANNEL = "cutoff_threshold_0[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 207;
	TREE_LEVEL = 1;
	PARENT = 185;
}

DISPLAY_LINE
{
	CHANNEL = "cutoff_threshold_0[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 208;
	TREE_LEVEL = 1;
	PARENT = 185;
}

DISPLAY_LINE
{
	CHANNEL = "cutoff_threshold_0[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 209;
	TREE_LEVEL = 1;
	PARENT = 185;
}

DISPLAY_LINE
{
	CHANNEL = "cutoff_threshold_0[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 210;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "cutoff_threshold_0[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 211;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "cutoff_threshold_0[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 212;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "cutoff_threshold_0[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 213;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "cutoff_threshold_0[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 214;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "cutoff_threshold_0[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 215;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "cutoff_threshold_0[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 216;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "cutoff_threshold_0[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 217;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "cutoff_threshold_0[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 218;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "cutoff_threshold_0[9]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 219;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "cutoff_threshold_0[10]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 220;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "cutoff_threshold_0[11]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 221;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "cutoff_threshold_0[12]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 222;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "cutoff_threshold_0[13]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 223;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "cutoff_threshold_0[14]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 224;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "cutoff_threshold_0[15]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 225;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "cutoff_threshold_0[16]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 226;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "cutoff_threshold_0[17]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 227;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "cutoff_threshold_0[18]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 228;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "cutoff_threshold_0[19]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 229;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "cutoff_threshold_0[20]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 230;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "cutoff_threshold_0[21]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 231;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "cutoff_threshold_0[22]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 232;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "cutoff_threshold_0[23]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 233;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "cutoff_threshold_1";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 234;
	TREE_LEVEL = 0;
	CHILDREN = 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258;
}

DISPLAY_LINE
{
	CHANNEL = "cutoff_threshold_1[23]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 235;
	TREE_LEVEL = 1;
	PARENT = 234;
}

DISPLAY_LINE
{
	CHANNEL = "cutoff_threshold_1[22]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 236;
	TREE_LEVEL = 1;
	PARENT = 234;
}

DISPLAY_LINE
{
	CHANNEL = "cutoff_threshold_1[21]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 237;
	TREE_LEVEL = 1;
	PARENT = 234;
}

DISPLAY_LINE
{
	CHANNEL = "cutoff_threshold_1[20]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 238;
	TREE_LEVEL = 1;
	PARENT = 234;
}

DISPLAY_LINE
{
	CHANNEL = "cutoff_threshold_1[19]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 239;
	TREE_LEVEL = 1;
	PARENT = 234;
}

DISPLAY_LINE
{
	CHANNEL = "cutoff_threshold_1[18]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 240;
	TREE_LEVEL = 1;
	PARENT = 234;
}

DISPLAY_LINE
{
	CHANNEL = "cutoff_threshold_1[17]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 241;
	TREE_LEVEL = 1;
	PARENT = 234;
}

DISPLAY_LINE
{
	CHANNEL = "cutoff_threshold_1[16]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 242;
	TREE_LEVEL = 1;
	PARENT = 234;
}

DISPLAY_LINE
{
	CHANNEL = "cutoff_threshold_1[15]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 243;
	TREE_LEVEL = 1;
	PARENT = 234;
}

DISPLAY_LINE
{
	CHANNEL = "cutoff_threshold_1[14]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 244;
	TREE_LEVEL = 1;
	PARENT = 234;
}

DISPLAY_LINE
{
	CHANNEL = "cutoff_threshold_1[13]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 245;
	TREE_LEVEL = 1;
	PARENT = 234;
}

DISPLAY_LINE
{
	CHANNEL = "cutoff_threshold_1[12]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 246;
	TREE_LEVEL = 1;
	PARENT = 234;
}

DISPLAY_LINE
{
	CHANNEL = "cutoff_threshold_1[11]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 247;
	TREE_LEVEL = 1;
	PARENT = 234;
}

DISPLAY_LINE
{
	CHANNEL = "cutoff_threshold_1[10]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 248;
	TREE_LEVEL = 1;
	PARENT = 234;
}

DISPLAY_LINE
{
	CHANNEL = "cutoff_threshold_1[9]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 249;
	TREE_LEVEL = 1;
	PARENT = 234;
}

DISPLAY_LINE
{
	CHANNEL = "cutoff_threshold_1[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 250;
	TREE_LEVEL = 1;
	PARENT = 234;
}

DISPLAY_LINE
{
	CHANNEL = "cutoff_threshold_1[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 251;
	TREE_LEVEL = 1;
	PARENT = 234;
}

DISPLAY_LINE
{
	CHANNEL = "cutoff_threshold_1[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 252;
	TREE_LEVEL = 1;
	PARENT = 234;
}

DISPLAY_LINE
{
	CHANNEL = "cutoff_threshold_1[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 253;
	TREE_LEVEL = 1;
	PARENT = 234;
}

DISPLAY_LINE
{
	CHANNEL = "cutoff_threshold_1[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 254;
	TREE_LEVEL = 1;
	PARENT = 234;
}

DISPLAY_LINE
{
	CHANNEL = "cutoff_threshold_1[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 255;
	TREE_LEVEL = 1;
	PARENT = 234;
}

DISPLAY_LINE
{
	CHANNEL = "cutoff_threshold_1[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 256;
	TREE_LEVEL = 1;
	PARENT = 234;
}

DISPLAY_LINE
{
	CHANNEL = "cutoff_threshold_1[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 257;
	TREE_LEVEL = 1;
	PARENT = 234;
}

DISPLAY_LINE
{
	CHANNEL = "cutoff_threshold_1[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 258;
	TREE_LEVEL = 1;
	PARENT = 234;
}

DISPLAY_LINE
{
	CHANNEL = "cutoff_threshold_1[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 259;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "cutoff_threshold_1[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 260;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "cutoff_threshold_1[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 261;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "cutoff_threshold_1[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 262;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "cutoff_threshold_1[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 263;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "cutoff_threshold_1[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 264;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "cutoff_threshold_1[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 265;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "cutoff_threshold_1[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 266;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "cutoff_threshold_1[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 267;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "cutoff_threshold_1[9]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 268;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "cutoff_threshold_1[10]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 269;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "cutoff_threshold_1[11]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 270;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "cutoff_threshold_1[12]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 271;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "cutoff_threshold_1[13]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 272;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "cutoff_threshold_1[14]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 273;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "cutoff_threshold_1[15]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 274;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "cutoff_threshold_1[16]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 275;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "cutoff_threshold_1[17]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 276;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "cutoff_threshold_1[18]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 277;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "cutoff_threshold_1[19]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 278;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "cutoff_threshold_1[20]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 279;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "cutoff_threshold_1[21]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 280;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "cutoff_threshold_1[22]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 281;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "cutoff_threshold_1[23]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 282;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "cutoff_threshold_2";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 283;
	TREE_LEVEL = 0;
	CHILDREN = 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307;
}

DISPLAY_LINE
{
	CHANNEL = "cutoff_threshold_2[23]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 284;
	TREE_LEVEL = 1;
	PARENT = 283;
}

DISPLAY_LINE
{
	CHANNEL = "cutoff_threshold_2[22]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 285;
	TREE_LEVEL = 1;
	PARENT = 283;
}

DISPLAY_LINE
{
	CHANNEL = "cutoff_threshold_2[21]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 286;
	TREE_LEVEL = 1;
	PARENT = 283;
}

DISPLAY_LINE
{
	CHANNEL = "cutoff_threshold_2[20]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 287;
	TREE_LEVEL = 1;
	PARENT = 283;
}

DISPLAY_LINE
{
	CHANNEL = "cutoff_threshold_2[19]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 288;
	TREE_LEVEL = 1;
	PARENT = 283;
}

DISPLAY_LINE
{
	CHANNEL = "cutoff_threshold_2[18]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 289;
	TREE_LEVEL = 1;
	PARENT = 283;
}

DISPLAY_LINE
{
	CHANNEL = "cutoff_threshold_2[17]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 290;
	TREE_LEVEL = 1;
	PARENT = 283;
}

DISPLAY_LINE
{
	CHANNEL = "cutoff_threshold_2[16]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 291;
	TREE_LEVEL = 1;
	PARENT = 283;
}

DISPLAY_LINE
{
	CHANNEL = "cutoff_threshold_2[15]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 292;
	TREE_LEVEL = 1;
	PARENT = 283;
}

DISPLAY_LINE
{
	CHANNEL = "cutoff_threshold_2[14]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 293;
	TREE_LEVEL = 1;
	PARENT = 283;
}

DISPLAY_LINE
{
	CHANNEL = "cutoff_threshold_2[13]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 294;
	TREE_LEVEL = 1;
	PARENT = 283;
}

DISPLAY_LINE
{
	CHANNEL = "cutoff_threshold_2[12]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 295;
	TREE_LEVEL = 1;
	PARENT = 283;
}

DISPLAY_LINE
{
	CHANNEL = "cutoff_threshold_2[11]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 296;
	TREE_LEVEL = 1;
	PARENT = 283;
}

DISPLAY_LINE
{
	CHANNEL = "cutoff_threshold_2[10]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 297;
	TREE_LEVEL = 1;
	PARENT = 283;
}

DISPLAY_LINE
{
	CHANNEL = "cutoff_threshold_2[9]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 298;
	TREE_LEVEL = 1;
	PARENT = 283;
}

DISPLAY_LINE
{
	CHANNEL = "cutoff_threshold_2[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 299;
	TREE_LEVEL = 1;
	PARENT = 283;
}

DISPLAY_LINE
{
	CHANNEL = "cutoff_threshold_2[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 300;
	TREE_LEVEL = 1;
	PARENT = 283;
}

DISPLAY_LINE
{
	CHANNEL = "cutoff_threshold_2[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 301;
	TREE_LEVEL = 1;
	PARENT = 283;
}

DISPLAY_LINE
{
	CHANNEL = "cutoff_threshold_2[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 302;
	TREE_LEVEL = 1;
	PARENT = 283;
}

DISPLAY_LINE
{
	CHANNEL = "cutoff_threshold_2[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 303;
	TREE_LEVEL = 1;
	PARENT = 283;
}

DISPLAY_LINE
{
	CHANNEL = "cutoff_threshold_2[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 304;
	TREE_LEVEL = 1;
	PARENT = 283;
}

DISPLAY_LINE
{
	CHANNEL = "cutoff_threshold_2[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 305;
	TREE_LEVEL = 1;
	PARENT = 283;
}

DISPLAY_LINE
{
	CHANNEL = "cutoff_threshold_2[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 306;
	TREE_LEVEL = 1;
	PARENT = 283;
}

DISPLAY_LINE
{
	CHANNEL = "cutoff_threshold_2[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 307;
	TREE_LEVEL = 1;
	PARENT = 283;
}

DISPLAY_LINE
{
	CHANNEL = "cutoff_threshold_2[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 308;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "cutoff_threshold_2[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 309;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "cutoff_threshold_2[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 310;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "cutoff_threshold_2[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 311;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "cutoff_threshold_2[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 312;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "cutoff_threshold_2[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 313;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "cutoff_threshold_2[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 314;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "cutoff_threshold_2[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 315;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "cutoff_threshold_2[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 316;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "cutoff_threshold_2[9]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 317;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "cutoff_threshold_2[10]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 318;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "cutoff_threshold_2[11]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 319;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "cutoff_threshold_2[12]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 320;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "cutoff_threshold_2[13]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 321;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "cutoff_threshold_2[14]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 322;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "cutoff_threshold_2[15]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 323;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "cutoff_threshold_2[16]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 324;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "cutoff_threshold_2[17]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 325;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "cutoff_threshold_2[18]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 326;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "cutoff_threshold_2[19]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 327;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "cutoff_threshold_2[20]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 328;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "cutoff_threshold_2[21]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 329;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "cutoff_threshold_2[22]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 330;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "cutoff_threshold_2[23]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 331;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "cutoff_threshold_ready";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 332;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "cw_data";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 333;
	TREE_LEVEL = 0;
	CHILDREN = 334, 335, 336, 337, 338, 339, 340, 341;
}

DISPLAY_LINE
{
	CHANNEL = "cw_data[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 334;
	TREE_LEVEL = 1;
	PARENT = 333;
}

DISPLAY_LINE
{
	CHANNEL = "cw_data[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 335;
	TREE_LEVEL = 1;
	PARENT = 333;
}

DISPLAY_LINE
{
	CHANNEL = "cw_data[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 336;
	TREE_LEVEL = 1;
	PARENT = 333;
}

DISPLAY_LINE
{
	CHANNEL = "cw_data[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 337;
	TREE_LEVEL = 1;
	PARENT = 333;
}

DISPLAY_LINE
{
	CHANNEL = "cw_data[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 338;
	TREE_LEVEL = 1;
	PARENT = 333;
}

DISPLAY_LINE
{
	CHANNEL = "cw_data[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 339;
	TREE_LEVEL = 1;
	PARENT = 333;
}

DISPLAY_LINE
{
	CHANNEL = "cw_data[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 340;
	TREE_LEVEL = 1;
	PARENT = 333;
}

DISPLAY_LINE
{
	CHANNEL = "cw_data[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 341;
	TREE_LEVEL = 1;
	PARENT = 333;
}

DISPLAY_LINE
{
	CHANNEL = "cw_data[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 342;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "cw_data[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 343;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "cw_data[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 344;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "cw_data[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 345;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "cw_data[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 346;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "cw_data[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 347;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "cw_data[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 348;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "cw_data[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 349;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "cycle";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 350;
	TREE_LEVEL = 0;
	CHILDREN = 351, 352, 353, 354, 355, 356, 357, 358, 359;
}

DISPLAY_LINE
{
	CHANNEL = "cycle[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 351;
	TREE_LEVEL = 1;
	PARENT = 350;
}

DISPLAY_LINE
{
	CHANNEL = "cycle[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 352;
	TREE_LEVEL = 1;
	PARENT = 350;
}

DISPLAY_LINE
{
	CHANNEL = "cycle[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 353;
	TREE_LEVEL = 1;
	PARENT = 350;
}

DISPLAY_LINE
{
	CHANNEL = "cycle[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 354;
	TREE_LEVEL = 1;
	PARENT = 350;
}

DISPLAY_LINE
{
	CHANNEL = "cycle[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 355;
	TREE_LEVEL = 1;
	PARENT = 350;
}

DISPLAY_LINE
{
	CHANNEL = "cycle[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 356;
	TREE_LEVEL = 1;
	PARENT = 350;
}

DISPLAY_LINE
{
	CHANNEL = "cycle[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 357;
	TREE_LEVEL = 1;
	PARENT = 350;
}

DISPLAY_LINE
{
	CHANNEL = "cycle[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 358;
	TREE_LEVEL = 1;
	PARENT = 350;
}

DISPLAY_LINE
{
	CHANNEL = "cycle[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 359;
	TREE_LEVEL = 1;
	PARENT = 350;
}

DISPLAY_LINE
{
	CHANNEL = "cycle[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 360;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "cycle[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 361;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "cycle[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 362;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "cycle[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 363;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "cycle[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 364;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "cycle[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 365;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "cycle[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 366;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "cycle[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 367;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "cycle[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 368;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "decode_strobe";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 369;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "decoder_rd_addr";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 370;
	TREE_LEVEL = 0;
	CHILDREN = 371, 372, 373, 374, 375, 376, 377, 378;
}

DISPLAY_LINE
{
	CHANNEL = "decoder_rd_addr[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 371;
	TREE_LEVEL = 1;
	PARENT = 370;
}

DISPLAY_LINE
{
	CHANNEL = "decoder_rd_addr[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 372;
	TREE_LEVEL = 1;
	PARENT = 370;
}

DISPLAY_LINE
{
	CHANNEL = "decoder_rd_addr[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 373;
	TREE_LEVEL = 1;
	PARENT = 370;
}

DISPLAY_LINE
{
	CHANNEL = "decoder_rd_addr[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 374;
	TREE_LEVEL = 1;
	PARENT = 370;
}

DISPLAY_LINE
{
	CHANNEL = "decoder_rd_addr[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 375;
	TREE_LEVEL = 1;
	PARENT = 370;
}

DISPLAY_LINE
{
	CHANNEL = "decoder_rd_addr[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 376;
	TREE_LEVEL = 1;
	PARENT = 370;
}

DISPLAY_LINE
{
	CHANNEL = "decoder_rd_addr[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 377;
	TREE_LEVEL = 1;
	PARENT = 370;
}

DISPLAY_LINE
{
	CHANNEL = "decoder_rd_addr[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 378;
	TREE_LEVEL = 1;
	PARENT = 370;
}

DISPLAY_LINE
{
	CHANNEL = "decoder_rd_addr[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 379;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "decoder_rd_addr[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 380;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "decoder_rd_addr[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 381;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "decoder_rd_addr[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 382;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "decoder_rd_addr[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 383;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "decoder_rd_addr[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 384;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "decoder_rd_addr[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 385;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "decoder_rd_addr[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 386;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "derivative_error_location";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 387;
	TREE_LEVEL = 0;
	CHILDREN = 388, 389, 390, 391, 392, 393, 394, 395;
}

DISPLAY_LINE
{
	CHANNEL = "derivative_error_location[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 388;
	TREE_LEVEL = 1;
	PARENT = 387;
}

DISPLAY_LINE
{
	CHANNEL = "derivative_error_location[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 389;
	TREE_LEVEL = 1;
	PARENT = 387;
}

DISPLAY_LINE
{
	CHANNEL = "derivative_error_location[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 390;
	TREE_LEVEL = 1;
	PARENT = 387;
}

DISPLAY_LINE
{
	CHANNEL = "derivative_error_location[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 391;
	TREE_LEVEL = 1;
	PARENT = 387;
}

DISPLAY_LINE
{
	CHANNEL = "derivative_error_location[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 392;
	TREE_LEVEL = 1;
	PARENT = 387;
}

DISPLAY_LINE
{
	CHANNEL = "derivative_error_location[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 393;
	TREE_LEVEL = 1;
	PARENT = 387;
}

DISPLAY_LINE
{
	CHANNEL = "derivative_error_location[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 394;
	TREE_LEVEL = 1;
	PARENT = 387;
}

DISPLAY_LINE
{
	CHANNEL = "derivative_error_location[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 395;
	TREE_LEVEL = 1;
	PARENT = 387;
}

DISPLAY_LINE
{
	CHANNEL = "derivative_error_location[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 396;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "derivative_error_location[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 397;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "derivative_error_location[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 398;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "derivative_error_location[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 399;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "derivative_error_location[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 400;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "derivative_error_location[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 401;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "derivative_error_location[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 402;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "derivative_error_location[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 403;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "erase_position_0";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 404;
	TREE_LEVEL = 0;
	CHILDREN = 405, 406, 407, 408, 409, 410, 411, 412;
}

DISPLAY_LINE
{
	CHANNEL = "erase_position_0[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 405;
	TREE_LEVEL = 1;
	PARENT = 404;
}

DISPLAY_LINE
{
	CHANNEL = "erase_position_0[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 406;
	TREE_LEVEL = 1;
	PARENT = 404;
}

DISPLAY_LINE
{
	CHANNEL = "erase_position_0[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 407;
	TREE_LEVEL = 1;
	PARENT = 404;
}

DISPLAY_LINE
{
	CHANNEL = "erase_position_0[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 408;
	TREE_LEVEL = 1;
	PARENT = 404;
}

DISPLAY_LINE
{
	CHANNEL = "erase_position_0[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 409;
	TREE_LEVEL = 1;
	PARENT = 404;
}

DISPLAY_LINE
{
	CHANNEL = "erase_position_0[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 410;
	TREE_LEVEL = 1;
	PARENT = 404;
}

DISPLAY_LINE
{
	CHANNEL = "erase_position_0[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 411;
	TREE_LEVEL = 1;
	PARENT = 404;
}

DISPLAY_LINE
{
	CHANNEL = "erase_position_0[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 412;
	TREE_LEVEL = 1;
	PARENT = 404;
}

DISPLAY_LINE
{
	CHANNEL = "erase_position_0[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 413;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "erase_position_0[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 414;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "erase_position_0[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 415;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "erase_position_0[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 416;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "erase_position_0[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 417;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "erase_position_0[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 418;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "erase_position_0[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 419;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "erase_position_0[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 420;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "erase_position_1";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 421;
	TREE_LEVEL = 0;
	CHILDREN = 422, 423, 424, 425, 426, 427, 428, 429;
}

DISPLAY_LINE
{
	CHANNEL = "erase_position_1[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 422;
	TREE_LEVEL = 1;
	PARENT = 421;
}

DISPLAY_LINE
{
	CHANNEL = "erase_position_1[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 423;
	TREE_LEVEL = 1;
	PARENT = 421;
}

DISPLAY_LINE
{
	CHANNEL = "erase_position_1[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 424;
	TREE_LEVEL = 1;
	PARENT = 421;
}

DISPLAY_LINE
{
	CHANNEL = "erase_position_1[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 425;
	TREE_LEVEL = 1;
	PARENT = 421;
}

DISPLAY_LINE
{
	CHANNEL = "erase_position_1[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 426;
	TREE_LEVEL = 1;
	PARENT = 421;
}

DISPLAY_LINE
{
	CHANNEL = "erase_position_1[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 427;
	TREE_LEVEL = 1;
	PARENT = 421;
}

DISPLAY_LINE
{
	CHANNEL = "erase_position_1[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 428;
	TREE_LEVEL = 1;
	PARENT = 421;
}

DISPLAY_LINE
{
	CHANNEL = "erase_position_1[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 429;
	TREE_LEVEL = 1;
	PARENT = 421;
}

DISPLAY_LINE
{
	CHANNEL = "erase_position_1[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 430;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "erase_position_1[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 431;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "erase_position_1[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 432;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "erase_position_1[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 433;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "erase_position_1[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 434;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "erase_position_1[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 435;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "erase_position_1[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 436;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "erase_position_1[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 437;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "erase_position_2";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 438;
	TREE_LEVEL = 0;
	CHILDREN = 439, 440, 441, 442, 443, 444, 445, 446;
}

DISPLAY_LINE
{
	CHANNEL = "erase_position_2[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 439;
	TREE_LEVEL = 1;
	PARENT = 438;
}

DISPLAY_LINE
{
	CHANNEL = "erase_position_2[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 440;
	TREE_LEVEL = 1;
	PARENT = 438;
}

DISPLAY_LINE
{
	CHANNEL = "erase_position_2[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 441;
	TREE_LEVEL = 1;
	PARENT = 438;
}

DISPLAY_LINE
{
	CHANNEL = "erase_position_2[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 442;
	TREE_LEVEL = 1;
	PARENT = 438;
}

DISPLAY_LINE
{
	CHANNEL = "erase_position_2[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 443;
	TREE_LEVEL = 1;
	PARENT = 438;
}

DISPLAY_LINE
{
	CHANNEL = "erase_position_2[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 444;
	TREE_LEVEL = 1;
	PARENT = 438;
}

DISPLAY_LINE
{
	CHANNEL = "erase_position_2[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 445;
	TREE_LEVEL = 1;
	PARENT = 438;
}

DISPLAY_LINE
{
	CHANNEL = "erase_position_2[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 446;
	TREE_LEVEL = 1;
	PARENT = 438;
}

DISPLAY_LINE
{
	CHANNEL = "erase_position_2[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 447;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "erase_position_2[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 448;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "erase_position_2[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 449;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "erase_position_2[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 450;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "erase_position_2[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 451;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "erase_position_2[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 452;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "erase_position_2[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 453;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "erase_position_2[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 454;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "erasure";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 455;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "erasure_coef_ready_0";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 456;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "erasure_coef_ready_1";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 457;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "erasure_coef_ready_2";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 458;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "erasure_flag_0";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 459;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "erasure_flag_1";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 460;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "erasure_flag_2";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 461;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "erasure_polyn_0";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 462;
	TREE_LEVEL = 0;
	CHILDREN = 463, 464, 465, 466, 467, 468, 469, 470;
}

DISPLAY_LINE
{
	CHANNEL = "erasure_polyn_0[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 463;
	TREE_LEVEL = 1;
	PARENT = 462;
}

DISPLAY_LINE
{
	CHANNEL = "erasure_polyn_0[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 464;
	TREE_LEVEL = 1;
	PARENT = 462;
}

DISPLAY_LINE
{
	CHANNEL = "erasure_polyn_0[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 465;
	TREE_LEVEL = 1;
	PARENT = 462;
}

DISPLAY_LINE
{
	CHANNEL = "erasure_polyn_0[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 466;
	TREE_LEVEL = 1;
	PARENT = 462;
}

DISPLAY_LINE
{
	CHANNEL = "erasure_polyn_0[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 467;
	TREE_LEVEL = 1;
	PARENT = 462;
}

DISPLAY_LINE
{
	CHANNEL = "erasure_polyn_0[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 468;
	TREE_LEVEL = 1;
	PARENT = 462;
}

DISPLAY_LINE
{
	CHANNEL = "erasure_polyn_0[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 469;
	TREE_LEVEL = 1;
	PARENT = 462;
}

DISPLAY_LINE
{
	CHANNEL = "erasure_polyn_0[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 470;
	TREE_LEVEL = 1;
	PARENT = 462;
}

DISPLAY_LINE
{
	CHANNEL = "erasure_polyn_0[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 471;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "erasure_polyn_0[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 472;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "erasure_polyn_0[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 473;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "erasure_polyn_0[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 474;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "erasure_polyn_0[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 475;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "erasure_polyn_0[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 476;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "erasure_polyn_0[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 477;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "erasure_polyn_0[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 478;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "erasure_polyn_1";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 479;
	TREE_LEVEL = 0;
	CHILDREN = 480, 481, 482, 483, 484, 485, 486, 487;
}

DISPLAY_LINE
{
	CHANNEL = "erasure_polyn_1[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 480;
	TREE_LEVEL = 1;
	PARENT = 479;
}

DISPLAY_LINE
{
	CHANNEL = "erasure_polyn_1[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 481;
	TREE_LEVEL = 1;
	PARENT = 479;
}

DISPLAY_LINE
{
	CHANNEL = "erasure_polyn_1[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 482;
	TREE_LEVEL = 1;
	PARENT = 479;
}

DISPLAY_LINE
{
	CHANNEL = "erasure_polyn_1[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 483;
	TREE_LEVEL = 1;
	PARENT = 479;
}

DISPLAY_LINE
{
	CHANNEL = "erasure_polyn_1[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 484;
	TREE_LEVEL = 1;
	PARENT = 479;
}

DISPLAY_LINE
{
	CHANNEL = "erasure_polyn_1[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 485;
	TREE_LEVEL = 1;
	PARENT = 479;
}

DISPLAY_LINE
{
	CHANNEL = "erasure_polyn_1[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 486;
	TREE_LEVEL = 1;
	PARENT = 479;
}

DISPLAY_LINE
{
	CHANNEL = "erasure_polyn_1[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 487;
	TREE_LEVEL = 1;
	PARENT = 479;
}

DISPLAY_LINE
{
	CHANNEL = "erasure_polyn_1[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 488;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "erasure_polyn_1[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 489;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "erasure_polyn_1[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 490;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "erasure_polyn_1[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 491;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "erasure_polyn_1[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 492;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "erasure_polyn_1[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 493;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "erasure_polyn_1[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 494;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "erasure_polyn_1[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 495;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "erasure_polyn_2";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 496;
	TREE_LEVEL = 0;
	CHILDREN = 497, 498, 499, 500, 501, 502, 503, 504;
}

DISPLAY_LINE
{
	CHANNEL = "erasure_polyn_2[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 497;
	TREE_LEVEL = 1;
	PARENT = 496;
}

DISPLAY_LINE
{
	CHANNEL = "erasure_polyn_2[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 498;
	TREE_LEVEL = 1;
	PARENT = 496;
}

DISPLAY_LINE
{
	CHANNEL = "erasure_polyn_2[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 499;
	TREE_LEVEL = 1;
	PARENT = 496;
}

DISPLAY_LINE
{
	CHANNEL = "erasure_polyn_2[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 500;
	TREE_LEVEL = 1;
	PARENT = 496;
}

DISPLAY_LINE
{
	CHANNEL = "erasure_polyn_2[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 501;
	TREE_LEVEL = 1;
	PARENT = 496;
}

DISPLAY_LINE
{
	CHANNEL = "erasure_polyn_2[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 502;
	TREE_LEVEL = 1;
	PARENT = 496;
}

DISPLAY_LINE
{
	CHANNEL = "erasure_polyn_2[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 503;
	TREE_LEVEL = 1;
	PARENT = 496;
}

DISPLAY_LINE
{
	CHANNEL = "erasure_polyn_2[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 504;
	TREE_LEVEL = 1;
	PARENT = 496;
}

DISPLAY_LINE
{
	CHANNEL = "erasure_polyn_2[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 505;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "erasure_polyn_2[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 506;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "erasure_polyn_2[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 507;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "erasure_polyn_2[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 508;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "erasure_polyn_2[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 509;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "erasure_polyn_2[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 510;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "erasure_polyn_2[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 511;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "erasure_polyn_2[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 512;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "erasures_absent_0";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 513;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "erasures_absent_1";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 514;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "erasures_absent_2";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 515;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "errata_loc_coefs_0";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 516;
	TREE_LEVEL = 0;
	CHILDREN = 517, 518, 519, 520, 521, 522, 523, 524;
}

DISPLAY_LINE
{
	CHANNEL = "errata_loc_coefs_0[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 517;
	TREE_LEVEL = 1;
	PARENT = 516;
}

DISPLAY_LINE
{
	CHANNEL = "errata_loc_coefs_0[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 518;
	TREE_LEVEL = 1;
	PARENT = 516;
}

DISPLAY_LINE
{
	CHANNEL = "errata_loc_coefs_0[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 519;
	TREE_LEVEL = 1;
	PARENT = 516;
}

DISPLAY_LINE
{
	CHANNEL = "errata_loc_coefs_0[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 520;
	TREE_LEVEL = 1;
	PARENT = 516;
}

DISPLAY_LINE
{
	CHANNEL = "errata_loc_coefs_0[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 521;
	TREE_LEVEL = 1;
	PARENT = 516;
}

DISPLAY_LINE
{
	CHANNEL = "errata_loc_coefs_0[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 522;
	TREE_LEVEL = 1;
	PARENT = 516;
}

DISPLAY_LINE
{
	CHANNEL = "errata_loc_coefs_0[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 523;
	TREE_LEVEL = 1;
	PARENT = 516;
}

DISPLAY_LINE
{
	CHANNEL = "errata_loc_coefs_0[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 524;
	TREE_LEVEL = 1;
	PARENT = 516;
}

DISPLAY_LINE
{
	CHANNEL = "errata_loc_coefs_0[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 525;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "errata_loc_coefs_0[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 526;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "errata_loc_coefs_0[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 527;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "errata_loc_coefs_0[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 528;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "errata_loc_coefs_0[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 529;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "errata_loc_coefs_0[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 530;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "errata_loc_coefs_0[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 531;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "errata_loc_coefs_0[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 532;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "errata_loc_coefs_1";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 533;
	TREE_LEVEL = 0;
	CHILDREN = 534, 535, 536, 537, 538, 539, 540, 541;
}

DISPLAY_LINE
{
	CHANNEL = "errata_loc_coefs_1[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 534;
	TREE_LEVEL = 1;
	PARENT = 533;
}

DISPLAY_LINE
{
	CHANNEL = "errata_loc_coefs_1[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 535;
	TREE_LEVEL = 1;
	PARENT = 533;
}

DISPLAY_LINE
{
	CHANNEL = "errata_loc_coefs_1[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 536;
	TREE_LEVEL = 1;
	PARENT = 533;
}

DISPLAY_LINE
{
	CHANNEL = "errata_loc_coefs_1[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 537;
	TREE_LEVEL = 1;
	PARENT = 533;
}

DISPLAY_LINE
{
	CHANNEL = "errata_loc_coefs_1[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 538;
	TREE_LEVEL = 1;
	PARENT = 533;
}

DISPLAY_LINE
{
	CHANNEL = "errata_loc_coefs_1[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 539;
	TREE_LEVEL = 1;
	PARENT = 533;
}

DISPLAY_LINE
{
	CHANNEL = "errata_loc_coefs_1[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 540;
	TREE_LEVEL = 1;
	PARENT = 533;
}

DISPLAY_LINE
{
	CHANNEL = "errata_loc_coefs_1[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 541;
	TREE_LEVEL = 1;
	PARENT = 533;
}

DISPLAY_LINE
{
	CHANNEL = "errata_loc_coefs_1[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 542;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "errata_loc_coefs_1[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 543;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "errata_loc_coefs_1[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 544;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "errata_loc_coefs_1[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 545;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "errata_loc_coefs_1[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 546;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "errata_loc_coefs_1[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 547;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "errata_loc_coefs_1[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 548;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "errata_loc_coefs_1[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 549;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "errata_loc_coefs_2";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 550;
	TREE_LEVEL = 0;
	CHILDREN = 551, 552, 553, 554, 555, 556, 557, 558;
}

DISPLAY_LINE
{
	CHANNEL = "errata_loc_coefs_2[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 551;
	TREE_LEVEL = 1;
	PARENT = 550;
}

DISPLAY_LINE
{
	CHANNEL = "errata_loc_coefs_2[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 552;
	TREE_LEVEL = 1;
	PARENT = 550;
}

DISPLAY_LINE
{
	CHANNEL = "errata_loc_coefs_2[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 553;
	TREE_LEVEL = 1;
	PARENT = 550;
}

DISPLAY_LINE
{
	CHANNEL = "errata_loc_coefs_2[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 554;
	TREE_LEVEL = 1;
	PARENT = 550;
}

DISPLAY_LINE
{
	CHANNEL = "errata_loc_coefs_2[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 555;
	TREE_LEVEL = 1;
	PARENT = 550;
}

DISPLAY_LINE
{
	CHANNEL = "errata_loc_coefs_2[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 556;
	TREE_LEVEL = 1;
	PARENT = 550;
}

DISPLAY_LINE
{
	CHANNEL = "errata_loc_coefs_2[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 557;
	TREE_LEVEL = 1;
	PARENT = 550;
}

DISPLAY_LINE
{
	CHANNEL = "errata_loc_coefs_2[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 558;
	TREE_LEVEL = 1;
	PARENT = 550;
}

DISPLAY_LINE
{
	CHANNEL = "errata_loc_coefs_2[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 559;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "errata_loc_coefs_2[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 560;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "errata_loc_coefs_2[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 561;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "errata_loc_coefs_2[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 562;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "errata_loc_coefs_2[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 563;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "errata_loc_coefs_2[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 564;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "errata_loc_coefs_2[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 565;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "errata_loc_coefs_2[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 566;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "errata_magnitude_coefs_0";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 567;
	TREE_LEVEL = 0;
	CHILDREN = 568, 569, 570, 571, 572, 573, 574, 575;
}

DISPLAY_LINE
{
	CHANNEL = "errata_magnitude_coefs_0[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 568;
	TREE_LEVEL = 1;
	PARENT = 567;
}

DISPLAY_LINE
{
	CHANNEL = "errata_magnitude_coefs_0[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 569;
	TREE_LEVEL = 1;
	PARENT = 567;
}

DISPLAY_LINE
{
	CHANNEL = "errata_magnitude_coefs_0[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 570;
	TREE_LEVEL = 1;
	PARENT = 567;
}

DISPLAY_LINE
{
	CHANNEL = "errata_magnitude_coefs_0[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 571;
	TREE_LEVEL = 1;
	PARENT = 567;
}

DISPLAY_LINE
{
	CHANNEL = "errata_magnitude_coefs_0[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 572;
	TREE_LEVEL = 1;
	PARENT = 567;
}

DISPLAY_LINE
{
	CHANNEL = "errata_magnitude_coefs_0[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 573;
	TREE_LEVEL = 1;
	PARENT = 567;
}

DISPLAY_LINE
{
	CHANNEL = "errata_magnitude_coefs_0[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 574;
	TREE_LEVEL = 1;
	PARENT = 567;
}

DISPLAY_LINE
{
	CHANNEL = "errata_magnitude_coefs_0[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 575;
	TREE_LEVEL = 1;
	PARENT = 567;
}

DISPLAY_LINE
{
	CHANNEL = "errata_magnitude_coefs_0[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 576;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "errata_magnitude_coefs_0[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 577;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "errata_magnitude_coefs_0[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 578;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "errata_magnitude_coefs_0[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 579;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "errata_magnitude_coefs_0[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 580;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "errata_magnitude_coefs_0[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 581;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "errata_magnitude_coefs_0[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 582;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "errata_magnitude_coefs_0[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 583;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "errata_magnitude_coefs_1";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 584;
	TREE_LEVEL = 0;
	CHILDREN = 585, 586, 587, 588, 589, 590, 591, 592;
}

DISPLAY_LINE
{
	CHANNEL = "errata_magnitude_coefs_1[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 585;
	TREE_LEVEL = 1;
	PARENT = 584;
}

DISPLAY_LINE
{
	CHANNEL = "errata_magnitude_coefs_1[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 586;
	TREE_LEVEL = 1;
	PARENT = 584;
}

DISPLAY_LINE
{
	CHANNEL = "errata_magnitude_coefs_1[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 587;
	TREE_LEVEL = 1;
	PARENT = 584;
}

DISPLAY_LINE
{
	CHANNEL = "errata_magnitude_coefs_1[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 588;
	TREE_LEVEL = 1;
	PARENT = 584;
}

DISPLAY_LINE
{
	CHANNEL = "errata_magnitude_coefs_1[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 589;
	TREE_LEVEL = 1;
	PARENT = 584;
}

DISPLAY_LINE
{
	CHANNEL = "errata_magnitude_coefs_1[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 590;
	TREE_LEVEL = 1;
	PARENT = 584;
}

DISPLAY_LINE
{
	CHANNEL = "errata_magnitude_coefs_1[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 591;
	TREE_LEVEL = 1;
	PARENT = 584;
}

DISPLAY_LINE
{
	CHANNEL = "errata_magnitude_coefs_1[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 592;
	TREE_LEVEL = 1;
	PARENT = 584;
}

DISPLAY_LINE
{
	CHANNEL = "errata_magnitude_coefs_1[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 593;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "errata_magnitude_coefs_1[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 594;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "errata_magnitude_coefs_1[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 595;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "errata_magnitude_coefs_1[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 596;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "errata_magnitude_coefs_1[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 597;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "errata_magnitude_coefs_1[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 598;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "errata_magnitude_coefs_1[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 599;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "errata_magnitude_coefs_1[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 600;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "errata_magnitude_coefs_2";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 601;
	TREE_LEVEL = 0;
	CHILDREN = 602, 603, 604, 605, 606, 607, 608, 609;
}

DISPLAY_LINE
{
	CHANNEL = "errata_magnitude_coefs_2[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 602;
	TREE_LEVEL = 1;
	PARENT = 601;
}

DISPLAY_LINE
{
	CHANNEL = "errata_magnitude_coefs_2[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 603;
	TREE_LEVEL = 1;
	PARENT = 601;
}

DISPLAY_LINE
{
	CHANNEL = "errata_magnitude_coefs_2[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 604;
	TREE_LEVEL = 1;
	PARENT = 601;
}

DISPLAY_LINE
{
	CHANNEL = "errata_magnitude_coefs_2[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 605;
	TREE_LEVEL = 1;
	PARENT = 601;
}

DISPLAY_LINE
{
	CHANNEL = "errata_magnitude_coefs_2[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 606;
	TREE_LEVEL = 1;
	PARENT = 601;
}

DISPLAY_LINE
{
	CHANNEL = "errata_magnitude_coefs_2[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 607;
	TREE_LEVEL = 1;
	PARENT = 601;
}

DISPLAY_LINE
{
	CHANNEL = "errata_magnitude_coefs_2[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 608;
	TREE_LEVEL = 1;
	PARENT = 601;
}

DISPLAY_LINE
{
	CHANNEL = "errata_magnitude_coefs_2[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 609;
	TREE_LEVEL = 1;
	PARENT = 601;
}

DISPLAY_LINE
{
	CHANNEL = "errata_magnitude_coefs_2[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 610;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "errata_magnitude_coefs_2[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 611;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "errata_magnitude_coefs_2[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 612;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "errata_magnitude_coefs_2[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 613;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "errata_magnitude_coefs_2[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 614;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "errata_magnitude_coefs_2[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 615;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "errata_magnitude_coefs_2[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 616;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "errata_magnitude_coefs_2[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 617;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "error_location_0";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 618;
	TREE_LEVEL = 0;
	CHILDREN = 619, 620, 621, 622, 623, 624, 625, 626;
}

DISPLAY_LINE
{
	CHANNEL = "error_location_0[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 619;
	TREE_LEVEL = 1;
	PARENT = 618;
}

DISPLAY_LINE
{
	CHANNEL = "error_location_0[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 620;
	TREE_LEVEL = 1;
	PARENT = 618;
}

DISPLAY_LINE
{
	CHANNEL = "error_location_0[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 621;
	TREE_LEVEL = 1;
	PARENT = 618;
}

DISPLAY_LINE
{
	CHANNEL = "error_location_0[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 622;
	TREE_LEVEL = 1;
	PARENT = 618;
}

DISPLAY_LINE
{
	CHANNEL = "error_location_0[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 623;
	TREE_LEVEL = 1;
	PARENT = 618;
}

DISPLAY_LINE
{
	CHANNEL = "error_location_0[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 624;
	TREE_LEVEL = 1;
	PARENT = 618;
}

DISPLAY_LINE
{
	CHANNEL = "error_location_0[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 625;
	TREE_LEVEL = 1;
	PARENT = 618;
}

DISPLAY_LINE
{
	CHANNEL = "error_location_0[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 626;
	TREE_LEVEL = 1;
	PARENT = 618;
}

DISPLAY_LINE
{
	CHANNEL = "error_location_0[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 627;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "error_location_0[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 628;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "error_location_0[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 629;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "error_location_0[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 630;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "error_location_0[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 631;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "error_location_0[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 632;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "error_location_0[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 633;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "error_location_0[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 634;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "error_location_1";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 635;
	TREE_LEVEL = 0;
	CHILDREN = 636, 637, 638, 639, 640, 641, 642, 643;
}

DISPLAY_LINE
{
	CHANNEL = "error_location_1[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 636;
	TREE_LEVEL = 1;
	PARENT = 635;
}

DISPLAY_LINE
{
	CHANNEL = "error_location_1[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 637;
	TREE_LEVEL = 1;
	PARENT = 635;
}

DISPLAY_LINE
{
	CHANNEL = "error_location_1[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 638;
	TREE_LEVEL = 1;
	PARENT = 635;
}

DISPLAY_LINE
{
	CHANNEL = "error_location_1[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 639;
	TREE_LEVEL = 1;
	PARENT = 635;
}

DISPLAY_LINE
{
	CHANNEL = "error_location_1[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 640;
	TREE_LEVEL = 1;
	PARENT = 635;
}

DISPLAY_LINE
{
	CHANNEL = "error_location_1[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 641;
	TREE_LEVEL = 1;
	PARENT = 635;
}

DISPLAY_LINE
{
	CHANNEL = "error_location_1[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 642;
	TREE_LEVEL = 1;
	PARENT = 635;
}

DISPLAY_LINE
{
	CHANNEL = "error_location_1[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 643;
	TREE_LEVEL = 1;
	PARENT = 635;
}

DISPLAY_LINE
{
	CHANNEL = "error_location_1[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 644;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "error_location_1[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 645;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "error_location_1[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 646;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "error_location_1[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 647;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "error_location_1[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 648;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "error_location_1[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 649;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "error_location_1[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 650;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "error_location_1[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 651;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "error_location_2";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 652;
	TREE_LEVEL = 0;
	CHILDREN = 653, 654, 655, 656, 657, 658, 659, 660;
}

DISPLAY_LINE
{
	CHANNEL = "error_location_2[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 653;
	TREE_LEVEL = 1;
	PARENT = 652;
}

DISPLAY_LINE
{
	CHANNEL = "error_location_2[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 654;
	TREE_LEVEL = 1;
	PARENT = 652;
}

DISPLAY_LINE
{
	CHANNEL = "error_location_2[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 655;
	TREE_LEVEL = 1;
	PARENT = 652;
}

DISPLAY_LINE
{
	CHANNEL = "error_location_2[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 656;
	TREE_LEVEL = 1;
	PARENT = 652;
}

DISPLAY_LINE
{
	CHANNEL = "error_location_2[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 657;
	TREE_LEVEL = 1;
	PARENT = 652;
}

DISPLAY_LINE
{
	CHANNEL = "error_location_2[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 658;
	TREE_LEVEL = 1;
	PARENT = 652;
}

DISPLAY_LINE
{
	CHANNEL = "error_location_2[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 659;
	TREE_LEVEL = 1;
	PARENT = 652;
}

DISPLAY_LINE
{
	CHANNEL = "error_location_2[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 660;
	TREE_LEVEL = 1;
	PARENT = 652;
}

DISPLAY_LINE
{
	CHANNEL = "error_location_2[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 661;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "error_location_2[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 662;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "error_location_2[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 663;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "error_location_2[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 664;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "error_location_2[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 665;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "error_location_2[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 666;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "error_location_2[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 667;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "error_location_2[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 668;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "error_magnitude";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 669;
	TREE_LEVEL = 0;
	CHILDREN = 670, 671, 672, 673, 674, 675, 676, 677;
}

DISPLAY_LINE
{
	CHANNEL = "error_magnitude[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 670;
	TREE_LEVEL = 1;
	PARENT = 669;
}

DISPLAY_LINE
{
	CHANNEL = "error_magnitude[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 671;
	TREE_LEVEL = 1;
	PARENT = 669;
}

DISPLAY_LINE
{
	CHANNEL = "error_magnitude[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 672;
	TREE_LEVEL = 1;
	PARENT = 669;
}

DISPLAY_LINE
{
	CHANNEL = "error_magnitude[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 673;
	TREE_LEVEL = 1;
	PARENT = 669;
}

DISPLAY_LINE
{
	CHANNEL = "error_magnitude[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 674;
	TREE_LEVEL = 1;
	PARENT = 669;
}

DISPLAY_LINE
{
	CHANNEL = "error_magnitude[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 675;
	TREE_LEVEL = 1;
	PARENT = 669;
}

DISPLAY_LINE
{
	CHANNEL = "error_magnitude[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 676;
	TREE_LEVEL = 1;
	PARENT = 669;
}

DISPLAY_LINE
{
	CHANNEL = "error_magnitude[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 677;
	TREE_LEVEL = 1;
	PARENT = 669;
}

DISPLAY_LINE
{
	CHANNEL = "error_magnitude[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 678;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "error_magnitude[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 679;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "error_magnitude[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 680;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "error_magnitude[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 681;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "error_magnitude[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 682;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "error_magnitude[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 683;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "error_magnitude[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 684;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "error_magnitude[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 685;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "exact_smallest";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 686;
	TREE_LEVEL = 0;
	CHILDREN = 687, 688, 689, 690, 691, 692, 693, 694, 695, 696;
}

DISPLAY_LINE
{
	CHANNEL = "exact_smallest[9]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 687;
	TREE_LEVEL = 1;
	PARENT = 686;
}

DISPLAY_LINE
{
	CHANNEL = "exact_smallest[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 688;
	TREE_LEVEL = 1;
	PARENT = 686;
}

DISPLAY_LINE
{
	CHANNEL = "exact_smallest[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 689;
	TREE_LEVEL = 1;
	PARENT = 686;
}

DISPLAY_LINE
{
	CHANNEL = "exact_smallest[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 690;
	TREE_LEVEL = 1;
	PARENT = 686;
}

DISPLAY_LINE
{
	CHANNEL = "exact_smallest[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 691;
	TREE_LEVEL = 1;
	PARENT = 686;
}

DISPLAY_LINE
{
	CHANNEL = "exact_smallest[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 692;
	TREE_LEVEL = 1;
	PARENT = 686;
}

DISPLAY_LINE
{
	CHANNEL = "exact_smallest[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 693;
	TREE_LEVEL = 1;
	PARENT = 686;
}

DISPLAY_LINE
{
	CHANNEL = "exact_smallest[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 694;
	TREE_LEVEL = 1;
	PARENT = 686;
}

DISPLAY_LINE
{
	CHANNEL = "exact_smallest[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 695;
	TREE_LEVEL = 1;
	PARENT = 686;
}

DISPLAY_LINE
{
	CHANNEL = "exact_smallest[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 696;
	TREE_LEVEL = 1;
	PARENT = 686;
}

DISPLAY_LINE
{
	CHANNEL = "exact_smallest[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 697;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "exact_smallest[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 698;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "exact_smallest[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 699;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "exact_smallest[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 700;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "exact_smallest[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 701;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "exact_smallest[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 702;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "exact_smallest[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 703;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "exact_smallest[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 704;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "exact_smallest[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 705;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "exact_smallest[9]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 706;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "fade_value";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 707;
	TREE_LEVEL = 0;
	CHILDREN = 708, 709, 710, 711, 712, 713, 714, 715, 716, 717;
}

DISPLAY_LINE
{
	CHANNEL = "fade_value[9]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 708;
	TREE_LEVEL = 1;
	PARENT = 707;
}

DISPLAY_LINE
{
	CHANNEL = "fade_value[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 709;
	TREE_LEVEL = 1;
	PARENT = 707;
}

DISPLAY_LINE
{
	CHANNEL = "fade_value[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 710;
	TREE_LEVEL = 1;
	PARENT = 707;
}

DISPLAY_LINE
{
	CHANNEL = "fade_value[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 711;
	TREE_LEVEL = 1;
	PARENT = 707;
}

DISPLAY_LINE
{
	CHANNEL = "fade_value[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 712;
	TREE_LEVEL = 1;
	PARENT = 707;
}

DISPLAY_LINE
{
	CHANNEL = "fade_value[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 713;
	TREE_LEVEL = 1;
	PARENT = 707;
}

DISPLAY_LINE
{
	CHANNEL = "fade_value[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 714;
	TREE_LEVEL = 1;
	PARENT = 707;
}

DISPLAY_LINE
{
	CHANNEL = "fade_value[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 715;
	TREE_LEVEL = 1;
	PARENT = 707;
}

DISPLAY_LINE
{
	CHANNEL = "fade_value[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 716;
	TREE_LEVEL = 1;
	PARENT = 707;
}

DISPLAY_LINE
{
	CHANNEL = "fade_value[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 717;
	TREE_LEVEL = 1;
	PARENT = 707;
}

DISPLAY_LINE
{
	CHANNEL = "fade_value[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 718;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "fade_value[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 719;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "fade_value[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 720;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "fade_value[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 721;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "fade_value[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 722;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "fade_value[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 723;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "fade_value[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 724;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "fade_value[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 725;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "fade_value[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 726;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "fade_value[9]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 727;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "load_non_zero_syndrome_done";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 728;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "locator_degree_0";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 729;
	TREE_LEVEL = 0;
	CHILDREN = 730, 731, 732, 733, 734;
}

DISPLAY_LINE
{
	CHANNEL = "locator_degree_0[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 730;
	TREE_LEVEL = 1;
	PARENT = 729;
}

DISPLAY_LINE
{
	CHANNEL = "locator_degree_0[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 731;
	TREE_LEVEL = 1;
	PARENT = 729;
}

DISPLAY_LINE
{
	CHANNEL = "locator_degree_0[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 732;
	TREE_LEVEL = 1;
	PARENT = 729;
}

DISPLAY_LINE
{
	CHANNEL = "locator_degree_0[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 733;
	TREE_LEVEL = 1;
	PARENT = 729;
}

DISPLAY_LINE
{
	CHANNEL = "locator_degree_0[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 734;
	TREE_LEVEL = 1;
	PARENT = 729;
}

DISPLAY_LINE
{
	CHANNEL = "locator_degree_0[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 735;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "locator_degree_0[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 736;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "locator_degree_0[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 737;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "locator_degree_0[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 738;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "locator_degree_0[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 739;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "locator_degree_1";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 740;
	TREE_LEVEL = 0;
	CHILDREN = 741, 742, 743, 744, 745;
}

DISPLAY_LINE
{
	CHANNEL = "locator_degree_1[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 741;
	TREE_LEVEL = 1;
	PARENT = 740;
}

DISPLAY_LINE
{
	CHANNEL = "locator_degree_1[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 742;
	TREE_LEVEL = 1;
	PARENT = 740;
}

DISPLAY_LINE
{
	CHANNEL = "locator_degree_1[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 743;
	TREE_LEVEL = 1;
	PARENT = 740;
}

DISPLAY_LINE
{
	CHANNEL = "locator_degree_1[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 744;
	TREE_LEVEL = 1;
	PARENT = 740;
}

DISPLAY_LINE
{
	CHANNEL = "locator_degree_1[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 745;
	TREE_LEVEL = 1;
	PARENT = 740;
}

DISPLAY_LINE
{
	CHANNEL = "locator_degree_1[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 746;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "locator_degree_1[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 747;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "locator_degree_1[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 748;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "locator_degree_1[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 749;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "locator_degree_1[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 750;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "locator_degree_2";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 751;
	TREE_LEVEL = 0;
	CHILDREN = 752, 753, 754, 755, 756;
}

DISPLAY_LINE
{
	CHANNEL = "locator_degree_2[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 752;
	TREE_LEVEL = 1;
	PARENT = 751;
}

DISPLAY_LINE
{
	CHANNEL = "locator_degree_2[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 753;
	TREE_LEVEL = 1;
	PARENT = 751;
}

DISPLAY_LINE
{
	CHANNEL = "locator_degree_2[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 754;
	TREE_LEVEL = 1;
	PARENT = 751;
}

DISPLAY_LINE
{
	CHANNEL = "locator_degree_2[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 755;
	TREE_LEVEL = 1;
	PARENT = 751;
}

DISPLAY_LINE
{
	CHANNEL = "locator_degree_2[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 756;
	TREE_LEVEL = 1;
	PARENT = 751;
}

DISPLAY_LINE
{
	CHANNEL = "locator_degree_2[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 757;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "locator_degree_2[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 758;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "locator_degree_2[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 759;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "locator_degree_2[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 760;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "locator_degree_2[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 761;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "locator_polyn_0";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 762;
	TREE_LEVEL = 0;
	CHILDREN = 763, 764, 765, 766, 767, 768, 769, 770;
}

DISPLAY_LINE
{
	CHANNEL = "locator_polyn_0[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 763;
	TREE_LEVEL = 1;
	PARENT = 762;
}

DISPLAY_LINE
{
	CHANNEL = "locator_polyn_0[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 764;
	TREE_LEVEL = 1;
	PARENT = 762;
}

DISPLAY_LINE
{
	CHANNEL = "locator_polyn_0[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 765;
	TREE_LEVEL = 1;
	PARENT = 762;
}

DISPLAY_LINE
{
	CHANNEL = "locator_polyn_0[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 766;
	TREE_LEVEL = 1;
	PARENT = 762;
}

DISPLAY_LINE
{
	CHANNEL = "locator_polyn_0[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 767;
	TREE_LEVEL = 1;
	PARENT = 762;
}

DISPLAY_LINE
{
	CHANNEL = "locator_polyn_0[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 768;
	TREE_LEVEL = 1;
	PARENT = 762;
}

DISPLAY_LINE
{
	CHANNEL = "locator_polyn_0[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 769;
	TREE_LEVEL = 1;
	PARENT = 762;
}

DISPLAY_LINE
{
	CHANNEL = "locator_polyn_0[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 770;
	TREE_LEVEL = 1;
	PARENT = 762;
}

DISPLAY_LINE
{
	CHANNEL = "locator_polyn_0[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 771;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "locator_polyn_0[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 772;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "locator_polyn_0[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 773;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "locator_polyn_0[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 774;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "locator_polyn_0[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 775;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "locator_polyn_0[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 776;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "locator_polyn_0[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 777;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "locator_polyn_0[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 778;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "locator_polyn_1";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 779;
	TREE_LEVEL = 0;
	CHILDREN = 780, 781, 782, 783, 784, 785, 786, 787;
}

DISPLAY_LINE
{
	CHANNEL = "locator_polyn_1[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 780;
	TREE_LEVEL = 1;
	PARENT = 779;
}

DISPLAY_LINE
{
	CHANNEL = "locator_polyn_1[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 781;
	TREE_LEVEL = 1;
	PARENT = 779;
}

DISPLAY_LINE
{
	CHANNEL = "locator_polyn_1[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 782;
	TREE_LEVEL = 1;
	PARENT = 779;
}

DISPLAY_LINE
{
	CHANNEL = "locator_polyn_1[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 783;
	TREE_LEVEL = 1;
	PARENT = 779;
}

DISPLAY_LINE
{
	CHANNEL = "locator_polyn_1[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 784;
	TREE_LEVEL = 1;
	PARENT = 779;
}

DISPLAY_LINE
{
	CHANNEL = "locator_polyn_1[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 785;
	TREE_LEVEL = 1;
	PARENT = 779;
}

DISPLAY_LINE
{
	CHANNEL = "locator_polyn_1[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 786;
	TREE_LEVEL = 1;
	PARENT = 779;
}

DISPLAY_LINE
{
	CHANNEL = "locator_polyn_1[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 787;
	TREE_LEVEL = 1;
	PARENT = 779;
}

DISPLAY_LINE
{
	CHANNEL = "locator_polyn_1[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 788;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "locator_polyn_1[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 789;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "locator_polyn_1[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 790;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "locator_polyn_1[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 791;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "locator_polyn_1[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 792;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "locator_polyn_1[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 793;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "locator_polyn_1[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 794;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "locator_polyn_1[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 795;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "locator_polyn_2";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 796;
	TREE_LEVEL = 0;
	CHILDREN = 797, 798, 799, 800, 801, 802, 803, 804;
}

DISPLAY_LINE
{
	CHANNEL = "locator_polyn_2[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 797;
	TREE_LEVEL = 1;
	PARENT = 796;
}

DISPLAY_LINE
{
	CHANNEL = "locator_polyn_2[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 798;
	TREE_LEVEL = 1;
	PARENT = 796;
}

DISPLAY_LINE
{
	CHANNEL = "locator_polyn_2[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 799;
	TREE_LEVEL = 1;
	PARENT = 796;
}

DISPLAY_LINE
{
	CHANNEL = "locator_polyn_2[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 800;
	TREE_LEVEL = 1;
	PARENT = 796;
}

DISPLAY_LINE
{
	CHANNEL = "locator_polyn_2[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 801;
	TREE_LEVEL = 1;
	PARENT = 796;
}

DISPLAY_LINE
{
	CHANNEL = "locator_polyn_2[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 802;
	TREE_LEVEL = 1;
	PARENT = 796;
}

DISPLAY_LINE
{
	CHANNEL = "locator_polyn_2[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 803;
	TREE_LEVEL = 1;
	PARENT = 796;
}

DISPLAY_LINE
{
	CHANNEL = "locator_polyn_2[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 804;
	TREE_LEVEL = 1;
	PARENT = 796;
}

DISPLAY_LINE
{
	CHANNEL = "locator_polyn_2[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 805;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "locator_polyn_2[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 806;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "locator_polyn_2[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 807;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "locator_polyn_2[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 808;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "locator_polyn_2[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 809;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "locator_polyn_2[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 810;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "locator_polyn_2[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 811;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "locator_polyn_2[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 812;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "magnitue_polyn_0";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 813;
	TREE_LEVEL = 0;
	CHILDREN = 814, 815, 816, 817, 818, 819, 820, 821;
}

DISPLAY_LINE
{
	CHANNEL = "magnitue_polyn_0[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 814;
	TREE_LEVEL = 1;
	PARENT = 813;
}

DISPLAY_LINE
{
	CHANNEL = "magnitue_polyn_0[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 815;
	TREE_LEVEL = 1;
	PARENT = 813;
}

DISPLAY_LINE
{
	CHANNEL = "magnitue_polyn_0[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 816;
	TREE_LEVEL = 1;
	PARENT = 813;
}

DISPLAY_LINE
{
	CHANNEL = "magnitue_polyn_0[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 817;
	TREE_LEVEL = 1;
	PARENT = 813;
}

DISPLAY_LINE
{
	CHANNEL = "magnitue_polyn_0[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 818;
	TREE_LEVEL = 1;
	PARENT = 813;
}

DISPLAY_LINE
{
	CHANNEL = "magnitue_polyn_0[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 819;
	TREE_LEVEL = 1;
	PARENT = 813;
}

DISPLAY_LINE
{
	CHANNEL = "magnitue_polyn_0[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 820;
	TREE_LEVEL = 1;
	PARENT = 813;
}

DISPLAY_LINE
{
	CHANNEL = "magnitue_polyn_0[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 821;
	TREE_LEVEL = 1;
	PARENT = 813;
}

DISPLAY_LINE
{
	CHANNEL = "magnitue_polyn_0[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 822;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "magnitue_polyn_0[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 823;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "magnitue_polyn_0[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 824;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "magnitue_polyn_0[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 825;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "magnitue_polyn_0[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 826;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "magnitue_polyn_0[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 827;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "magnitue_polyn_0[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 828;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "magnitue_polyn_0[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 829;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "magnitue_polyn_1";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 830;
	TREE_LEVEL = 0;
	CHILDREN = 831, 832, 833, 834, 835, 836, 837, 838;
}

DISPLAY_LINE
{
	CHANNEL = "magnitue_polyn_1[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 831;
	TREE_LEVEL = 1;
	PARENT = 830;
}

DISPLAY_LINE
{
	CHANNEL = "magnitue_polyn_1[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 832;
	TREE_LEVEL = 1;
	PARENT = 830;
}

DISPLAY_LINE
{
	CHANNEL = "magnitue_polyn_1[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 833;
	TREE_LEVEL = 1;
	PARENT = 830;
}

DISPLAY_LINE
{
	CHANNEL = "magnitue_polyn_1[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 834;
	TREE_LEVEL = 1;
	PARENT = 830;
}

DISPLAY_LINE
{
	CHANNEL = "magnitue_polyn_1[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 835;
	TREE_LEVEL = 1;
	PARENT = 830;
}

DISPLAY_LINE
{
	CHANNEL = "magnitue_polyn_1[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 836;
	TREE_LEVEL = 1;
	PARENT = 830;
}

DISPLAY_LINE
{
	CHANNEL = "magnitue_polyn_1[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 837;
	TREE_LEVEL = 1;
	PARENT = 830;
}

DISPLAY_LINE
{
	CHANNEL = "magnitue_polyn_1[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 838;
	TREE_LEVEL = 1;
	PARENT = 830;
}

DISPLAY_LINE
{
	CHANNEL = "magnitue_polyn_1[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 839;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "magnitue_polyn_1[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 840;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "magnitue_polyn_1[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 841;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "magnitue_polyn_1[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 842;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "magnitue_polyn_1[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 843;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "magnitue_polyn_1[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 844;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "magnitue_polyn_1[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 845;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "magnitue_polyn_1[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 846;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "magnitue_polyn_2";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 847;
	TREE_LEVEL = 0;
	CHILDREN = 848, 849, 850, 851, 852, 853, 854, 855;
}

DISPLAY_LINE
{
	CHANNEL = "magnitue_polyn_2[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 848;
	TREE_LEVEL = 1;
	PARENT = 847;
}

DISPLAY_LINE
{
	CHANNEL = "magnitue_polyn_2[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 849;
	TREE_LEVEL = 1;
	PARENT = 847;
}

DISPLAY_LINE
{
	CHANNEL = "magnitue_polyn_2[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 850;
	TREE_LEVEL = 1;
	PARENT = 847;
}

DISPLAY_LINE
{
	CHANNEL = "magnitue_polyn_2[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 851;
	TREE_LEVEL = 1;
	PARENT = 847;
}

DISPLAY_LINE
{
	CHANNEL = "magnitue_polyn_2[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 852;
	TREE_LEVEL = 1;
	PARENT = 847;
}

DISPLAY_LINE
{
	CHANNEL = "magnitue_polyn_2[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 853;
	TREE_LEVEL = 1;
	PARENT = 847;
}

DISPLAY_LINE
{
	CHANNEL = "magnitue_polyn_2[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 854;
	TREE_LEVEL = 1;
	PARENT = 847;
}

DISPLAY_LINE
{
	CHANNEL = "magnitue_polyn_2[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 855;
	TREE_LEVEL = 1;
	PARENT = 847;
}

DISPLAY_LINE
{
	CHANNEL = "magnitue_polyn_2[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 856;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "magnitue_polyn_2[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 857;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "magnitue_polyn_2[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 858;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "magnitue_polyn_2[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 859;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "magnitue_polyn_2[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 860;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "magnitue_polyn_2[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 861;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "magnitue_polyn_2[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 862;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "magnitue_polyn_2[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 863;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "modified_actual_distance";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 864;
	TREE_LEVEL = 0;
	CHILDREN = 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888;
}

DISPLAY_LINE
{
	CHANNEL = "modified_actual_distance[23]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 865;
	TREE_LEVEL = 1;
	PARENT = 864;
}

DISPLAY_LINE
{
	CHANNEL = "modified_actual_distance[22]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 866;
	TREE_LEVEL = 1;
	PARENT = 864;
}

DISPLAY_LINE
{
	CHANNEL = "modified_actual_distance[21]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 867;
	TREE_LEVEL = 1;
	PARENT = 864;
}

DISPLAY_LINE
{
	CHANNEL = "modified_actual_distance[20]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 868;
	TREE_LEVEL = 1;
	PARENT = 864;
}

DISPLAY_LINE
{
	CHANNEL = "modified_actual_distance[19]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 869;
	TREE_LEVEL = 1;
	PARENT = 864;
}

DISPLAY_LINE
{
	CHANNEL = "modified_actual_distance[18]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 870;
	TREE_LEVEL = 1;
	PARENT = 864;
}

DISPLAY_LINE
{
	CHANNEL = "modified_actual_distance[17]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 871;
	TREE_LEVEL = 1;
	PARENT = 864;
}

DISPLAY_LINE
{
	CHANNEL = "modified_actual_distance[16]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 872;
	TREE_LEVEL = 1;
	PARENT = 864;
}

DISPLAY_LINE
{
	CHANNEL = "modified_actual_distance[15]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 873;
	TREE_LEVEL = 1;
	PARENT = 864;
}

DISPLAY_LINE
{
	CHANNEL = "modified_actual_distance[14]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 874;
	TREE_LEVEL = 1;
	PARENT = 864;
}

DISPLAY_LINE
{
	CHANNEL = "modified_actual_distance[13]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 875;
	TREE_LEVEL = 1;
	PARENT = 864;
}

DISPLAY_LINE
{
	CHANNEL = "modified_actual_distance[12]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 876;
	TREE_LEVEL = 1;
	PARENT = 864;
}

DISPLAY_LINE
{
	CHANNEL = "modified_actual_distance[11]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 877;
	TREE_LEVEL = 1;
	PARENT = 864;
}

DISPLAY_LINE
{
	CHANNEL = "modified_actual_distance[10]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 878;
	TREE_LEVEL = 1;
	PARENT = 864;
}

DISPLAY_LINE
{
	CHANNEL = "modified_actual_distance[9]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 879;
	TREE_LEVEL = 1;
	PARENT = 864;
}

DISPLAY_LINE
{
	CHANNEL = "modified_actual_distance[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 880;
	TREE_LEVEL = 1;
	PARENT = 864;
}

DISPLAY_LINE
{
	CHANNEL = "modified_actual_distance[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 881;
	TREE_LEVEL = 1;
	PARENT = 864;
}

DISPLAY_LINE
{
	CHANNEL = "modified_actual_distance[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 882;
	TREE_LEVEL = 1;
	PARENT = 864;
}

DISPLAY_LINE
{
	CHANNEL = "modified_actual_distance[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 883;
	TREE_LEVEL = 1;
	PARENT = 864;
}

DISPLAY_LINE
{
	CHANNEL = "modified_actual_distance[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 884;
	TREE_LEVEL = 1;
	PARENT = 864;
}

DISPLAY_LINE
{
	CHANNEL = "modified_actual_distance[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 885;
	TREE_LEVEL = 1;
	PARENT = 864;
}

DISPLAY_LINE
{
	CHANNEL = "modified_actual_distance[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 886;
	TREE_LEVEL = 1;
	PARENT = 864;
}

DISPLAY_LINE
{
	CHANNEL = "modified_actual_distance[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 887;
	TREE_LEVEL = 1;
	PARENT = 864;
}

DISPLAY_LINE
{
	CHANNEL = "modified_actual_distance[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 888;
	TREE_LEVEL = 1;
	PARENT = 864;
}

DISPLAY_LINE
{
	CHANNEL = "modified_actual_distance[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 889;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "modified_actual_distance[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 890;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "modified_actual_distance[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 891;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "modified_actual_distance[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 892;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "modified_actual_distance[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 893;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "modified_actual_distance[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 894;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "modified_actual_distance[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 895;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "modified_actual_distance[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 896;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "modified_actual_distance[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 897;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "modified_actual_distance[9]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 898;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "modified_actual_distance[10]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 899;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "modified_actual_distance[11]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 900;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "modified_actual_distance[12]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 901;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "modified_actual_distance[13]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 902;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "modified_actual_distance[14]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 903;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "modified_actual_distance[15]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 904;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "modified_actual_distance[16]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 905;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "modified_actual_distance[17]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 906;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "modified_actual_distance[18]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 907;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "modified_actual_distance[19]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 908;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "modified_actual_distance[20]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 909;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "modified_actual_distance[21]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 910;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "modified_actual_distance[22]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 911;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "modified_actual_distance[23]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 912;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "modified_syndr_polyn_0";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 913;
	TREE_LEVEL = 0;
	CHILDREN = 914, 915, 916, 917, 918, 919, 920, 921;
}

DISPLAY_LINE
{
	CHANNEL = "modified_syndr_polyn_0[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 914;
	TREE_LEVEL = 1;
	PARENT = 913;
}

DISPLAY_LINE
{
	CHANNEL = "modified_syndr_polyn_0[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 915;
	TREE_LEVEL = 1;
	PARENT = 913;
}

DISPLAY_LINE
{
	CHANNEL = "modified_syndr_polyn_0[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 916;
	TREE_LEVEL = 1;
	PARENT = 913;
}

DISPLAY_LINE
{
	CHANNEL = "modified_syndr_polyn_0[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 917;
	TREE_LEVEL = 1;
	PARENT = 913;
}

DISPLAY_LINE
{
	CHANNEL = "modified_syndr_polyn_0[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 918;
	TREE_LEVEL = 1;
	PARENT = 913;
}

DISPLAY_LINE
{
	CHANNEL = "modified_syndr_polyn_0[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 919;
	TREE_LEVEL = 1;
	PARENT = 913;
}

DISPLAY_LINE
{
	CHANNEL = "modified_syndr_polyn_0[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 920;
	TREE_LEVEL = 1;
	PARENT = 913;
}

DISPLAY_LINE
{
	CHANNEL = "modified_syndr_polyn_0[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 921;
	TREE_LEVEL = 1;
	PARENT = 913;
}

DISPLAY_LINE
{
	CHANNEL = "modified_syndr_polyn_0[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 922;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "modified_syndr_polyn_0[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 923;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "modified_syndr_polyn_0[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 924;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "modified_syndr_polyn_0[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 925;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "modified_syndr_polyn_0[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 926;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "modified_syndr_polyn_0[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 927;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "modified_syndr_polyn_0[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 928;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "modified_syndr_polyn_0[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 929;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "modified_syndr_polyn_1";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 930;
	TREE_LEVEL = 0;
	CHILDREN = 931, 932, 933, 934, 935, 936, 937, 938;
}

DISPLAY_LINE
{
	CHANNEL = "modified_syndr_polyn_1[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 931;
	TREE_LEVEL = 1;
	PARENT = 930;
}

DISPLAY_LINE
{
	CHANNEL = "modified_syndr_polyn_1[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 932;
	TREE_LEVEL = 1;
	PARENT = 930;
}

DISPLAY_LINE
{
	CHANNEL = "modified_syndr_polyn_1[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 933;
	TREE_LEVEL = 1;
	PARENT = 930;
}

DISPLAY_LINE
{
	CHANNEL = "modified_syndr_polyn_1[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 934;
	TREE_LEVEL = 1;
	PARENT = 930;
}

DISPLAY_LINE
{
	CHANNEL = "modified_syndr_polyn_1[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 935;
	TREE_LEVEL = 1;
	PARENT = 930;
}

DISPLAY_LINE
{
	CHANNEL = "modified_syndr_polyn_1[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 936;
	TREE_LEVEL = 1;
	PARENT = 930;
}

DISPLAY_LINE
{
	CHANNEL = "modified_syndr_polyn_1[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 937;
	TREE_LEVEL = 1;
	PARENT = 930;
}

DISPLAY_LINE
{
	CHANNEL = "modified_syndr_polyn_1[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 938;
	TREE_LEVEL = 1;
	PARENT = 930;
}

DISPLAY_LINE
{
	CHANNEL = "modified_syndr_polyn_1[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 939;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "modified_syndr_polyn_1[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 940;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "modified_syndr_polyn_1[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 941;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "modified_syndr_polyn_1[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 942;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "modified_syndr_polyn_1[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 943;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "modified_syndr_polyn_1[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 944;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "modified_syndr_polyn_1[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 945;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "modified_syndr_polyn_1[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 946;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "modified_syndr_polyn_2";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 947;
	TREE_LEVEL = 0;
	CHILDREN = 948, 949, 950, 951, 952, 953, 954, 955;
}

DISPLAY_LINE
{
	CHANNEL = "modified_syndr_polyn_2[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 948;
	TREE_LEVEL = 1;
	PARENT = 947;
}

DISPLAY_LINE
{
	CHANNEL = "modified_syndr_polyn_2[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 949;
	TREE_LEVEL = 1;
	PARENT = 947;
}

DISPLAY_LINE
{
	CHANNEL = "modified_syndr_polyn_2[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 950;
	TREE_LEVEL = 1;
	PARENT = 947;
}

DISPLAY_LINE
{
	CHANNEL = "modified_syndr_polyn_2[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 951;
	TREE_LEVEL = 1;
	PARENT = 947;
}

DISPLAY_LINE
{
	CHANNEL = "modified_syndr_polyn_2[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 952;
	TREE_LEVEL = 1;
	PARENT = 947;
}

DISPLAY_LINE
{
	CHANNEL = "modified_syndr_polyn_2[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 953;
	TREE_LEVEL = 1;
	PARENT = 947;
}

DISPLAY_LINE
{
	CHANNEL = "modified_syndr_polyn_2[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 954;
	TREE_LEVEL = 1;
	PARENT = 947;
}

DISPLAY_LINE
{
	CHANNEL = "modified_syndr_polyn_2[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 955;
	TREE_LEVEL = 1;
	PARENT = 947;
}

DISPLAY_LINE
{
	CHANNEL = "modified_syndr_polyn_2[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 956;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "modified_syndr_polyn_2[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 957;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "modified_syndr_polyn_2[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 958;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "modified_syndr_polyn_2[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 959;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "modified_syndr_polyn_2[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 960;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "modified_syndr_polyn_2[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 961;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "modified_syndr_polyn_2[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 962;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "modified_syndr_polyn_2[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 963;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "new_channel_char";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 964;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "new_data";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 965;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "no_of_erasure_coefs_0";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 966;
	TREE_LEVEL = 0;
	CHILDREN = 967, 968, 969, 970, 971;
}

DISPLAY_LINE
{
	CHANNEL = "no_of_erasure_coefs_0[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 967;
	TREE_LEVEL = 1;
	PARENT = 966;
}

DISPLAY_LINE
{
	CHANNEL = "no_of_erasure_coefs_0[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 968;
	TREE_LEVEL = 1;
	PARENT = 966;
}

DISPLAY_LINE
{
	CHANNEL = "no_of_erasure_coefs_0[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 969;
	TREE_LEVEL = 1;
	PARENT = 966;
}

DISPLAY_LINE
{
	CHANNEL = "no_of_erasure_coefs_0[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 970;
	TREE_LEVEL = 1;
	PARENT = 966;
}

DISPLAY_LINE
{
	CHANNEL = "no_of_erasure_coefs_0[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 971;
	TREE_LEVEL = 1;
	PARENT = 966;
}

DISPLAY_LINE
{
	CHANNEL = "no_of_erasure_coefs_0[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 972;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "no_of_erasure_coefs_0[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 973;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "no_of_erasure_coefs_0[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 974;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "no_of_erasure_coefs_0[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 975;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "no_of_erasure_coefs_0[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 976;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "no_of_erasure_coefs_1";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 977;
	TREE_LEVEL = 0;
	CHILDREN = 978, 979, 980, 981, 982;
}

DISPLAY_LINE
{
	CHANNEL = "no_of_erasure_coefs_1[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 978;
	TREE_LEVEL = 1;
	PARENT = 977;
}

DISPLAY_LINE
{
	CHANNEL = "no_of_erasure_coefs_1[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 979;
	TREE_LEVEL = 1;
	PARENT = 977;
}

DISPLAY_LINE
{
	CHANNEL = "no_of_erasure_coefs_1[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 980;
	TREE_LEVEL = 1;
	PARENT = 977;
}

DISPLAY_LINE
{
	CHANNEL = "no_of_erasure_coefs_1[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 981;
	TREE_LEVEL = 1;
	PARENT = 977;
}

DISPLAY_LINE
{
	CHANNEL = "no_of_erasure_coefs_1[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 982;
	TREE_LEVEL = 1;
	PARENT = 977;
}

DISPLAY_LINE
{
	CHANNEL = "no_of_erasure_coefs_1[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 983;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "no_of_erasure_coefs_1[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 984;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "no_of_erasure_coefs_1[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 985;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "no_of_erasure_coefs_1[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 986;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "no_of_erasure_coefs_1[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 987;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "no_of_erasure_coefs_2";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 988;
	TREE_LEVEL = 0;
	CHILDREN = 989, 990, 991, 992, 993;
}

DISPLAY_LINE
{
	CHANNEL = "no_of_erasure_coefs_2[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 989;
	TREE_LEVEL = 1;
	PARENT = 988;
}

DISPLAY_LINE
{
	CHANNEL = "no_of_erasure_coefs_2[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 990;
	TREE_LEVEL = 1;
	PARENT = 988;
}

DISPLAY_LINE
{
	CHANNEL = "no_of_erasure_coefs_2[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 991;
	TREE_LEVEL = 1;
	PARENT = 988;
}

DISPLAY_LINE
{
	CHANNEL = "no_of_erasure_coefs_2[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 992;
	TREE_LEVEL = 1;
	PARENT = 988;
}

DISPLAY_LINE
{
	CHANNEL = "no_of_erasure_coefs_2[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 993;
	TREE_LEVEL = 1;
	PARENT = 988;
}

DISPLAY_LINE
{
	CHANNEL = "no_of_erasure_coefs_2[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 994;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "no_of_erasure_coefs_2[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 995;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "no_of_erasure_coefs_2[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 996;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "no_of_erasure_coefs_2[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 997;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "no_of_erasure_coefs_2[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 998;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "no_of_parity";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 999;
	TREE_LEVEL = 0;
	CHILDREN = 1000, 1001, 1002, 1003, 1004;
}

DISPLAY_LINE
{
	CHANNEL = "no_of_parity[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1000;
	TREE_LEVEL = 1;
	PARENT = 999;
}

DISPLAY_LINE
{
	CHANNEL = "no_of_parity[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1001;
	TREE_LEVEL = 1;
	PARENT = 999;
}

DISPLAY_LINE
{
	CHANNEL = "no_of_parity[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1002;
	TREE_LEVEL = 1;
	PARENT = 999;
}

DISPLAY_LINE
{
	CHANNEL = "no_of_parity[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1003;
	TREE_LEVEL = 1;
	PARENT = 999;
}

DISPLAY_LINE
{
	CHANNEL = "no_of_parity[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1004;
	TREE_LEVEL = 1;
	PARENT = 999;
}

DISPLAY_LINE
{
	CHANNEL = "no_of_parity[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1005;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "no_of_parity[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1006;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "no_of_parity[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1007;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "no_of_parity[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1008;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "no_of_parity[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1009;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "norm_sigma_square";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1010;
	TREE_LEVEL = 0;
	CHILDREN = 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025;
}

DISPLAY_LINE
{
	CHANNEL = "norm_sigma_square[14]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1011;
	TREE_LEVEL = 1;
	PARENT = 1010;
}

DISPLAY_LINE
{
	CHANNEL = "norm_sigma_square[13]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1012;
	TREE_LEVEL = 1;
	PARENT = 1010;
}

DISPLAY_LINE
{
	CHANNEL = "norm_sigma_square[12]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1013;
	TREE_LEVEL = 1;
	PARENT = 1010;
}

DISPLAY_LINE
{
	CHANNEL = "norm_sigma_square[11]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1014;
	TREE_LEVEL = 1;
	PARENT = 1010;
}

DISPLAY_LINE
{
	CHANNEL = "norm_sigma_square[10]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1015;
	TREE_LEVEL = 1;
	PARENT = 1010;
}

DISPLAY_LINE
{
	CHANNEL = "norm_sigma_square[9]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1016;
	TREE_LEVEL = 1;
	PARENT = 1010;
}

DISPLAY_LINE
{
	CHANNEL = "norm_sigma_square[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1017;
	TREE_LEVEL = 1;
	PARENT = 1010;
}

DISPLAY_LINE
{
	CHANNEL = "norm_sigma_square[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1018;
	TREE_LEVEL = 1;
	PARENT = 1010;
}

DISPLAY_LINE
{
	CHANNEL = "norm_sigma_square[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1019;
	TREE_LEVEL = 1;
	PARENT = 1010;
}

DISPLAY_LINE
{
	CHANNEL = "norm_sigma_square[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1020;
	TREE_LEVEL = 1;
	PARENT = 1010;
}

DISPLAY_LINE
{
	CHANNEL = "norm_sigma_square[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1021;
	TREE_LEVEL = 1;
	PARENT = 1010;
}

DISPLAY_LINE
{
	CHANNEL = "norm_sigma_square[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1022;
	TREE_LEVEL = 1;
	PARENT = 1010;
}

DISPLAY_LINE
{
	CHANNEL = "norm_sigma_square[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1023;
	TREE_LEVEL = 1;
	PARENT = 1010;
}

DISPLAY_LINE
{
	CHANNEL = "norm_sigma_square[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1024;
	TREE_LEVEL = 1;
	PARENT = 1010;
}

DISPLAY_LINE
{
	CHANNEL = "norm_sigma_square[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1025;
	TREE_LEVEL = 1;
	PARENT = 1010;
}

DISPLAY_LINE
{
	CHANNEL = "norm_sigma_square[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1026;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "norm_sigma_square[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1027;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "norm_sigma_square[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1028;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "norm_sigma_square[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1029;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "norm_sigma_square[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1030;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "norm_sigma_square[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1031;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "norm_sigma_square[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1032;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "norm_sigma_square[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1033;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "norm_sigma_square[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1034;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "norm_sigma_square[9]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1035;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "norm_sigma_square[10]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1036;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "norm_sigma_square[11]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1037;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "norm_sigma_square[12]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1038;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "norm_sigma_square[13]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1039;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "norm_sigma_square[14]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1040;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "normalized_signal";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1041;
	TREE_LEVEL = 0;
	CHILDREN = 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056;
}

DISPLAY_LINE
{
	CHANNEL = "normalized_signal[14]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1042;
	TREE_LEVEL = 1;
	PARENT = 1041;
}

DISPLAY_LINE
{
	CHANNEL = "normalized_signal[13]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1043;
	TREE_LEVEL = 1;
	PARENT = 1041;
}

DISPLAY_LINE
{
	CHANNEL = "normalized_signal[12]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1044;
	TREE_LEVEL = 1;
	PARENT = 1041;
}

DISPLAY_LINE
{
	CHANNEL = "normalized_signal[11]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1045;
	TREE_LEVEL = 1;
	PARENT = 1041;
}

DISPLAY_LINE
{
	CHANNEL = "normalized_signal[10]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1046;
	TREE_LEVEL = 1;
	PARENT = 1041;
}

DISPLAY_LINE
{
	CHANNEL = "normalized_signal[9]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1047;
	TREE_LEVEL = 1;
	PARENT = 1041;
}

DISPLAY_LINE
{
	CHANNEL = "normalized_signal[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1048;
	TREE_LEVEL = 1;
	PARENT = 1041;
}

DISPLAY_LINE
{
	CHANNEL = "normalized_signal[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1049;
	TREE_LEVEL = 1;
	PARENT = 1041;
}

DISPLAY_LINE
{
	CHANNEL = "normalized_signal[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1050;
	TREE_LEVEL = 1;
	PARENT = 1041;
}

DISPLAY_LINE
{
	CHANNEL = "normalized_signal[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1051;
	TREE_LEVEL = 1;
	PARENT = 1041;
}

DISPLAY_LINE
{
	CHANNEL = "normalized_signal[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1052;
	TREE_LEVEL = 1;
	PARENT = 1041;
}

DISPLAY_LINE
{
	CHANNEL = "normalized_signal[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1053;
	TREE_LEVEL = 1;
	PARENT = 1041;
}

DISPLAY_LINE
{
	CHANNEL = "normalized_signal[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1054;
	TREE_LEVEL = 1;
	PARENT = 1041;
}

DISPLAY_LINE
{
	CHANNEL = "normalized_signal[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1055;
	TREE_LEVEL = 1;
	PARENT = 1041;
}

DISPLAY_LINE
{
	CHANNEL = "normalized_signal[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1056;
	TREE_LEVEL = 1;
	PARENT = 1041;
}

DISPLAY_LINE
{
	CHANNEL = "normalized_signal[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1057;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "normalized_signal[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1058;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "normalized_signal[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1059;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "normalized_signal[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1060;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "normalized_signal[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1061;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "normalized_signal[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1062;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "normalized_signal[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1063;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "normalized_signal[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1064;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "normalized_signal[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1065;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "normalized_signal[9]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1066;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "normalized_signal[10]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1067;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "normalized_signal[11]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1068;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "normalized_signal[12]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1069;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "normalized_signal[13]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1070;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "normalized_signal[14]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1071;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "number_of_erasures_0";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1072;
	TREE_LEVEL = 0;
	CHILDREN = 1073, 1074, 1075, 1076, 1077;
}

DISPLAY_LINE
{
	CHANNEL = "number_of_erasures_0[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1073;
	TREE_LEVEL = 1;
	PARENT = 1072;
}

DISPLAY_LINE
{
	CHANNEL = "number_of_erasures_0[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1074;
	TREE_LEVEL = 1;
	PARENT = 1072;
}

DISPLAY_LINE
{
	CHANNEL = "number_of_erasures_0[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1075;
	TREE_LEVEL = 1;
	PARENT = 1072;
}

DISPLAY_LINE
{
	CHANNEL = "number_of_erasures_0[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1076;
	TREE_LEVEL = 1;
	PARENT = 1072;
}

DISPLAY_LINE
{
	CHANNEL = "number_of_erasures_0[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1077;
	TREE_LEVEL = 1;
	PARENT = 1072;
}

DISPLAY_LINE
{
	CHANNEL = "number_of_erasures_0[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1078;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "number_of_erasures_0[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1079;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "number_of_erasures_0[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1080;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "number_of_erasures_0[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1081;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "number_of_erasures_0[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1082;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "number_of_erasures_1";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1083;
	TREE_LEVEL = 0;
	CHILDREN = 1084, 1085, 1086, 1087, 1088;
}

DISPLAY_LINE
{
	CHANNEL = "number_of_erasures_1[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1084;
	TREE_LEVEL = 1;
	PARENT = 1083;
}

DISPLAY_LINE
{
	CHANNEL = "number_of_erasures_1[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1085;
	TREE_LEVEL = 1;
	PARENT = 1083;
}

DISPLAY_LINE
{
	CHANNEL = "number_of_erasures_1[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1086;
	TREE_LEVEL = 1;
	PARENT = 1083;
}

DISPLAY_LINE
{
	CHANNEL = "number_of_erasures_1[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1087;
	TREE_LEVEL = 1;
	PARENT = 1083;
}

DISPLAY_LINE
{
	CHANNEL = "number_of_erasures_1[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1088;
	TREE_LEVEL = 1;
	PARENT = 1083;
}

DISPLAY_LINE
{
	CHANNEL = "number_of_erasures_1[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1089;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "number_of_erasures_1[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1090;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "number_of_erasures_1[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1091;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "number_of_erasures_1[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1092;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "number_of_erasures_1[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1093;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "number_of_erasures_2";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1094;
	TREE_LEVEL = 0;
	CHILDREN = 1095, 1096, 1097, 1098, 1099;
}

DISPLAY_LINE
{
	CHANNEL = "number_of_erasures_2[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1095;
	TREE_LEVEL = 1;
	PARENT = 1094;
}

DISPLAY_LINE
{
	CHANNEL = "number_of_erasures_2[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1096;
	TREE_LEVEL = 1;
	PARENT = 1094;
}

DISPLAY_LINE
{
	CHANNEL = "number_of_erasures_2[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1097;
	TREE_LEVEL = 1;
	PARENT = 1094;
}

DISPLAY_LINE
{
	CHANNEL = "number_of_erasures_2[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1098;
	TREE_LEVEL = 1;
	PARENT = 1094;
}

DISPLAY_LINE
{
	CHANNEL = "number_of_erasures_2[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1099;
	TREE_LEVEL = 1;
	PARENT = 1094;
}

DISPLAY_LINE
{
	CHANNEL = "number_of_erasures_2[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1100;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "number_of_erasures_2[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1101;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "number_of_erasures_2[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1102;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "number_of_erasures_2[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1103;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "number_of_erasures_2[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1104;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "q";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1105;
	TREE_LEVEL = 0;
	CHILDREN = 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113;
}

DISPLAY_LINE
{
	CHANNEL = "q[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1106;
	TREE_LEVEL = 1;
	PARENT = 1105;
}

DISPLAY_LINE
{
	CHANNEL = "q[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1107;
	TREE_LEVEL = 1;
	PARENT = 1105;
}

DISPLAY_LINE
{
	CHANNEL = "q[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1108;
	TREE_LEVEL = 1;
	PARENT = 1105;
}

DISPLAY_LINE
{
	CHANNEL = "q[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1109;
	TREE_LEVEL = 1;
	PARENT = 1105;
}

DISPLAY_LINE
{
	CHANNEL = "q[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1110;
	TREE_LEVEL = 1;
	PARENT = 1105;
}

DISPLAY_LINE
{
	CHANNEL = "q[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1111;
	TREE_LEVEL = 1;
	PARENT = 1105;
}

DISPLAY_LINE
{
	CHANNEL = "q[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1112;
	TREE_LEVEL = 1;
	PARENT = 1105;
}

DISPLAY_LINE
{
	CHANNEL = "q[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1113;
	TREE_LEVEL = 1;
	PARENT = 1105;
}

DISPLAY_LINE
{
	CHANNEL = "q[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1114;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "q[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1115;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "q[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1116;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "q[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1117;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "q[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1118;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "q[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1119;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "q[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1120;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "q[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1121;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "q_fade";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1122;
	TREE_LEVEL = 0;
	CHILDREN = 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132;
}

DISPLAY_LINE
{
	CHANNEL = "q_fade[9]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1123;
	TREE_LEVEL = 1;
	PARENT = 1122;
}

DISPLAY_LINE
{
	CHANNEL = "q_fade[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1124;
	TREE_LEVEL = 1;
	PARENT = 1122;
}

DISPLAY_LINE
{
	CHANNEL = "q_fade[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1125;
	TREE_LEVEL = 1;
	PARENT = 1122;
}

DISPLAY_LINE
{
	CHANNEL = "q_fade[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1126;
	TREE_LEVEL = 1;
	PARENT = 1122;
}

DISPLAY_LINE
{
	CHANNEL = "q_fade[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1127;
	TREE_LEVEL = 1;
	PARENT = 1122;
}

DISPLAY_LINE
{
	CHANNEL = "q_fade[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1128;
	TREE_LEVEL = 1;
	PARENT = 1122;
}

DISPLAY_LINE
{
	CHANNEL = "q_fade[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1129;
	TREE_LEVEL = 1;
	PARENT = 1122;
}

DISPLAY_LINE
{
	CHANNEL = "q_fade[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1130;
	TREE_LEVEL = 1;
	PARENT = 1122;
}

DISPLAY_LINE
{
	CHANNEL = "q_fade[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1131;
	TREE_LEVEL = 1;
	PARENT = 1122;
}

DISPLAY_LINE
{
	CHANNEL = "q_fade[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1132;
	TREE_LEVEL = 1;
	PARENT = 1122;
}

DISPLAY_LINE
{
	CHANNEL = "q_fade[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1133;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "q_fade[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1134;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "q_fade[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1135;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "q_fade[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1136;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "q_fade[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1137;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "q_fade[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1138;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "q_fade[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1139;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "q_fade[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1140;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "q_fade[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1141;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "q_fade[9]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1142;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "q_in";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1143;
	TREE_LEVEL = 0;
	CHILDREN = 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153;
}

DISPLAY_LINE
{
	CHANNEL = "q_in[9]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1144;
	TREE_LEVEL = 1;
	PARENT = 1143;
}

DISPLAY_LINE
{
	CHANNEL = "q_in[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1145;
	TREE_LEVEL = 1;
	PARENT = 1143;
}

DISPLAY_LINE
{
	CHANNEL = "q_in[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1146;
	TREE_LEVEL = 1;
	PARENT = 1143;
}

DISPLAY_LINE
{
	CHANNEL = "q_in[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1147;
	TREE_LEVEL = 1;
	PARENT = 1143;
}

DISPLAY_LINE
{
	CHANNEL = "q_in[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1148;
	TREE_LEVEL = 1;
	PARENT = 1143;
}

DISPLAY_LINE
{
	CHANNEL = "q_in[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1149;
	TREE_LEVEL = 1;
	PARENT = 1143;
}

DISPLAY_LINE
{
	CHANNEL = "q_in[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1150;
	TREE_LEVEL = 1;
	PARENT = 1143;
}

DISPLAY_LINE
{
	CHANNEL = "q_in[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1151;
	TREE_LEVEL = 1;
	PARENT = 1143;
}

DISPLAY_LINE
{
	CHANNEL = "q_in[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1152;
	TREE_LEVEL = 1;
	PARENT = 1143;
}

DISPLAY_LINE
{
	CHANNEL = "q_in[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1153;
	TREE_LEVEL = 1;
	PARENT = 1143;
}

DISPLAY_LINE
{
	CHANNEL = "q_in[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1154;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "q_in[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1155;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "q_in[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1156;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "q_in[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1157;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "q_in[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1158;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "q_in[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1159;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "q_in[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1160;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "q_in[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1161;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "q_in[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1162;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "q_in[9]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1163;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "quotient";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1164;
	TREE_LEVEL = 0;
	CHILDREN = 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179;
}

DISPLAY_LINE
{
	CHANNEL = "quotient[14]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1165;
	TREE_LEVEL = 1;
	PARENT = 1164;
}

DISPLAY_LINE
{
	CHANNEL = "quotient[13]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1166;
	TREE_LEVEL = 1;
	PARENT = 1164;
}

DISPLAY_LINE
{
	CHANNEL = "quotient[12]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1167;
	TREE_LEVEL = 1;
	PARENT = 1164;
}

DISPLAY_LINE
{
	CHANNEL = "quotient[11]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1168;
	TREE_LEVEL = 1;
	PARENT = 1164;
}

DISPLAY_LINE
{
	CHANNEL = "quotient[10]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1169;
	TREE_LEVEL = 1;
	PARENT = 1164;
}

DISPLAY_LINE
{
	CHANNEL = "quotient[9]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1170;
	TREE_LEVEL = 1;
	PARENT = 1164;
}

DISPLAY_LINE
{
	CHANNEL = "quotient[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1171;
	TREE_LEVEL = 1;
	PARENT = 1164;
}

DISPLAY_LINE
{
	CHANNEL = "quotient[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1172;
	TREE_LEVEL = 1;
	PARENT = 1164;
}

DISPLAY_LINE
{
	CHANNEL = "quotient[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1173;
	TREE_LEVEL = 1;
	PARENT = 1164;
}

DISPLAY_LINE
{
	CHANNEL = "quotient[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1174;
	TREE_LEVEL = 1;
	PARENT = 1164;
}

DISPLAY_LINE
{
	CHANNEL = "quotient[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1175;
	TREE_LEVEL = 1;
	PARENT = 1164;
}

DISPLAY_LINE
{
	CHANNEL = "quotient[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1176;
	TREE_LEVEL = 1;
	PARENT = 1164;
}

DISPLAY_LINE
{
	CHANNEL = "quotient[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1177;
	TREE_LEVEL = 1;
	PARENT = 1164;
}

DISPLAY_LINE
{
	CHANNEL = "quotient[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1178;
	TREE_LEVEL = 1;
	PARENT = 1164;
}

DISPLAY_LINE
{
	CHANNEL = "quotient[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1179;
	TREE_LEVEL = 1;
	PARENT = 1164;
}

DISPLAY_LINE
{
	CHANNEL = "quotient[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1180;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "quotient[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1181;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "quotient[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1182;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "quotient[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1183;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "quotient[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1184;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "quotient[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1185;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "quotient[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1186;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "quotient[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1187;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "quotient[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1188;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "quotient[9]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1189;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "quotient[10]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1190;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "quotient[11]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1191;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "quotient[12]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1192;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "quotient[13]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1193;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "quotient[14]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1194;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "rd_enable";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1195;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "rdaddress";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1196;
	TREE_LEVEL = 0;
	CHILDREN = 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204;
}

DISPLAY_LINE
{
	CHANNEL = "rdaddress[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1197;
	TREE_LEVEL = 1;
	PARENT = 1196;
}

DISPLAY_LINE
{
	CHANNEL = "rdaddress[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1198;
	TREE_LEVEL = 1;
	PARENT = 1196;
}

DISPLAY_LINE
{
	CHANNEL = "rdaddress[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1199;
	TREE_LEVEL = 1;
	PARENT = 1196;
}

DISPLAY_LINE
{
	CHANNEL = "rdaddress[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1200;
	TREE_LEVEL = 1;
	PARENT = 1196;
}

DISPLAY_LINE
{
	CHANNEL = "rdaddress[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1201;
	TREE_LEVEL = 1;
	PARENT = 1196;
}

DISPLAY_LINE
{
	CHANNEL = "rdaddress[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1202;
	TREE_LEVEL = 1;
	PARENT = 1196;
}

DISPLAY_LINE
{
	CHANNEL = "rdaddress[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1203;
	TREE_LEVEL = 1;
	PARENT = 1196;
}

DISPLAY_LINE
{
	CHANNEL = "rdaddress[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1204;
	TREE_LEVEL = 1;
	PARENT = 1196;
}

DISPLAY_LINE
{
	CHANNEL = "rdaddress[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1205;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "rdaddress[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1206;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "rdaddress[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1207;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "rdaddress[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1208;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "rdaddress[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1209;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "rdaddress[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1210;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "rdaddress[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1211;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "rdaddress[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1212;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "rdaddress_fade";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1213;
	TREE_LEVEL = 0;
	CHILDREN = 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221;
}

DISPLAY_LINE
{
	CHANNEL = "rdaddress_fade[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1214;
	TREE_LEVEL = 1;
	PARENT = 1213;
}

DISPLAY_LINE
{
	CHANNEL = "rdaddress_fade[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1215;
	TREE_LEVEL = 1;
	PARENT = 1213;
}

DISPLAY_LINE
{
	CHANNEL = "rdaddress_fade[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1216;
	TREE_LEVEL = 1;
	PARENT = 1213;
}

DISPLAY_LINE
{
	CHANNEL = "rdaddress_fade[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1217;
	TREE_LEVEL = 1;
	PARENT = 1213;
}

DISPLAY_LINE
{
	CHANNEL = "rdaddress_fade[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1218;
	TREE_LEVEL = 1;
	PARENT = 1213;
}

DISPLAY_LINE
{
	CHANNEL = "rdaddress_fade[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1219;
	TREE_LEVEL = 1;
	PARENT = 1213;
}

DISPLAY_LINE
{
	CHANNEL = "rdaddress_fade[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1220;
	TREE_LEVEL = 1;
	PARENT = 1213;
}

DISPLAY_LINE
{
	CHANNEL = "rdaddress_fade[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1221;
	TREE_LEVEL = 1;
	PARENT = 1213;
}

DISPLAY_LINE
{
	CHANNEL = "rdaddress_fade[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1222;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "rdaddress_fade[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1223;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "rdaddress_fade[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1224;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "rdaddress_fade[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1225;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "rdaddress_fade[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1226;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "rdaddress_fade[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1227;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "rdaddress_fade[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1228;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "rdaddress_fade[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1229;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "rdaddress_in";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1230;
	TREE_LEVEL = 0;
	CHILDREN = 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241;
}

DISPLAY_LINE
{
	CHANNEL = "rdaddress_in[10]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1231;
	TREE_LEVEL = 1;
	PARENT = 1230;
}

DISPLAY_LINE
{
	CHANNEL = "rdaddress_in[9]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1232;
	TREE_LEVEL = 1;
	PARENT = 1230;
}

DISPLAY_LINE
{
	CHANNEL = "rdaddress_in[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1233;
	TREE_LEVEL = 1;
	PARENT = 1230;
}

DISPLAY_LINE
{
	CHANNEL = "rdaddress_in[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1234;
	TREE_LEVEL = 1;
	PARENT = 1230;
}

DISPLAY_LINE
{
	CHANNEL = "rdaddress_in[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1235;
	TREE_LEVEL = 1;
	PARENT = 1230;
}

DISPLAY_LINE
{
	CHANNEL = "rdaddress_in[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1236;
	TREE_LEVEL = 1;
	PARENT = 1230;
}

DISPLAY_LINE
{
	CHANNEL = "rdaddress_in[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1237;
	TREE_LEVEL = 1;
	PARENT = 1230;
}

DISPLAY_LINE
{
	CHANNEL = "rdaddress_in[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1238;
	TREE_LEVEL = 1;
	PARENT = 1230;
}

DISPLAY_LINE
{
	CHANNEL = "rdaddress_in[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1239;
	TREE_LEVEL = 1;
	PARENT = 1230;
}

DISPLAY_LINE
{
	CHANNEL = "rdaddress_in[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1240;
	TREE_LEVEL = 1;
	PARENT = 1230;
}

DISPLAY_LINE
{
	CHANNEL = "rdaddress_in[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1241;
	TREE_LEVEL = 1;
	PARENT = 1230;
}

DISPLAY_LINE
{
	CHANNEL = "rdaddress_in[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1242;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "rdaddress_in[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1243;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "rdaddress_in[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1244;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "rdaddress_in[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1245;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "rdaddress_in[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1246;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "rdaddress_in[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1247;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "rdaddress_in[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1248;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "rdaddress_in[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1249;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "rdaddress_in[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1250;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "rdaddress_in[9]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1251;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "rdaddress_in[10]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1252;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "recieved_codeword";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1253;
	TREE_LEVEL = 0;
	CHILDREN = 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261;
}

DISPLAY_LINE
{
	CHANNEL = "recieved_codeword[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1254;
	TREE_LEVEL = 1;
	PARENT = 1253;
}

DISPLAY_LINE
{
	CHANNEL = "recieved_codeword[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1255;
	TREE_LEVEL = 1;
	PARENT = 1253;
}

DISPLAY_LINE
{
	CHANNEL = "recieved_codeword[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1256;
	TREE_LEVEL = 1;
	PARENT = 1253;
}

DISPLAY_LINE
{
	CHANNEL = "recieved_codeword[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1257;
	TREE_LEVEL = 1;
	PARENT = 1253;
}

DISPLAY_LINE
{
	CHANNEL = "recieved_codeword[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1258;
	TREE_LEVEL = 1;
	PARENT = 1253;
}

DISPLAY_LINE
{
	CHANNEL = "recieved_codeword[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1259;
	TREE_LEVEL = 1;
	PARENT = 1253;
}

DISPLAY_LINE
{
	CHANNEL = "recieved_codeword[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1260;
	TREE_LEVEL = 1;
	PARENT = 1253;
}

DISPLAY_LINE
{
	CHANNEL = "recieved_codeword[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1261;
	TREE_LEVEL = 1;
	PARENT = 1253;
}

DISPLAY_LINE
{
	CHANNEL = "recieved_codeword[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1262;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "recieved_codeword[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1263;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "recieved_codeword[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1264;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "recieved_codeword[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1265;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "recieved_codeword[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1266;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "recieved_codeword[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1267;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "recieved_codeword[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1268;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "recieved_codeword[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1269;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "recvd_codeword";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1270;
	TREE_LEVEL = 0;
	CHILDREN = 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278;
}

DISPLAY_LINE
{
	CHANNEL = "recvd_codeword[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1271;
	TREE_LEVEL = 1;
	PARENT = 1270;
}

DISPLAY_LINE
{
	CHANNEL = "recvd_codeword[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1272;
	TREE_LEVEL = 1;
	PARENT = 1270;
}

DISPLAY_LINE
{
	CHANNEL = "recvd_codeword[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1273;
	TREE_LEVEL = 1;
	PARENT = 1270;
}

DISPLAY_LINE
{
	CHANNEL = "recvd_codeword[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1274;
	TREE_LEVEL = 1;
	PARENT = 1270;
}

DISPLAY_LINE
{
	CHANNEL = "recvd_codeword[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1275;
	TREE_LEVEL = 1;
	PARENT = 1270;
}

DISPLAY_LINE
{
	CHANNEL = "recvd_codeword[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1276;
	TREE_LEVEL = 1;
	PARENT = 1270;
}

DISPLAY_LINE
{
	CHANNEL = "recvd_codeword[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1277;
	TREE_LEVEL = 1;
	PARENT = 1270;
}

DISPLAY_LINE
{
	CHANNEL = "recvd_codeword[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1278;
	TREE_LEVEL = 1;
	PARENT = 1270;
}

DISPLAY_LINE
{
	CHANNEL = "recvd_codeword[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1279;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "recvd_codeword[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1280;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "recvd_codeword[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1281;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "recvd_codeword[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1282;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "recvd_codeword[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1283;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "recvd_codeword[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1284;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "recvd_codeword[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1285;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "recvd_codeword[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1286;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "recvd_erasure_flag_0";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1287;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "recvd_erasure_flag_1";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1288;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "recvd_erasure_flag_2";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1289;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "send_data";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1290;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "send_erasure_polyn_0";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1291;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "send_erasure_polyn_1";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1292;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "send_erasure_polyn_2";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1293;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "send_syndr_polyn_0";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1294;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "send_syndr_polyn_1";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1295;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "send_syndr_polyn_2";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1296;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "send_unmodified_syndr_polyn_0";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1297;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "send_unmodified_syndr_polyn_1";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1298;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "send_unmodified_syndr_polyn_2";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1299;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "sigma_square";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1300;
	TREE_LEVEL = 0;
	CHILDREN = 1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310;
}

DISPLAY_LINE
{
	CHANNEL = "sigma_square[9]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1301;
	TREE_LEVEL = 1;
	PARENT = 1300;
}

DISPLAY_LINE
{
	CHANNEL = "sigma_square[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1302;
	TREE_LEVEL = 1;
	PARENT = 1300;
}

DISPLAY_LINE
{
	CHANNEL = "sigma_square[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1303;
	TREE_LEVEL = 1;
	PARENT = 1300;
}

DISPLAY_LINE
{
	CHANNEL = "sigma_square[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1304;
	TREE_LEVEL = 1;
	PARENT = 1300;
}

DISPLAY_LINE
{
	CHANNEL = "sigma_square[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1305;
	TREE_LEVEL = 1;
	PARENT = 1300;
}

DISPLAY_LINE
{
	CHANNEL = "sigma_square[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1306;
	TREE_LEVEL = 1;
	PARENT = 1300;
}

DISPLAY_LINE
{
	CHANNEL = "sigma_square[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1307;
	TREE_LEVEL = 1;
	PARENT = 1300;
}

DISPLAY_LINE
{
	CHANNEL = "sigma_square[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1308;
	TREE_LEVEL = 1;
	PARENT = 1300;
}

DISPLAY_LINE
{
	CHANNEL = "sigma_square[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1309;
	TREE_LEVEL = 1;
	PARENT = 1300;
}

DISPLAY_LINE
{
	CHANNEL = "sigma_square[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1310;
	TREE_LEVEL = 1;
	PARENT = 1300;
}

DISPLAY_LINE
{
	CHANNEL = "sigma_square[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1311;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "sigma_square[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1312;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "sigma_square[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1313;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "sigma_square[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1314;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "sigma_square[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1315;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "sigma_square[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1316;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "sigma_square[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1317;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "sigma_square[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1318;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "sigma_square[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1319;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "sigma_square[9]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1320;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "signal_count";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1321;
	TREE_LEVEL = 0;
	CHILDREN = 1322, 1323, 1324, 1325;
}

DISPLAY_LINE
{
	CHANNEL = "signal_count[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1322;
	TREE_LEVEL = 1;
	PARENT = 1321;
}

DISPLAY_LINE
{
	CHANNEL = "signal_count[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1323;
	TREE_LEVEL = 1;
	PARENT = 1321;
}

DISPLAY_LINE
{
	CHANNEL = "signal_count[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1324;
	TREE_LEVEL = 1;
	PARENT = 1321;
}

DISPLAY_LINE
{
	CHANNEL = "signal_count[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1325;
	TREE_LEVEL = 1;
	PARENT = 1321;
}

DISPLAY_LINE
{
	CHANNEL = "signal_count[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1326;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "signal_count[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1327;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "signal_count[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1328;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "signal_count[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1329;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "start_erasure_polyn_compute";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1330;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "start_modified_syndrome_polyn_compute";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1331;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "state_case_0";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1332;
	TREE_LEVEL = 0;
	CHILDREN = 1333, 1334, 1335;
}

DISPLAY_LINE
{
	CHANNEL = "state_case_0[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1333;
	TREE_LEVEL = 1;
	PARENT = 1332;
}

DISPLAY_LINE
{
	CHANNEL = "state_case_0[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1334;
	TREE_LEVEL = 1;
	PARENT = 1332;
}

DISPLAY_LINE
{
	CHANNEL = "state_case_0[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1335;
	TREE_LEVEL = 1;
	PARENT = 1332;
}

DISPLAY_LINE
{
	CHANNEL = "state_case_0[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1336;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "state_case_0[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1337;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "state_case_0[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1338;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "state_case_1";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1339;
	TREE_LEVEL = 0;
	CHILDREN = 1340, 1341, 1342;
}

DISPLAY_LINE
{
	CHANNEL = "state_case_1[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1340;
	TREE_LEVEL = 1;
	PARENT = 1339;
}

DISPLAY_LINE
{
	CHANNEL = "state_case_1[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1341;
	TREE_LEVEL = 1;
	PARENT = 1339;
}

DISPLAY_LINE
{
	CHANNEL = "state_case_1[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1342;
	TREE_LEVEL = 1;
	PARENT = 1339;
}

DISPLAY_LINE
{
	CHANNEL = "state_case_1[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1343;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "state_case_1[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1344;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "state_case_1[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1345;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "state_case_2";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1346;
	TREE_LEVEL = 0;
	CHILDREN = 1347, 1348, 1349;
}

DISPLAY_LINE
{
	CHANNEL = "state_case_2[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1347;
	TREE_LEVEL = 1;
	PARENT = 1346;
}

DISPLAY_LINE
{
	CHANNEL = "state_case_2[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1348;
	TREE_LEVEL = 1;
	PARENT = 1346;
}

DISPLAY_LINE
{
	CHANNEL = "state_case_2[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1349;
	TREE_LEVEL = 1;
	PARENT = 1346;
}

DISPLAY_LINE
{
	CHANNEL = "state_case_2[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1350;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "state_case_2[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1351;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "state_case_2[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1352;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "syndr_coef_ready_0";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1353;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "syndr_coef_ready_1";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1354;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "syndr_coef_ready_2";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1355;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "syndrome";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1356;
	TREE_LEVEL = 0;
	CHILDREN = 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364;
}

DISPLAY_LINE
{
	CHANNEL = "syndrome[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1357;
	TREE_LEVEL = 1;
	PARENT = 1356;
}

DISPLAY_LINE
{
	CHANNEL = "syndrome[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1358;
	TREE_LEVEL = 1;
	PARENT = 1356;
}

DISPLAY_LINE
{
	CHANNEL = "syndrome[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1359;
	TREE_LEVEL = 1;
	PARENT = 1356;
}

DISPLAY_LINE
{
	CHANNEL = "syndrome[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1360;
	TREE_LEVEL = 1;
	PARENT = 1356;
}

DISPLAY_LINE
{
	CHANNEL = "syndrome[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1361;
	TREE_LEVEL = 1;
	PARENT = 1356;
}

DISPLAY_LINE
{
	CHANNEL = "syndrome[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1362;
	TREE_LEVEL = 1;
	PARENT = 1356;
}

DISPLAY_LINE
{
	CHANNEL = "syndrome[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1363;
	TREE_LEVEL = 1;
	PARENT = 1356;
}

DISPLAY_LINE
{
	CHANNEL = "syndrome[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1364;
	TREE_LEVEL = 1;
	PARENT = 1356;
}

DISPLAY_LINE
{
	CHANNEL = "syndrome[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1365;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "syndrome[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1366;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "syndrome[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1367;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "syndrome[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1368;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "syndrome[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1369;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "syndrome[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1370;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "syndrome[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1371;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "syndrome[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1372;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "threshold_0";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1373;
	TREE_LEVEL = 0;
	CHILDREN = 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382;
}

DISPLAY_LINE
{
	CHANNEL = "threshold_0[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1374;
	TREE_LEVEL = 1;
	PARENT = 1373;
}

DISPLAY_LINE
{
	CHANNEL = "threshold_0[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1375;
	TREE_LEVEL = 1;
	PARENT = 1373;
}

DISPLAY_LINE
{
	CHANNEL = "threshold_0[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1376;
	TREE_LEVEL = 1;
	PARENT = 1373;
}

DISPLAY_LINE
{
	CHANNEL = "threshold_0[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1377;
	TREE_LEVEL = 1;
	PARENT = 1373;
}

DISPLAY_LINE
{
	CHANNEL = "threshold_0[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1378;
	TREE_LEVEL = 1;
	PARENT = 1373;
}

DISPLAY_LINE
{
	CHANNEL = "threshold_0[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1379;
	TREE_LEVEL = 1;
	PARENT = 1373;
}

DISPLAY_LINE
{
	CHANNEL = "threshold_0[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1380;
	TREE_LEVEL = 1;
	PARENT = 1373;
}

DISPLAY_LINE
{
	CHANNEL = "threshold_0[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1381;
	TREE_LEVEL = 1;
	PARENT = 1373;
}

DISPLAY_LINE
{
	CHANNEL = "threshold_0[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1382;
	TREE_LEVEL = 1;
	PARENT = 1373;
}

DISPLAY_LINE
{
	CHANNEL = "threshold_0[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1383;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "threshold_0[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1384;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "threshold_0[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1385;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "threshold_0[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1386;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "threshold_0[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1387;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "threshold_0[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1388;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "threshold_0[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1389;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "threshold_0[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1390;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "threshold_0[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1391;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "threshold_1";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1392;
	TREE_LEVEL = 0;
	CHILDREN = 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401;
}

DISPLAY_LINE
{
	CHANNEL = "threshold_1[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1393;
	TREE_LEVEL = 1;
	PARENT = 1392;
}

DISPLAY_LINE
{
	CHANNEL = "threshold_1[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1394;
	TREE_LEVEL = 1;
	PARENT = 1392;
}

DISPLAY_LINE
{
	CHANNEL = "threshold_1[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1395;
	TREE_LEVEL = 1;
	PARENT = 1392;
}

DISPLAY_LINE
{
	CHANNEL = "threshold_1[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1396;
	TREE_LEVEL = 1;
	PARENT = 1392;
}

DISPLAY_LINE
{
	CHANNEL = "threshold_1[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1397;
	TREE_LEVEL = 1;
	PARENT = 1392;
}

DISPLAY_LINE
{
	CHANNEL = "threshold_1[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1398;
	TREE_LEVEL = 1;
	PARENT = 1392;
}

DISPLAY_LINE
{
	CHANNEL = "threshold_1[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1399;
	TREE_LEVEL = 1;
	PARENT = 1392;
}

DISPLAY_LINE
{
	CHANNEL = "threshold_1[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1400;
	TREE_LEVEL = 1;
	PARENT = 1392;
}

DISPLAY_LINE
{
	CHANNEL = "threshold_1[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1401;
	TREE_LEVEL = 1;
	PARENT = 1392;
}

DISPLAY_LINE
{
	CHANNEL = "threshold_1[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1402;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "threshold_1[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1403;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "threshold_1[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1404;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "threshold_1[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1405;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "threshold_1[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1406;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "threshold_1[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1407;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "threshold_1[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1408;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "threshold_1[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1409;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "threshold_1[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1410;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "threshold_2";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1411;
	TREE_LEVEL = 0;
	CHILDREN = 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420;
}

DISPLAY_LINE
{
	CHANNEL = "threshold_2[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1412;
	TREE_LEVEL = 1;
	PARENT = 1411;
}

DISPLAY_LINE
{
	CHANNEL = "threshold_2[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1413;
	TREE_LEVEL = 1;
	PARENT = 1411;
}

DISPLAY_LINE
{
	CHANNEL = "threshold_2[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1414;
	TREE_LEVEL = 1;
	PARENT = 1411;
}

DISPLAY_LINE
{
	CHANNEL = "threshold_2[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1415;
	TREE_LEVEL = 1;
	PARENT = 1411;
}

DISPLAY_LINE
{
	CHANNEL = "threshold_2[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1416;
	TREE_LEVEL = 1;
	PARENT = 1411;
}

DISPLAY_LINE
{
	CHANNEL = "threshold_2[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1417;
	TREE_LEVEL = 1;
	PARENT = 1411;
}

DISPLAY_LINE
{
	CHANNEL = "threshold_2[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1418;
	TREE_LEVEL = 1;
	PARENT = 1411;
}

DISPLAY_LINE
{
	CHANNEL = "threshold_2[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1419;
	TREE_LEVEL = 1;
	PARENT = 1411;
}

DISPLAY_LINE
{
	CHANNEL = "threshold_2[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1420;
	TREE_LEVEL = 1;
	PARENT = 1411;
}

DISPLAY_LINE
{
	CHANNEL = "threshold_2[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1421;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "threshold_2[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1422;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "threshold_2[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1423;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "threshold_2[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1424;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "threshold_2[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1425;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "threshold_2[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1426;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "threshold_2[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1427;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "threshold_2[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1428;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "threshold_2[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1429;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "unmodified_syndr_polyn_0";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1430;
	TREE_LEVEL = 0;
	CHILDREN = 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438;
}

DISPLAY_LINE
{
	CHANNEL = "unmodified_syndr_polyn_0[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1431;
	TREE_LEVEL = 1;
	PARENT = 1430;
}

DISPLAY_LINE
{
	CHANNEL = "unmodified_syndr_polyn_0[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1432;
	TREE_LEVEL = 1;
	PARENT = 1430;
}

DISPLAY_LINE
{
	CHANNEL = "unmodified_syndr_polyn_0[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1433;
	TREE_LEVEL = 1;
	PARENT = 1430;
}

DISPLAY_LINE
{
	CHANNEL = "unmodified_syndr_polyn_0[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1434;
	TREE_LEVEL = 1;
	PARENT = 1430;
}

DISPLAY_LINE
{
	CHANNEL = "unmodified_syndr_polyn_0[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1435;
	TREE_LEVEL = 1;
	PARENT = 1430;
}

DISPLAY_LINE
{
	CHANNEL = "unmodified_syndr_polyn_0[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1436;
	TREE_LEVEL = 1;
	PARENT = 1430;
}

DISPLAY_LINE
{
	CHANNEL = "unmodified_syndr_polyn_0[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1437;
	TREE_LEVEL = 1;
	PARENT = 1430;
}

DISPLAY_LINE
{
	CHANNEL = "unmodified_syndr_polyn_0[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1438;
	TREE_LEVEL = 1;
	PARENT = 1430;
}

DISPLAY_LINE
{
	CHANNEL = "unmodified_syndr_polyn_0[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1439;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "unmodified_syndr_polyn_0[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1440;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "unmodified_syndr_polyn_0[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1441;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "unmodified_syndr_polyn_0[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1442;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "unmodified_syndr_polyn_0[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1443;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "unmodified_syndr_polyn_0[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1444;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "unmodified_syndr_polyn_0[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1445;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "unmodified_syndr_polyn_0[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1446;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "unmodified_syndr_polyn_1";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1447;
	TREE_LEVEL = 0;
	CHILDREN = 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455;
}

DISPLAY_LINE
{
	CHANNEL = "unmodified_syndr_polyn_1[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1448;
	TREE_LEVEL = 1;
	PARENT = 1447;
}

DISPLAY_LINE
{
	CHANNEL = "unmodified_syndr_polyn_1[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1449;
	TREE_LEVEL = 1;
	PARENT = 1447;
}

DISPLAY_LINE
{
	CHANNEL = "unmodified_syndr_polyn_1[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1450;
	TREE_LEVEL = 1;
	PARENT = 1447;
}

DISPLAY_LINE
{
	CHANNEL = "unmodified_syndr_polyn_1[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1451;
	TREE_LEVEL = 1;
	PARENT = 1447;
}

DISPLAY_LINE
{
	CHANNEL = "unmodified_syndr_polyn_1[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1452;
	TREE_LEVEL = 1;
	PARENT = 1447;
}

DISPLAY_LINE
{
	CHANNEL = "unmodified_syndr_polyn_1[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1453;
	TREE_LEVEL = 1;
	PARENT = 1447;
}

DISPLAY_LINE
{
	CHANNEL = "unmodified_syndr_polyn_1[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1454;
	TREE_LEVEL = 1;
	PARENT = 1447;
}

DISPLAY_LINE
{
	CHANNEL = "unmodified_syndr_polyn_1[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1455;
	TREE_LEVEL = 1;
	PARENT = 1447;
}

DISPLAY_LINE
{
	CHANNEL = "unmodified_syndr_polyn_1[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1456;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "unmodified_syndr_polyn_1[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1457;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "unmodified_syndr_polyn_1[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1458;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "unmodified_syndr_polyn_1[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1459;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "unmodified_syndr_polyn_1[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1460;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "unmodified_syndr_polyn_1[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1461;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "unmodified_syndr_polyn_1[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1462;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "unmodified_syndr_polyn_1[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1463;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "unmodified_syndr_polyn_2";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1464;
	TREE_LEVEL = 0;
	CHILDREN = 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472;
}

DISPLAY_LINE
{
	CHANNEL = "unmodified_syndr_polyn_2[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1465;
	TREE_LEVEL = 1;
	PARENT = 1464;
}

DISPLAY_LINE
{
	CHANNEL = "unmodified_syndr_polyn_2[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1466;
	TREE_LEVEL = 1;
	PARENT = 1464;
}

DISPLAY_LINE
{
	CHANNEL = "unmodified_syndr_polyn_2[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1467;
	TREE_LEVEL = 1;
	PARENT = 1464;
}

DISPLAY_LINE
{
	CHANNEL = "unmodified_syndr_polyn_2[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1468;
	TREE_LEVEL = 1;
	PARENT = 1464;
}

DISPLAY_LINE
{
	CHANNEL = "unmodified_syndr_polyn_2[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1469;
	TREE_LEVEL = 1;
	PARENT = 1464;
}

DISPLAY_LINE
{
	CHANNEL = "unmodified_syndr_polyn_2[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1470;
	TREE_LEVEL = 1;
	PARENT = 1464;
}

DISPLAY_LINE
{
	CHANNEL = "unmodified_syndr_polyn_2[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1471;
	TREE_LEVEL = 1;
	PARENT = 1464;
}

DISPLAY_LINE
{
	CHANNEL = "unmodified_syndr_polyn_2[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1472;
	TREE_LEVEL = 1;
	PARENT = 1464;
}

DISPLAY_LINE
{
	CHANNEL = "unmodified_syndr_polyn_2[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1473;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "unmodified_syndr_polyn_2[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1474;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "unmodified_syndr_polyn_2[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1475;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "unmodified_syndr_polyn_2[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1476;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "unmodified_syndr_polyn_2[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1477;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "unmodified_syndr_polyn_2[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1478;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "unmodified_syndr_polyn_2[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1479;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "unmodified_syndr_polyn_2[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1480;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "wren";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1481;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "wren_decoder_in_buffer";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1482;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "write_addr";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1483;
	TREE_LEVEL = 0;
	CHILDREN = 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491;
}

DISPLAY_LINE
{
	CHANNEL = "write_addr[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1484;
	TREE_LEVEL = 1;
	PARENT = 1483;
}

DISPLAY_LINE
{
	CHANNEL = "write_addr[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1485;
	TREE_LEVEL = 1;
	PARENT = 1483;
}

DISPLAY_LINE
{
	CHANNEL = "write_addr[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1486;
	TREE_LEVEL = 1;
	PARENT = 1483;
}

DISPLAY_LINE
{
	CHANNEL = "write_addr[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1487;
	TREE_LEVEL = 1;
	PARENT = 1483;
}

DISPLAY_LINE
{
	CHANNEL = "write_addr[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1488;
	TREE_LEVEL = 1;
	PARENT = 1483;
}

DISPLAY_LINE
{
	CHANNEL = "write_addr[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1489;
	TREE_LEVEL = 1;
	PARENT = 1483;
}

DISPLAY_LINE
{
	CHANNEL = "write_addr[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1490;
	TREE_LEVEL = 1;
	PARENT = 1483;
}

DISPLAY_LINE
{
	CHANNEL = "write_addr[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1491;
	TREE_LEVEL = 1;
	PARENT = 1483;
}

DISPLAY_LINE
{
	CHANNEL = "write_addr[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1492;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "write_addr[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1493;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "write_addr[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1494;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "write_addr[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1495;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "write_addr[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1496;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "write_addr[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1497;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "write_addr[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1498;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "write_addr[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1499;
	TREE_LEVEL = 0;
}

TIME_BAR
{
	TIME = 348706;
	MASTER = TRUE;
}
;
