/******************** IntegralImageCache *********************/

/***** package *****/
package pkg_scaleCache;
	import globalDefinitions::*;
	
	// ---- public params ---- //

	// physical size
	parameter int scaleRowSize = supportedImageWidth;
	parameter int scaleColSize = supportedImageHeight;
	
	// row and col bits needed
	parameter int scaleRowBits = log2(scaleRowSize);	
	parameter int scaleColBits = log2(scaleColSize);


	// bits needed to construct the whole memory
	parameter int scaleAddressBits = log2(scaleRowBits * scaleColBits);	
	
	// minimum word size needed to store the intergral image
	parameter int scaleDepth = inputImageDepth;		
	
	// ---- private params ---- //		
	parameter int	WORD_SIZE = scaleDepth;
	parameter int	WORDS = windowCacheBlocking;	
	parameter int 	COL_WIDTH = scaleColBits;
	parameter int 	ROW_WIDTH = scaleRowBits;	
	parameter int	ADDR_WIDTH = scaleAddressBits;
	
endpackage

	
/***** interface *****/


interface intf_integralImageCache_Write;
	import  pkg_integralImageCache::*;
	logic unsigned [COL_WIDTH -1:0] waddrY;
	logic unsigned [ROW_WIDTH -1:0] waddrX;
	logic unsigned [WORD_SIZE-1:0] wdata; 	
	logic we;
endinterface

/***** interface *****/


interface intf_integralImageCache_Read;
	import  pkg_integralImageCache::*;
	logic unsigned [COL_WIDTH -1:0] raddrY;
	logic unsigned [BLOCK_WIDTH -1:0] raddrXBlock;
	logic unsigned [WORDS-1:0][WORD_SIZE-1:0] q;	
endinterface

